# -*- coding=utf-8 -*-
# Copyright (C) 2016-2022 ActionTech.
# License: https://www.mozilla.org/en-US/MPL/2.0 MPL version 2 or higher.
# Created by zhangqian at 2022/03/10
Feature: test hint
# DBLE0REQ-1641/DBLE0REQ-1648/DBLE0REQ-1664
# Affected by the above issue, dble cannot recognize the post-er relationship, so hint does not support the post-er relationship
# So when there is an er relationship with a post-position, currently it can only be written without an er relationship
# After the above issue is repaired, you need to pay attention to the sql of such scenarios and modify the case

  @delete_mysql_tables
  Scenario: shardingTable  + globalTable  +  globalTable  Directed Acyclic Graph && right join    #1
  """
      {'delete_mysql_tables': {'mysql-master1': ['db1', 'db2', 'db3'], 'mysql-master2': ['db1', 'db2', 'db3'], 'mysql':['schema1']}}
  """
    Given delete the following xml segment
      | file         | parent         | child                  |
      | sharding.xml | {'tag':'root'} | {'tag':'schema'}       |
      | sharding.xml | {'tag':'root'} | {'tag':'shardingNode'} |
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
    """
        <schema name="schema1" sqlMaxLimit="100">
            <shardingTable name="Employee" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname" />
            <globalTable name="Dept" shardingNode="dn1,dn3" />
            <globalTable name="Info" shardingNode="dn3,dn4" />
            <globalTable name="Level" shardingNode="dn5,dn6" />
        </schema>

        <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
        <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
        <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
        <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
        <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />
        <shardingNode dbGroup="ha_group2" database="db3" name="dn6" />

        <function name="func_hashString" class="StringHash">
            <property name="partitionCount">2</property>
            <property name="partitionLength">1</property>
            <property name="hashSlice">0:2</property>
        </function>
    """
    Then execute admin cmd "reload @@config_all"
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

     #create table used in comparing mysql
    Then execute sql in "mysql" in "mysql" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | True    | create database if not exists schema1                                                                                                                                                                                                                                                                             | mysql   | success |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_1"
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_1" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_2"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a &( b \| c)  */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_2" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a &( b \| c)  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | conn   | toClose | sql                                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c   */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                              |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                  |
      | order_1             | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn3_0//dn3_1//dn4_0 | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                       |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;       | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c& (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1   | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1     | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn1_1//dn3_0        | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1             | MERGE           | dn1_1//dn3_0                                                                            |
      | join_1              | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1             | ORDER           | join_1                                                                                  |
      | shuffle_field_2     | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn3_0//dn3_1//dn4_0 | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE           | dn3_0//dn3_1//dn4_0                                                                     |
      | join_2              | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3     | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                              |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                  |
      | order_1             | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn3_0//dn3_1//dn4_0 | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                       |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                            | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c\|b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;    | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c\|a)&b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;       | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_1//dn3_0//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_1//dn3_0//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_14"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c ) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_14" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_1//dn3_0//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_1//dn3_0//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_15"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_15" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_1//dn3_0//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_1//dn3_0//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_16"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_16" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0//dn3_0        | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1             | MERGE           | dn1_0//dn3_0                                                                            |
      | dn1_0//dn1_1        | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1   | MERGE_AND_ORDER | dn1_0; dn2_0//dn1_1; dn2_0                                                              |
      | shuffle_field_3     | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1              | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1             | ORDER           | join_1                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn3_0//dn3_1//dn4_0 | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE           | dn3_0//dn3_1//dn4_0                                                                     |
      | join_2              | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2     | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_17"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_17" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                                  |
      | dn1_0//dn1_1        | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1              | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_1; merge_2                                                                                                                                                      |
      | shuffle_field_2     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_18"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_18" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0//dn1_1        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                          |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1             | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn3_0//dn3_1//dn4_0 | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                             |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                 |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                             | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;        | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) &b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c & (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_19"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_19" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1   | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1     | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn1_1//dn3_0        | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1             | MERGE           | dn1_1//dn3_0                                                                            |
      | join_1              | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1             | ORDER           | join_1                                                                                  |
      | shuffle_field_2     | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn3_1//dn3_0//dn4_0 | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE           | dn3_1//dn3_0//dn4_0                                                                     |
      | join_2              | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3     | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_1//dn3_0//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_1//dn3_0//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_21"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_21" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_1//dn3_0                                                                                                                                                                  |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_1//dn3_0//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_1//dn3_0//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_22"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & c & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_22" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn3_0//dn4_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC              |
      | merge_1             | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1             | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1//dn3_0//dn3_1 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2             | MERGE                 | dn1_1//dn3_0//dn3_1                                                                                                                                                         |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=a & c & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_23"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| c) & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_23" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn3_0//dn4_0        | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1             | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1//dn3_0//dn3_1 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2             | MERGE                 | dn1_1//dn3_0//dn3_1                                                                                                                                                         |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| c) & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_24"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_24" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                      |
      | dn1_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                   |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                              |
      | dn3_0//dn4_0        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC |
      | merge_1             | MERGE                 | dn3_0//dn4_0                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; merge_1                                                                                                                                       |
      | order_1             | ORDER                 | join_1                                                                                                                                                         |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                        |
      | dn1_1//dn3_0//dn3_1 | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                             |
      | merge_2             | MERGE                 | dn1_1//dn3_0//dn3_1                                                                                                                                            |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                       |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_25"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_25" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0//dn3_0        | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1             | MERGE           | dn1_0//dn3_0                                                                            |
      | dn1_0//dn1_1        | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1   | MERGE_AND_ORDER | dn1_0; dn2_0//dn1_1; dn2_0                                                              |
      | shuffle_field_3     | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1              | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1             | ORDER           | join_1                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn3_1//dn3_0//dn4_0 | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE           | dn3_1//dn3_0//dn4_0                                                                     |
      | join_2              | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2     | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_26"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_26" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                                  |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | dn1_0//dn1_1        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                    |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                      |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_27"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a& c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_27" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                                  |
      | dn1_0//dn1_1        | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0               | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1              | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1             | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                           |
      | join_2              | JOIN                  | shuffle_field_1; merge_2                                                                                                                                                      |
      | shuffle_field_2     | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a& c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=(b, c) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn3_0             | BASE SQL              | select `b`.`manager`,`c`.`country`,`c`.`name` from  `Dept` `b` join  `Info` `c` on `b`.`manager` = `c`.`name` where 1=1  order by `b`.`manager` ASC,`c`.`name` ASC                            |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                                   |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=(b, c) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_29"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_29" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn3_0//dn4_0        | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | dn1_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1             | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1//dn3_0//dn3_1 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2             | MERGE                 | dn1_1//dn3_0//dn3_1                                                                                                                                                         |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_30"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & a) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_30" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0//dn4_0        | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                            |
      | merge_1             | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1             | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2     | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_1//dn3_0//dn3_1 | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                                  |
      | merge_2             | MERGE                 | dn1_1//dn3_0//dn3_1                                                                                                                                                 |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3     | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(c & a) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_31"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=(c, b) \| a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_31" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                                               |
      | dn3_0             | BASE SQL        | select `b`.`manager`,`c`.`country`,`c`.`name` from  `Info` `c` join  `Dept` `b` on `c`.`name` = `b`.`manager` where 1=1  order by `c`.`name` ASC,`b`.`manager` ASC |
      | merge_1           | MERGE           | dn3_0                                                                                                                                                   |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC,`a`.`name` ASC                                                            |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC,`a`.`name` ASC                                                            |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                                            |
      | shuffle_field_2   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                       |
      | join_1            | JOIN            | merge_1; shuffle_field_2                                                                                                                                |
      | order_1           | ORDER           | join_1                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(c, b) \| a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                          | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b\|c)&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check table b & or \| condition                                | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;    | hint explain build failures! check table c & or \| condition                                | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | hint explain build failures! check ER condition                                             | schema1 |

    #    # right join & right join & 0 er & ab, ac  --> not support at this version
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                                                                   | db      |
      | conn_0 | False   | explain /*!dble:plan=c & b & a*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager RIGHT JOIN Level c ON a.level=c.levelname ORDER BY a.name; | we don't support optimize this sql use hints yet. Maybe this sql contains 'multi right join' or 'cartesian with relation' or 'subquery'. | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_32"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_32" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn1_0//dn3_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn1_0//dn3_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_0//dn1_1      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                      |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn5_0//dn6_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC   |
      | merge_2           | MERGE                 | dn5_0//dn6_0                                                                                                                                                                    |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                        |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_33"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_33" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0//dn3_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_0//dn3_0                                                                                                                                                                  |
      | dn1_0//dn1_1      | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0//dn6_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC |
      | merge_2           | MERGE                 | dn5_0//dn6_0                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_1; merge_2                                                                                                                                                      |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_34"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_34" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn1_0//dn3_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn1_0//dn3_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_0//dn1_1      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                                      |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn5_0//dn6_0      | BASE SQL              | select `c`.`salary`,`c`.`levelname` from  `Level` `c` order by `c`.`levelname` ASC                                                                                              |
      | merge_2           | MERGE                 | dn5_0//dn6_0                                                                                                                                                                    |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                        |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=b&(a\|c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;    | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c\|a) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | You are using wrong hint. please check the node 'c',there are no previous nodes connect to it.  | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c&a)\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_35"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_35" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1          | SQL/REF-2                                                                     |
      | dn1_0//dn3_0        | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC              |
      | merge_1             | MERGE           | dn1_0//dn3_0                                                                  |
      | dn1_0//dn1_1        | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER | dn1_0; dn2_0//dn1_1; dn2_0                                                    |
      | shuffle_field_3     | SHUFFLE_FIELD   | merge_and_order_1                                                             |
      | join_1              | JOIN            | merge_1; shuffle_field_3                                                      |
      | shuffle_field_1     | SHUFFLE_FIELD   | join_1                                                                        |
      | dn3_0//dn3_1//dn4_0 | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC      |
      | merge_2             | MERGE           | dn3_0//dn3_1//dn4_0                                                           |
      | join_2              | JOIN            | shuffle_field_1; merge_2                                                      |
      | order_1             | ORDER           | join_2                                                                        |
      | shuffle_field_2     | SHUFFLE_FIELD   | order_1                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_37"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_37" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0//dn1_1        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                          |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2     | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                 |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | order_1             | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3     | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_36"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_36" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0//dn1_1        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                          |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2     | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                 |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | order_1             | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3     | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_37"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_37" has lines with following column values
      | SHARDING_NODE-0     | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0//dn3_0        | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1             | MERGE                 | dn1_0//dn3_0                                                                                                                                                        |
      | shuffle_field_1     | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0//dn1_1        | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0               | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1   | MERGE_AND_ORDER       | dn1_0; dn2_0//dn1_1; dn2_0                                                                                                                                          |
      | shuffle_field_4     | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1              | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2     | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn3_0//dn3_1//dn4_0 | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2             | MERGE                 | dn3_0//dn3_1//dn4_0                                                                                                                                                 |
      | join_2              | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | order_1             | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3     | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                         | db      |
      | conn_0 | false   | explain /*!dble:plan=(b, c) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `b`.`manager`,`c`.`country` from  `Dept` `b` join  `Info` `c` on `b`.`manager` = `c`.`name` where 1=1  order by `b`.`manager` ASC                                       |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=(b, c) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=(c, b) \| a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                     |
      | dn3_0             | BASE SQL        | select `b`.`manager`,`c`.`country` from  `Info` `c` join  `Dept` `b` on `c`.`name` = `b`.`manager` where 1=1  order by `b`.`manager` ASC |
      | merge_1           | MERGE           | dn3_0                                                                                                                         |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                 |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                  |
      | shuffle_field_2   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                             |
      | join_1            | JOIN            | merge_1; shuffle_field_2                                                                                                      |
      | order_1           | ORDER           | join_1                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=(c, b) \| a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | hint explain build failures! check table c & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c\|b)&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | hint explain build failures! check table c & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| (a& c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&c&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;       | hint explain build failures! check table b & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;       | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | You are using wrong hint. please check the node 'a',there are no previous nodes connect to it.  | schema1 |

  @delete_mysql_tables
  Scenario: shardingTable  + globalTable  +  singleTable  Directed Acyclic Graph && right join   #2
  """
      {'delete_mysql_tables': {'mysql-master1': ['db1', 'db2', 'db3'], 'mysql-master2': ['db1', 'db2', 'db3'], 'mysql':['schema1']}}
  """
    Given delete the following xml segment
      | file         | parent         | child                  |
      | sharding.xml | {'tag':'root'} | {'tag':'schema'}       |
      | sharding.xml | {'tag':'root'} | {'tag':'shardingNode'} |
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
    """
        <schema name="schema1" sqlMaxLimit="100">
            <shardingTable name="Employee" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname" />
            <globalTable name="Dept" shardingNode="dn3,dn4" />
            <singleTable name="Info" shardingNode="dn5" />
            <singleTable name="Level" shardingNode="dn6" />
        </schema>

        <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
        <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
        <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
        <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
        <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />
        <shardingNode dbGroup="ha_group2" database="db3" name="dn6" />

        <function name="func_hashString" class="StringHash">
            <property name="partitionCount">2</property>
            <property name="partitionLength">1</property>
            <property name="hashSlice">0:2</property>
        </function>
    """
    Then execute admin cmd "reload @@config_all"
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

     #create table used in comparing mysql
    Then execute sql in "mysql" in "mysql" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | True    | create database if not exists schema1                                                                                                                                                                                                                                                                             | mysql   | success |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_1"
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_1" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_2"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a &( b \| c)  */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_2" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a &( b \| c)  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                  |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;       | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c& (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                            |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn5_0                                                                                   |
      | join_2            | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                  |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                             | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a & (c \| b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) & b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;        | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;    | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_14"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c ) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_14" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_15"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_15" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_16"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_16" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                            |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn5_0                                                                                   |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_17"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_17" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_18"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_18" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                             |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                               |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                             | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;        | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) &b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c & (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_19"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_19" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                            |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn5_0                                                                                   |
      | join_2            | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_21"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_21" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

#   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_22"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & c & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_22" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC              |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=a & c & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_23"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| c) & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_23" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| c) & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_24"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_24" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                      |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                   |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                              |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                          |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                               |
      | order_1           | ORDER                 | join_1                                                                                                                                                         |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                        |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                             |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_25"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_25" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                            |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn5_0                                                                                   |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_26"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_26" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_27"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a& c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_27" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a& c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

#   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b & c & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                            |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC                     |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b & c & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    #   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| c) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                       |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(b \| c) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    #   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (c& a)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                       |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| (c& a)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_29"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_29" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_30"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & a) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_30" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                            |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                                  |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(c & a) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_31"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=c \| b \| a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_31" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                    |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                     |
      | merge_1           | MERGE           | dn5_0                                                                                        |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                             |
      | merge_2           | MERGE           | dn3_0//dn4_0                                                                                 |
      | join_1            | JOIN            | merge_1; merge_2                                                                             |
      | order_1           | ORDER           | join_1                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                      |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                            |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_3                                                             |
      | order_2           | ORDER           | join_2                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_2                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=c \| b \| a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_31"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=c & ( b \| a )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_31" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                            |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                          |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; merge_2                                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=c & ( b \| a )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                         | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |

    #    # right join & right join & 0 er & ab, ac  --> not support at this version
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                                                                   | db      |
      | conn_0 | False   | explain /*!dble:plan=c & b & a*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager RIGHT JOIN Level c ON a.level=c.levelname ORDER BY a.name; | we don't support optimize this sql use hints yet. Maybe this sql contains 'multi right join' or 'cartesian with relation' or 'subquery'. | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_32"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_32" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                    |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn6_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC   |
      | merge_2           | MERGE                 | dn6_0                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                         |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_33"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_33" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn6_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC |
      | merge_2           | MERGE                 | dn6_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_34"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_34" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                    |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn6_0             | BASE SQL              | select `c`.`salary`,`c`.`levelname` from  `Level` `c` order by `c`.`levelname` ASC                                                                                              |
      | merge_2           | MERGE                 | dn6_0                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                        |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=b&(a\|c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;    | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c\|a) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | You are using wrong hint. please check the node 'c',there are no previous nodes connect to it.  | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c&a)\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_35"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_35" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                     |
      | dn3_0//dn4_0      | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC              |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                  |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                             |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                      |
      | shuffle_field_1   | SHUFFLE_FIELD   | join_1                                                                        |
      | dn5_0             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC      |
      | merge_2           | MERGE           | dn5_0                                                                         |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                      |
      | order_1           | ORDER           | join_2                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_36"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_36" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                      |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                               |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                   |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                   |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                               |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                         |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                          |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                               |
      | order_1           | ORDER                 | join_2                                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_37"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_37" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                               |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | order_1           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

#   right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( c \| a )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                               |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | order_1           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( c \| a )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & b) \| a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                     |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                   |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; merge_2                                                                                                                                  |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                          |
      | order_2           | ORDER                 | join_2                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=(c & b) \| a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=(c\| b) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn5_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                            |
      | merge_1           | MERGE                 | dn5_0                                                                                                                                                               |
      | dn3_0//dn4_0      | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_2           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_2           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=(c\| b) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | hint explain build failures! check table a & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|(a& c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;   | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| (c& a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | hint explain build failures! check table a & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;       | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | You are using wrong hint. please check the node 'a',there are no previous nodes connect to it.  | schema1 |

  @delete_mysql_tables
  Scenario: shardingTable  + singleTable  +  singleTable  Directed Acyclic Graph && right join    #3
  """
      {'delete_mysql_tables': {'mysql-master1': ['db1', 'db2', 'db3'], 'mysql-master2': ['db1', 'db2', 'db3'], 'mysql':['schema1']}}
  """
    Given delete the following xml segment
      | file         | parent         | child                  |
      | sharding.xml | {'tag':'root'} | {'tag':'schema'}       |
      | sharding.xml | {'tag':'root'} | {'tag':'shardingNode'} |
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
    """
        <schema name="schema1" sqlMaxLimit="100">
            <shardingTable name="Employee" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname" />
            <singleTable name="Dept" shardingNode="dn1" />
            <singleTable name="Info" shardingNode="dn2" />
            <singleTable name="Level" shardingNode="dn5" />
        </schema>

        <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
        <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
        <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
        <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
        <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />
        <shardingNode dbGroup="ha_group2" database="db3" name="dn6" />

        <function name="func_hashString" class="StringHash">
            <property name="partitionCount">2</property>
            <property name="partitionLength">1</property>
            <property name="hashSlice">0:2</property>
        </function>
    """
    Then execute admin cmd "reload @@config_all"
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

     #create table used in comparing mysql
    Then execute sql in "mysql" in "mysql" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | True    | create database if not exists schema1                                                                                                                                                                                                                                                                             | mysql   | success |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info                                                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |

  # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_1"
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_1" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_2"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a &( b \| c)  */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_2" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a &( b \| c)  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | conn   | toClose | sql                                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c   */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & left join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | conn   | toClose | sql                                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c   */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                     |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                          |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn2_1             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c  */SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;       | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c& (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn1_1             | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn1_1                                                                                   |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn2_1             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn2_1                                                                                   |
      | join_2            | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                     |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                          |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn2_1             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                   |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                            | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c\|b)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c\|a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;    | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;       | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=b & c & a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a LEFT JOIN Dept b on a.name=b.manager inner JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_14"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c ) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_14" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_15"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_15" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_16"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_16" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn1_0                                                                                   |
      | dn1_1             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_1; dn2_0                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn2_1             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn2_1                                                                                   |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_17"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_17" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                         |
      | dn1_1             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # left join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_18"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_18" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn2_1             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC                                                                             |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                               |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                             | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;        | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;      | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) &b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name;  | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c & (b \| a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a inner JOIN Dept b on a.name=b.manager LEFT JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_19"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_19" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                            |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | dn1_1             | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn1_1                                                                                   |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn2_1             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn2_1                                                                                   |
      | join_2            | JOIN            | shuffle_field_2; merge_2                                                                |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                     |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_21"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_21" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

#   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_22"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=a & c & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_22" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC              |
      | merge_1           | MERGE                 | dn2_1                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn1_1                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=a & c & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_23"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| c) & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_23" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | dn2_1             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn2_1                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn1_1                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a \| c) & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_24"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_24" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                      |
      | dn1_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                   |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                              |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC |
      | merge_1           | MERGE                 | dn2_1                                                                                                                                                          |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                               |
      | order_1           | ORDER                 | join_1                                                                                                                                                         |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                        |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                             |
      | merge_2           | MERGE                 | dn1_1                                                                                                                                                          |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

  # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_25"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_25" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                               |
      | dn1_0             | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                        |
      | merge_1           | MERGE           | dn1_0                                                                                   |
      | dn1_1             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_1; dn2_0                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                       |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                |
      | order_1           | ORDER           | join_1                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                 |
      | dn2_1             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE           | dn2_1                                                                                   |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                  |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_26"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_26" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                         |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC           |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_27"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a& c)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_27" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                         |
      | dn1_1             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC,`c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a& c)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

#   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b & c & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                            |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC                     |
      | merge_2           | MERGE                 | dn2_0                                                                                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b & c & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    #   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| c) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                              |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_2           | MERGE                 | dn2_0                                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(b \| c) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    #   inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_28"
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (c& a)*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_28" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                   |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                              |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_2           | MERGE                 | dn2_0                                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                   | db      |
      | conn_0 | true    | /*#dble:plan=b \| (c& a)*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_29"
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_29" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                   |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn2_0                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                     |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC         |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_1                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC,`b`.`manager` ASC |
      | merge_2           | MERGE                 | dn1_1                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_30"
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & a) \| b*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_30" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                            |
      | merge_1           | MERGE                 | dn2_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_1                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC,`b`.`manager` ASC                                                                                  |
      | merge_2           | MERGE                 | dn1_1                                                                                                                                                               |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=(c & a) \| b*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    # inner join & inner join & 0 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_31"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=c & ( b \| a )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_31" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                          |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                                           |
      | merge_1           | MERGE                 | dn2_0                                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                            |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC                          |
      | merge_2           | MERGE                 | dn1_0                                                                                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                   |
      | order_1           | ORDER                 | join_1                                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                            |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                       |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                  |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                   |
      | order_2           | ORDER                 | join_2                                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=c & ( b \| a )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                         | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(a,b)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a INNER JOIN Dept b on a.name=b.manager INNER JOIN Info c on a.name=c.name and b.manager=c.name ORDER BY a.name; | hint explain build failures! check ER condition                                             | schema1 |

   # right join & right join & 0 er & ab, ac  --> not support at this version
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                                                                   | db      |
      | conn_0 | False   | explain /*!dble:plan=c & b & a*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager RIGHT JOIN Level c ON a.level=c.levelname ORDER BY a.name; | we don't support optimize this sql use hints yet. Maybe this sql contains 'multi right join' or 'cartesian with relation' or 'subquery'. | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_32"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_32" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                    |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC   |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                         |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_33"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_33" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                              |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                         |
      | dn1_1             | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                     |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn5_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`salary`,`c`.`levelname` from  `Level` `c` where `c`.`levelname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`levelname` ASC |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                                       |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_34"
      | conn   | toClose | sql                                                                                                                                                                                              | db      |
      | conn_0 | false   | explain /*!dble:plan=(b & a) \| c*/ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |
    Then check resultset "rs_34" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                       |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                                |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                         |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname`,`a`.`level` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                                    |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                               |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                |
      | order_1           | ORDER                 | join_1                                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                         |
      | dn5_0             | BASE SQL              | select `c`.`salary`,`c`.`levelname` from  `Level` `c` order by `c`.`levelname` ASC                                                                                              |
      | merge_2           | MERGE                 | dn5_0                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; merge_2                                                                                                                                                        |
      | order_2           | ORDER                 | join_2                                                                                                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b & a) \| c*/SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=b&(a\|c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;    | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name;  | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c\|a) */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | You are using wrong hint. please check the node 'c',there are no previous nodes connect to it.  | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c&a)\|b */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT a.name,a.deptname,b.manager,c.salary FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Level c ON a.level=c.levelname ORDER BY a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |


    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_35"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| a \| c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_35" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                     |
      | dn1_0             | BASE SQL        | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC              |
      | merge_1           | MERGE           | dn1_0                                                                         |
      | dn1_1             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL        | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_1; dn2_0                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                             |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                      |
      | shuffle_field_1   | SHUFFLE_FIELD   | join_1                                                                        |
      | dn2_1             | BASE SQL        | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC      |
      | merge_2           | MERGE           | dn2_1                                                                         |
      | join_2            | JOIN            | shuffle_field_1; merge_2                                                      |
      | order_1           | ORDER           | join_2                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b \| a \| c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_36"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_36" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                      |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                               |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                          |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                        |
      | dn1_1             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | dn2_0             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                   |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                               |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                         |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                          |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                               |
      | order_1           | ORDER                 | join_2                                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_37"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( a \| c )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_37" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2           | MERGE                 | dn2_1                                                                                                                                                               |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | order_1           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( a \| c )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

#   right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=b & ( c \| a )*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2           | MERGE                 | dn2_0                                                                                                                                                               |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                        |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | order_1           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                    | db      |
      | conn_0 | true    | /*#dble:plan=b & ( c \| a )*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=b & c & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_1           | MERGE                 | dn1_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`country`,`c`.`name` from  `Info` `c` where `c`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`name` ASC      |
      | merge_2           | MERGE                 | dn2_0                                                                                                                                                               |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_1                                                                                                                                                              |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                        |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | order_1           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=b & c & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

  # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                           | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & b) \| a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                 |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn2_0                                                                                                                                                     |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                   |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`manager` from  `Dept` `b` where `b`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`manager` ASC |
      | merge_2           | MERGE                 | dn1_0                                                                                                                                                     |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_2                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                          |
      | order_1           | ORDER                 | join_1                                                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                   |
      | dn1_1             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | dn2_1             | BASE SQL              | select `a`.`name`,`a`.`deptname` from  `Employee` `a` ORDER BY `a`.`name` ASC                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                              |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                         |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                          |
      | order_2           | ORDER                 | join_2                                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=(c & b) \| a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    # right join & inner join & 0 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=(c\| b) & a*/ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn2_0             | BASE SQL              | select `c`.`country`,`c`.`name` from  `Info` `c` order by `c`.`name` ASC                                                                                            |
      | merge_1           | MERGE                 | dn2_0                                                                                                                                                               |
      | dn1_0             | BASE SQL              | select `b`.`manager` from  `Dept` `b` order by `b`.`manager` ASC                                                                                                    |
      | merge_2           | MERGE                 | dn1_0                                                                                                                                                               |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_2                                                                                                                                                             |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `a`.`name`,`a`.`deptname` from  `Employee` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_2           | ORDER                 | join_2                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_2                                                                                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=(c\| b) & a*/SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                           | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | hint explain build failures! check table a & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| (a& c) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;       | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;     | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT a.name,a.deptname,b.manager,c.country FROM Employee a RIGHT JOIN Dept b ON a.name=b.manager INNER JOIN Info c ON b.manager=c.name ORDER BY a.name;    | You are using wrong hint. please check the node 'a',there are no previous nodes connect to it.  | schema1 |

# root node is GlobalTable
#  @delete_mysql_tables
    @skip_restart
  Scenario: GlobalTable  + [otherTypeTable]            Directed Acyclic Graph && right join  #4
  """
    {'delete_mysql_tables': {'mysql-master1': ['db1', 'db2', 'db3', 'db4'], 'mysql-master2': ['db1', 'db2', 'db3', 'db4'], 'mysql':['schema1']}}
    """
    Given delete the following xml segment
      | file         | parent         | child                  |
      | sharding.xml | {'tag':'root'} | {'tag':'schema'}       |
      | sharding.xml | {'tag':'root'} | {'tag':'shardingNode'} |
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
      """
        <schema name="schema1" sqlMaxLimit="100">
            <shardingTable name="Employee" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname" />
            <shardingTable name="Dept" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname"/>
            <globalTable name="Info" shardingNode="dn3,dn4" />
            <globalTable name="Level" shardingNode="dn5,dn6" />
            <globalTable name="FamilyInfo" shardingNode="dn7,dn8" />
        </schema>

        <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
        <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
        <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
        <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
        <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />
        <shardingNode dbGroup="ha_group2" database="db3" name="dn6" />
        <shardingNode dbGroup="ha_group1" database="db4" name="dn7" />
        <shardingNode dbGroup="ha_group2" database="db4" name="dn8" />

        <function name="func_hashString" class="StringHash">
            <property name="partitionCount">2</property>
            <property name="partitionLength">1</property>
            <property name="hashSlice">0:2</property>
        </function>
      """
    Then execute admin cmd "reload @@config_all"
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info;drop table if exists FamilyInfo                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | create table FamilyInfo(name varchar(25) not null, housetype varchar(250) not null, familynum int not null)engine=innodb charset=utf8                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |
      | conn_0 | true    | insert into FamilyInfo values('Harry', 'department', 3),('George', 'department', 5), ('Harriet', 'villa', 6), ('Mary', 'villa', 8), ('LiLi', 'Self-built house', 10), ('Tom', 'department', 2)                                                                                                                    | schema1 | success |

    Then execute sql in "mysql" in "mysql" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | True    | create database if not exists schema1                                                                                                                                                                                                                                                                             | mysql   | success |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info;drop table if exists FamilyInfo                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | create table FamilyInfo(name varchar(25) not null, housetype varchar(250) not null, familynum int not null)engine=innodb charset=utf8                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |
      | conn_0 | true    | insert into FamilyInfo values('Harry', 'department', 3),('George', 'department', 5), ('Harriet', 'villa', 6), ('Mary', 'villa', 8), ('LiLi', 'Self-built house', 10), ('Tom', 'department', 2)                                                                                                                    | schema1 | success |

   # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
   # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=a &( b \| c)  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=a &( b \| c)  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | conn   | toClose | sql                                                                                                                                                                                                                  | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                       |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | conn   | toClose | sql                                                                                                                                                                                                                  | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
     # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                             |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC                                                                  |
      | dn2_1             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC                                                                  |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                        |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                 | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;       | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b & c & a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c& (b \| a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| b \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                       |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan= a \| b \| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_14"
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | false   | explain /*!dble:plan= a & ( b \| c)  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_14" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                             | db      |
      | conn_0 | true    | /*#dble:plan= a & ( b \| c)  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_15"
      | conn   | toClose | sql                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan= (a \| b) & c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_15" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | true    | /*#dble:plan= (a \| b) & c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_16"
      | conn   | toClose | sql                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| (b & c)  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_16" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan= a \| (b & c) */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                  | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c\|b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;    | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c\|a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;    | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;       | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=b & c & a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| b \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                       |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_21"
      | conn   | toClose | sql                                                                                                                                                                                                                  | db      |
      | conn_0 | false   | explain /*!dble:plan= b & a & c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_21" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_22"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b & (a \| c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_22" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC                |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=b & (a \| c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_23"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_23" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_24"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a & c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_24" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a & c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                   | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;        | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) &b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c & (b \| a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                       |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

  # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_41"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_41" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                  |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                             |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                         |
      | order_1           | ORDER                 | join_1                                                                                                                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                  |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                                         |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                                         |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                             |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_42"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_42" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_43"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_43" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_44"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_44" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_45"
      | conn   | toClose | sql                                                                                                                                                                                                                | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_45" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                                                     |
      | dn1_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC,`a`.`name` ASC                                                        |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                                                                                  |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                                                      |
      | order_1           | ORDER           | join_1                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)\|a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_46"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_46" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                              |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                      |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC          |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                           |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                       |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                 |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                      |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_47"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(c\| a) & b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_47" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                              |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                      |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                           |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                       |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                 |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                      |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(c\| a) & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check table b & or \| condition                                | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_48"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_48" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                              |
      | dn4_0//dn3_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                |
      | merge_1           | MERGE           | dn4_0//dn3_0                                                                                           |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                           |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                      |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                               |
      | order_1           | ORDER           | join_1                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                                |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC     |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC     |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                           |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                      |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_49"
      | conn   | toClose | sql                                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_49" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn4_0//dn3_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn4_0//dn3_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_50"
      | conn   | toClose | sql                                                                                                                                                                                                                                      | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c )*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_50" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                      |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                        |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                   |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                        |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                   |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                               |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                         |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                        |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC    |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC    |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                   |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                              |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                               |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                             | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_51"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c)*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_51" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_52"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_52" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                  |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                             |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                         |
      | order_1           | ORDER                 | join_1                                                                                                                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                  |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                             |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
#     # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_53"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=a & c & b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_53" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                                               |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                                          |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                                               |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC                                              |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC                                              |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                                          |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                                               |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`deptname` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`deptname` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                                          |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                                                      |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                                                |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=a & c & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_54"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_54" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_55"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_55" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_56"
      | conn   | toClose | sql                                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a& c)*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_56" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a& c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_57"
      | conn   | toClose | sql                                                                                                                                                                                                                                | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)\|a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_57" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                                           |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC,`a`.`name` ASC                                                                      |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                                                                                                |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                                                                    |
      | order_1           | ORDER           | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                                                                     |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)\|a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_58"
      | conn   | toClose | sql                                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_58" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_59"
      | conn   | toClose | sql                                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=c \| a \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_59" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                 |
      | dn1_0             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                           |
      | dn2_0             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                         |
      | dn3_0//dn4_0      | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                   |
      | merge_1           | MERGE           | dn3_0//dn4_0                                                                                                              |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                  |
      | order_1           | ORDER           | join_1                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                   |
      | dn1_1             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                                         |
      | join_2            | JOIN            | shuffle_field_2; shuffle_field_4                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=c \| a \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_60"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_60" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                                         |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                                                   |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                                      |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                                                 |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC                                     |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                                      |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                                                  |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                                            |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                                           |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                                      |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                                                 |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_61"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & a) \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_61" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                     |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                     |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(c & a) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

  # GlobalTable + shardingTable + shardingTable  Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                                 |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                 | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check table b & or \| condition                                | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                | schema1 |

  # GlobalTable + shardingTable + shardingTable  right join
  # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_4                                                                                                                                              |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
    # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
    # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0//dn4_0      | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0//dn4_0                                                                                                                                                                  |
      | join_1            | JOIN                  | shuffle_field_1; merge_1                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                          | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&c&a */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;    | hint explain build failures! check table b & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;    | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | You are using wrong hint. please check the node 'a',there are no previous nodes connect to it.  | schema1 |

# root node is SingleTable
  @delete_mysql_tables
  Scenario: SingleTable  + [otherTypeTable]            Directed Acyclic Graph && right join    #5
  """
    {'delete_mysql_tables': {'mysql-master1': ['db1', 'db2', 'db3', 'db4'], 'mysql-master2': ['db1', 'db2', 'db3', 'db4'], 'mysql':['schema1']}}
    """
    Given delete the following xml segment
      | file         | parent         | child                  |
      | sharding.xml | {'tag':'root'} | {'tag':'schema'}       |
      | sharding.xml | {'tag':'root'} | {'tag':'shardingNode'} |
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
      """
        <schema name="schema1" sqlMaxLimit="100">
            <shardingTable name="Employee" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname" />
            <shardingTable name="Dept" shardingNode="dn1,dn2" function="func_hashString" shardingColumn="deptname"/>
            <singleTable name="Info" shardingNode="dn3" />
            <singleTable name="Level" shardingNode="dn4" />
            <singleTable name="FamilyInfo" shardingNode="dn5" />
        </schema>

        <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
        <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
        <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
        <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
        <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />
        <shardingNode dbGroup="ha_group2" database="db3" name="dn6" />
        <shardingNode dbGroup="ha_group1" database="db4" name="dn7" />
        <shardingNode dbGroup="ha_group2" database="db4" name="dn8" />

        <function name="func_hashString" class="StringHash">
            <property name="partitionCount">2</property>
            <property name="partitionLength">1</property>
            <property name="hashSlice">0:2</property>
        </function>
      """
    Then execute admin cmd "reload @@config_all"
    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info;drop table if exists FamilyInfo                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | create table FamilyInfo(name varchar(25) not null, housetype varchar(250) not null, familynum int not null)engine=innodb charset=utf8                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |
      | conn_0 | true    | insert into FamilyInfo values('Harry', 'department', 3),('George', 'department', 5), ('Harriet', 'villa', 6), ('Mary', 'villa', 8), ('LiLi', 'Self-built house', 10), ('Tom', 'department', 2)                                                                                                                    | schema1 | success |

    Then execute sql in "mysql" in "mysql" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                                                                                               | db      | expect  |
      | conn_0 | True    | create database if not exists schema1                                                                                                                                                                                                                                                                             | mysql   | success |
      | conn_0 | False   | drop table if exists Employee;drop table if exists Dept;drop table if exists Level;drop table if exists Info;drop table if exists FamilyInfo                                                                                                                                                                      | schema1 | success |
      | conn_0 | false   | create table Employee (name varchar(250) not null,empid int not null,deptname varchar(250) not null,level varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                        | schema1 | success |
      | conn_0 | false   | create table Dept(deptname varchar(250) not null,deptid int not null,manager varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                                                     | schema1 | success |
      | conn_0 | false   | create table Level(levelname varchar(250) not null,levelid int not null,salary int not null)engine=innodb charset=utf8                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | create table Info(name varchar(250) not null,age int not null,country varchar(250) not null,deptname varchar(250) not null)engine=innodb charset=utf8                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Employee values('Harry',3415,'Finance','P7'),('Sally',2242,'Sales','P7'),('George',3401,'Finance','P8'),('Harriet',2202,'Sales','P8'),('Mary',1257,'Human Resources','P7'),('LiLi',9527,'Human Resources','P9'),('Tom',7012,'Market','P9'),('Tony',3052,'Market','P10'),('Jessi',7948,'Finance','P8') | schema1 | success |
      | conn_0 | false   | insert into Dept values('Finance',2,'George'),('Sales',3,'Harriet'),('Market',4,'Tom')                                                                                                                                                                                                                            | schema1 | success |
      | conn_0 | false   | insert into Level values('P7',7,10000),('P8',8,15000),('P9',9,20000),('P10',10,25000)                                                                                                                                                                                                                             | schema1 | success |
      | conn_0 | false   | insert into Info values('Harry', 25, 'China','Finance'),('Sally', 30, 'USA', 'Sales'),('Gerorge', 20, 'UK', 'Finance'),('Harriet', 35, 'Japan', 'Sales'),('Mary', 22, 'China', 'Human Resources'),('LiLi',33,'Krean','Human Resources'),('Jessi', 27,'Krean','Finance')                                           | schema1 | success |
      | conn_0 | false   | create table FamilyInfo(name varchar(25) not null, housetype varchar(250) not null, familynum int not null)engine=innodb charset=utf8                                                                                                                                                                             | schema1 | success |
      | conn_0 | true    | insert into FamilyInfo values('Harry', 'department', 3),('George', 'department', 5), ('Harriet', 'villa', 6), ('Mary', 'villa', 8), ('LiLi', 'Self-built house', 10), ('Tom', 'department', 2)                                                                                                                    | schema1 | success |

     # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#      left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=a & b & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=a & b & c */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

   # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=a &( b \| c)  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                         |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=a &( b \| c)  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b\| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0                                                                                              |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=a \| b\| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | conn   | toClose | sql                                                                                                                                                                                                                  | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
     # left join & left join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & b) \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                             |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                             |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                   |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                    |
      | order_1           | ORDER                 | join_1                                                                                                                                                              |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                             |
      | dn1_1             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC                                                                  |
      | dn2_1             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC                                                                  |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                        |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                   |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                    |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                              |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a & b) \| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                 | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;       | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b & c & a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;   | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c& (b \| a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name LEFT JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| b \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0                                                                                              |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan= a \| b \| c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_14"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan= a & b & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_14" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC                          |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan= a & b & c */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_15"
      | conn   | toClose | sql                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan= (a \| b) & c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_15" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | true    | /*#dble:plan= (a \| b) & c  */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_16"
      | conn   | toClose | sql                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| (b & c)  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_16" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan= a \| (b & c) */SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                   | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c\|b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;     | some errors near the node 'b'. Because left join and inner join can't point to same node.       | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) & b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&b&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;        | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b \| a \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=b & c & a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a LEFT JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;    | can't use '{node=b}' node for root. Because exists some left join relations point to this node. | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan= a \| b \| c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0                                                                                              |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_20"
      | conn   | toClose | sql                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan= (a \| b) & c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_20" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_21"
      | conn   | toClose | sql                                                                                                                                                                                                                  | db      |
      | conn_0 | false   | explain /*!dble:plan= b & a & c  */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_21" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_22"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b & (a \| c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_22" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC                |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                             |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=b & (a \| c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_23"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_23" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # left join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_24"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a & c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_24" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a & c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                   | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&c&b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;        | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;      | can't use this hints,because exists some left join relations point to node: {node=c}            | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c \| a) &b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=c & (b \| a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name left JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_39"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_39" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                          |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC            |
      | merge_1           | MERGE           | dn3_0                                                                                              |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                      |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                  |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                           |
      | order_1           | ORDER           | join_1                                                                                             |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                            |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                  |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                             |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_40"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_40" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_41"
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( c \| b ) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_41" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                              |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC               |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                           |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                      |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                       |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                 |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                      |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                            | db      |
      | conn_0 | true    | /*#dble:plan=a & ( c \| b )*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_41"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_41" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                  |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                             |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                         |
      | order_1           | ORDER                 | join_1                                                                                                                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                  |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                                         |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                                         |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                             |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_42"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_42" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_43"
      | conn   | toClose | sql                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_43" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_44"
      | conn   | toClose | sql                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_44" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC                                |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_45"
      | conn   | toClose | sql                                                                                                                                                                                                                | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_45" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                                                     |
      | dn1_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                             |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC,`a`.`name` ASC                                                        |
      | merge_1           | MERGE           | dn3_0                                                                                                                                                         |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                                                      |
      | order_1           | ORDER           | join_1                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)\|a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_46"
      | conn   | toClose | sql                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_46" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                              |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                      |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC          |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                       |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                 |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                      |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_47"
      | conn   | toClose | sql                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=(c\| a) & b */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_47" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                              |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                        |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                           |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                      |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                  |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                       |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                 |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                           |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                      |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                       |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                         | db      |
      | conn_0 | true    | /*#dble:plan=(c\| a) & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check table b & or \| condition                                | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_48"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| b \| c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_48" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                              |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                |
      | merge_1           | MERGE           | dn3_0                                                                                                  |
      | dn1_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                           |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                      |
      | join_1            | JOIN            | merge_1; shuffle_field_3                                                                               |
      | order_1           | ORDER           | join_1                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD   | order_1                                                                                                |
      | dn1_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC     |
      | dn2_1             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC     |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                           |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                      |
      | join_2            | JOIN            | shuffle_field_1; shuffle_field_4                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD   | join_2                                                                                                 |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=a \| b \| c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_49"
      | conn   | toClose | sql                                                                                                                                                                                                                                     | db      |
      | conn_0 | false   | explain /*!dble:plan=(a \| b) & c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_49" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(a \| b) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_50"
      | conn   | toClose | sql                                                                                                                                                                                                                                      | db      |
      | conn_0 | false   | explain /*!dble:plan=a & ( b \| c )*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_50" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                      |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                        |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                          |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                        |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                   |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                              |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                               |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                         |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                        |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC    |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC    |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                   |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                              |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                               |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                         |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                             | db      |
      | conn_0 | true    | /*#dble:plan=a & ( b \| c )*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_51"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=a \| (b & c)*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_51" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                      |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                       |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | join_1            | JOIN                  | merge_1; shuffle_field_3                                                                                                                                                                     |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_1   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_3's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                 |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                            |
      | join_2            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                             |
      | shuffle_field_2   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=a \| (b & c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#     inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_52"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(a & c) \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_52" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                  |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                    |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                  |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                             |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                        |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                         |
      | order_1           | ORDER                 | join_1                                                                                                                                                                   |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                  |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                             |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                        |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                   |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(a & c) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#     # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_53"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=a & c & b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_53" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                                             |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                                               |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                                               |
      | dn1_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC                                              |
      | dn2_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC                                              |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                                          |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                                                      |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                                                |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                                               |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`deptname` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`deptname` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                                          |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                                                     |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                                                      |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                                                |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=a & c & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
#    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_54"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_54" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC               |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_55"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_55" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_56"
      | conn   | toClose | sql                                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=b \| (a& c)*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_56" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                   |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC                                                                                      |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                           |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                       |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                     |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                            |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                     |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`manager` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`manager` ASC,`c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                           |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                            |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=b \| (a& c)*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_57"
      | conn   | toClose | sql                                                                                                                                                                                                                                | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)\|a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_57" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                                                                   |
      | dn1_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | dn2_0             | BASE SQL        | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                                                                                |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                                           |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC,`a`.`name` ASC                                                                      |
      | merge_1           | MERGE           | dn3_0                                                                                                                                                                       |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                                                                    |
      | order_1           | ORDER           | join_1                                                                                                                                                                      |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                                                                     |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                       | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)\|a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_58"
      | conn   | toClose | sql                                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_58" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_59"
      | conn   | toClose | sql                                                                                                                                                                                                                                   | db      |
      | conn_0 | false   | explain /*!dble:plan=c \| a \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_59" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1          | SQL/REF-2                                                                                                                 |
      | dn1_0             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                           |
      | dn2_0             | BASE SQL        | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                           |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_0; dn2_0                                                                                                              |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                         |
      | dn3_0             | BASE SQL        | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                   |
      | merge_1           | MERGE           | dn3_0                                                                                                                     |
      | join_1            | JOIN            | shuffle_field_1; merge_1                                                                                                  |
      | order_1           | ORDER           | join_1                                                                                                                    |
      | shuffle_field_2   | SHUFFLE_FIELD   | order_1                                                                                                                   |
      | dn1_1             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL        | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER | dn1_1; dn2_1                                                                                                              |
      | shuffle_field_4   | SHUFFLE_FIELD   | merge_and_order_2                                                                                                         |
      | join_2            | JOIN            | shuffle_field_2; shuffle_field_4                                                                                          |
      | shuffle_field_3   | SHUFFLE_FIELD   | join_2                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                          | db      |
      | conn_0 | true    | /*#dble:plan=c \| a \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_60"
      | conn   | toClose | sql                                                                                                                                                                                                                                 | db      |
      | conn_0 | false   | explain /*!dble:plan=c & a & b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_60" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                                         |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                                                   |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                                                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                                      |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                                                 |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC                                     |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                                             |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                                           |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                                                                  |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                                            |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                                           |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `b`.`name`,`b`.`deptname` from  `Employee` `b` where  ( `b`.`empid` = 2202 AND `b`.`name` in ('{NEED_TO_REPLACE}')) ORDER BY `b`.`name` ASC,`b`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                                                      |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                                                                 |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                                                                  |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                                                            |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                        | db      |
      | conn_0 | true    | /*#dble:plan=c & a & b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
    # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_61"
      | conn   | toClose | sql                                                                                                                                                                                                                                    | db      |
      | conn_0 | false   | explain /*!dble:plan=(c & a) \| b*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_61" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                               |
      | dn2_0             | BASE SQL              | select `c`.`manager`,`c`.`deptname` from  `Dept` `c` ORDER BY `c`.`manager` ASC                                                                                               |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                     |
      | dn2_1             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`b`.`deptname` ASC                                                     |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                  |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD         | join_2                                                                                                                                                                        |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                           | db      |
      | conn_0 | true    | /*#dble:plan=(c & a) \| b*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    # singleTable + shardingTable + shardingTable   Directed Acyclic Graph
  # inner join & inner join & 1 er & ab, ac bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                                                               | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                                    |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where `b`.`empid` = 2202 ORDER BY `b`.`name` ASC,`c`.`manager` ASC                  |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                                 |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                                            |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC,`a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                                      |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                                             |
      | order_1           | ORDER                 | join_1                                                                                                                                                                                       |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                                      |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                                                      | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                                                 | expect                                                                                      | db      |
      | conn_0 | False   | explain /*!dble:plan=(a,b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(b,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&(c,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(a,b) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&(c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(a,b)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                             | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b\|c\|a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name;  | hint explain build failures! check table b & or \| condition                                | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|b)&a */ SELECT b.name,a.deptname,c.manager,a.country FROM  Info a inner JOIN Employee b on a.name=b.name and b.empid=2202 inner JOIN Dept c on a.name=c.manager and b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
  # right join & inner join & 1 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | dn2_0             | BASE SQL              | select `b`.`name` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                                |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                  |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                  | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
  # right join & inner join & 1 er & ab, ac
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                             | db      |
      | conn_0 | false   | explain /*!dble:plan=(b \| a) & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                  |
      | dn1_0             | BASE SQL              | select `b`.`name` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                             |
      | dn2_0             | BASE SQL              | select `b`.`name` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                             |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                               |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                          |
      | dn3_0             | BASE SQL              | select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` order by `a`.`name` ASC                                                                                    |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                      |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                    |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                           |
      | order_1           | ORDER                 | join_1                                                                                                                                                                     |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                    |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_4's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                               |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                          |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                           |
      | order_2           | ORDER                 | join_2                                                                                                                                                                     |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                    |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                     | db      |
      | conn_0 | true    | /*#dble:plan=(b \| a) & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                                | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=b & ( a \| c ) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name; | hint explain build failures! check table c & condition                                          | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;       | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&c&a */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;          | You are using wrong hint. please check the node 'c',there are no previous nodes connect to it.  | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | You are using wrong hint. please check the node 'c',there are no previous nodes connect to it.  | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;          | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;        | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on a.deptname=c.deptname order by a.name;       | can't use '{node=c}' node for root. Because exists some left join relations point to this node. | schema1 |

      # GlobalTable + shardingTable + shardingTable  right join
  # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                          | db      |
      | conn_0 | false   | explain /*!dble:plan=b & a & c*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                 |
      | dn2_0             | BASE SQL              | select `b`.`name`,`b`.`deptname` from  `Employee` `b` ORDER BY `b`.`name` ASC                                                                                                 |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                         |
      | shuffle_field_4   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_4                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
      | dn1_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | dn2_1             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_2's RESULTS; select `c`.`manager`,`c`.`deptname` from  `Dept` `c` where `c`.`deptname` in ('{NEED_TO_REPLACE}') ORDER BY `c`.`deptname` ASC    |
      | merge_and_order_2 | MERGE_AND_ORDER       | dn1_1; dn2_1                                                                                                                                                                  |
      | shuffle_field_5   | SHUFFLE_FIELD         | merge_and_order_2                                                                                                                                                             |
      | join_2            | JOIN                  | shuffle_field_2; shuffle_field_5                                                                                                                                              |
      | order_2           | ORDER                 | join_2                                                                                                                                                                        |
      | shuffle_field_3   | SHUFFLE_FIELD         | order_2                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                                 | db      |
      | conn_0 | true    | /*#dble:plan=b & a & c*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
    # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=(b,c)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Employee` `b` join  `Dept` `c` on `b`.`deptname` = `c`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=(b,c)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    # GlobalTable + shardingTable + shardingTable  right join
    # right join & inner join & 1 er & ab, bc
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_62"
      | conn   | toClose | sql                                                                                                                                                                                        | db      |
      | conn_0 | false   | explain /*!dble:plan=(c,b)&a*/ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |
    Then check resultset "rs_62" has lines with following column values
      | SHARDING_NODE-0   | TYPE-1                | SQL/REF-2                                                                                                                                                                     |
      | dn1_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | dn2_0             | BASE SQL              | select `b`.`name`,`c`.`manager` from  `Dept` `c` join  `Employee` `b` on `c`.`deptname` = `b`.`deptname` where 1=1  ORDER BY `b`.`name` ASC                                   |
      | merge_and_order_1 | MERGE_AND_ORDER       | dn1_0; dn2_0                                                                                                                                                                  |
      | shuffle_field_1   | SHUFFLE_FIELD         | merge_and_order_1                                                                                                                                                             |
      | dn3_0             | BASE SQL(May No Need) | HINT_NEST_LOOP - shuffle_field_1's RESULTS; select `a`.`deptname`,`a`.`country`,`a`.`name` from  `Info` `a` where `a`.`name` in ('{NEED_TO_REPLACE}') ORDER BY `a`.`name` ASC |
      | merge_1           | MERGE                 | dn3_0                                                                                                                                                                         |
      | shuffle_field_3   | SHUFFLE_FIELD         | merge_1                                                                                                                                                                       |
      | join_1            | JOIN                  | shuffle_field_1; shuffle_field_3                                                                                                                                              |
      | order_1           | ORDER                 | join_1                                                                                                                                                                        |
      | shuffle_field_2   | SHUFFLE_FIELD         | order_1                                                                                                                                                                       |
    Then execute sql in "dble-1" and the result should be consistent with mysql
      | conn   | toClose | sql                                                                                                                                                                               | db      |
      | conn_0 | true    | /*#dble:plan=(c,b)&a*/SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | schema1 |

    Then execute sql in "dble-1" in "user" mode
      | conn   | toClose | sql                                                                                                                                                                                          | expect                                                                                          | db      |
      | conn_0 | False   | explain /*!dble:plan=c&(b\|a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | hint explain build failures! check table c & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=c&(b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | The ER relation in the hint currently only supports when it exists in the headmost of hint.     | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(c,b,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a,c) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,a)&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=b&c&a */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;    | hint explain build failures! check table b & or \| condition                                    | schema1 |
      | conn_0 | False   | explain /*!dble:plan=(b,c,a) */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | hint explain build failures! check ER condition                                                 | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a&b&c */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;    | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | False   | explain /*!dble:plan=a\|c\|b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name;  | can't use '{node=a}' node for root. Because exists some left join relations point to this node. | schema1 |
      | conn_0 | True    | explain /*!dble:plan=(c\|a)&b */ SELECT b.name,a.deptname,c.manager,a.country FROM Info a right JOIN Employee b on a.name=b.name inner JOIN Dept c on b.deptname=c.deptname order by a.name; | You are using wrong hint. please check the node 'a',there are no previous nodes connect to it.  | schema1 |