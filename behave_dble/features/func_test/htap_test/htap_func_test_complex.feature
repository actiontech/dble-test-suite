# Copyright (C) 2016-2023 ActionTech.
# License: https://www.mozilla.org/en-US/MPL/2.0 MPL version 2 or higher.
# create by wujinling at 2023/08/18


Feature: htap basic functionality test

  Scenario: test basic htap #1
    Given add xml segment to node with attribute "{'tag':'root'}" in "sharding.xml"
      """
      <schema name="htapDb1" apNode="apNode1" shardingNode="dn5" sqlMaxLimit="-1">
          <globalTable name="test" shardingNode="dn1,dn2,dn3,dn4" />
          <shardingTable name="sharding_2_t1" shardingNode="dn1,dn2" function="hash-two" shardingColumn="id" />
          <shardingTable name="sharding_4_t1" shardingNode="dn1,dn2,dn3,dn4" function="hash-four" shardingColumn="id"/>

          <globalTable name="bmsql_warehouse" shardingNode="dn$1-4" checkClass="CHECKSUM" cron="0 0 0 * * ?"></globalTable>
          <globalTable name="bmsql_district" shardingNode="dn$1-4" checkClass="CHECKSUM" cron="0 0 0 * * ?"></globalTable>

          <shardingTable name="bmsql_new_order" shardingNode="dn$1-4" function="hash-four" shardingColumn="no_w_id"></shardingTable>
          <shardingTable name="bmsql_customer" shardingNode="dn$1-4" function="hash-four" shardingColumn="c_w_id"></shardingTable>
          <shardingTable name="bmsql_history" shardingNode="dn$1-4" function="hash-four" shardingColumn="h_w_id"></shardingTable>
          <shardingTable name="bmsql_oorder" shardingNode="dn$1-4" function="hash-four" shardingColumn="o_w_id"></shardingTable>
          <shardingTable name="bmsql_order_line" shardingNode="dn$1-4" function="hash-four" shardingColumn="ol_w_id"></shardingTable>
          <singleTable name="bmsql_item" shardingNode="dn3" />
          <singleTable name="bmsql_stock" shardingNode="dn3" />
      </schema>

      <schema name="htapDb2" apNode="apNode2" shardingNode="dn5" sqlMaxLimit="-1">
          <globalTable name="test" shardingNode="dn1,dn2,dn3,dn4" />
          <shardingTable name="sharding_2_t1" shardingNode="dn1,dn2" function="hash-two" shardingColumn="id" />
          <shardingTable name="sharding_4_t1" shardingNode="dn1,dn2,dn3,dn4" function="hash-four" shardingColumn="id"/>
          <shardingTable name="sharding_4_t2" shardingNode="dn1,dn2,dn3,dn4" function="hash-four" shardingColumn="id"/>
      </schema>

      <shardingNode dbGroup="ha_group1" database="db1" name="dn1" />
      <shardingNode dbGroup="ha_group2" database="db1" name="dn2" />
      <shardingNode dbGroup="ha_group1" database="db2" name="dn3" />
      <shardingNode dbGroup="ha_group2" database="db2" name="dn4" />
      <shardingNode dbGroup="ha_group1" database="db3" name="dn5" />

      <apNode name="apNode1" dbGroup="ha_group4" database="ckdb1"/>
      <apNode name="apNode2" dbGroup="ha_group5" database="ckdb2"/>
      """
    Given add xml segment to node with attribute "{'tag':'root'}" in "db.xml"
    """
    <dbGroup rwSplitMode="0" name="ha_group4" delayThreshold="100" >
        <heartbeat>select user()</heartbeat>
        <dbInstance name="hostM4" password="111111" url="172.100.9.10:9004" user="test" maxCon="100" minCon="10" primary="true" databaseType="clickhouse">
        </dbInstance>
    </dbGroup>

    <dbGroup rwSplitMode="0" name="ha_group5" delayThreshold="100" >
        <heartbeat>select user()</heartbeat>
        <dbInstance name="hostM5" password="111111" url="172.100.9.10:9004" user="test" maxCon="100" minCon="10" primary="true" databaseType="clickhouse">
        </dbInstance>
    </dbGroup>
    """
    Given add xml segment to node with attribute "{'tag':'root'}" in "user.xml"
      """
      <hybridTAUser name="htap1" password="111111" schemas="htapDb1,htapDb2"  maxCon="20"/>
      <hybridTAUser name="htap2" password="111111" schemas="htapDb1"  maxCon="20"/>
      """
    Then execute admin cmd "reload @@config"

    # dble暂未支持APNode相关的管理端命令，所以需连接后端手动建立后ck实例的物理库
    Then execute sql in "clickhouse-server_1" in "clickhouse" mode
      | user  | passwd    | conn   | toClose | sql                                                                                 | expect  |
      | test  | 111111    | conn_1 | True    | create database if not exists ckdb1                                                 | success |
      | test  | 111111    | conn_1 | True    | create database if not exists ckdb2                                                 | success |
    # ck中准备和dble一样的数据
    Then execute sql in "clickhouse-server_1" in "clickhouse" mode
      | user  | passwd    | conn   | toClose | sql                                                                                 | expect  | db      |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_warehouse                                                | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_district                                                 | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_customer                                                 | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_oorder                                                   | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_order_line                                               | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_item                                                     | success | ckdb1 |
      | test | 111111    | conn_1 | False   | drop table if exists bmsql_stock                                                    | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_warehouse (w_id integer not null, w_ytd decimal(12,2), w_name varchar(10)) ENGINE = MergeTree order by w_id                                   | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_district (d_w_id integer not null, d_id integer not null, d_ytd decimal(12,2), d_name varchar(10)) ENGINE = MergeTree order by d_w_id         | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_customer (c_w_id integer not null, c_d_id integer not null, c_id integer not null, c_last varchar(16), c_first varchar(16)) ENGINE = MergeTree order by c_w_id                                                  | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_oorder (o_w_id integer not null, o_d_id integer not null, o_id integer not null, o_c_id integer, o_carrier_id integer, o_ol_cnt integer,o_entry_d timestamp) ENGINE = MergeTree order by o_w_id                | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_order_line (ol_w_id integer   not null, ol_d_id integer not null, ol_o_id integer not null, ol_number integer not null,ol_i_id integer not null, ol_amount decimal(6,2)) ENGINE = MergeTree order by ol_w_id                                            | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_item (i_id integer not null, i_name varchar(24), i_price decimal(5,2)) ENGINE = MergeTree order by i_id                    | success | ckdb1 |
      | test | 111111    | conn_1 | False   | create table bmsql_stock (s_w_id integer not null, s_i_id integer not null, s_quantity integer, s_ytd integer, s_order_cnt integer, s_remote_cnt integer) ENGINE = MergeTree order by s_w_id   | success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_warehouse values(1,1200.09,'SH_MH'),(2,400.09,'SH_FX'),(3,10000.09,'SH_XH'),(4,20000,'SH_HP')                                                   | success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_district values(1, 1,300.01,'hm'),(1, 2,400.3,'hq'),(1, 3,603,'kl'),(1, 4,719.55,'jh'),(2, 1,345.23,'hm'),(2, 2,503.13,'ss'),(2, 3,834.1,'sj'),(2, 4,1000.5,'wd'),(3, 1,709.01,'gg'),(3, 2,200.3,'hq'),(4, 1,567.8,'kl'),(4, 2,789.05,'jh')                          | success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_customer values(1 ,  1 , 1 , 'ABLEABLEABLE'  , 'bBq684NZS6yV') ,(1 ,  1 , 2 , 'ABLEABLEABLE'  , 'R3eWOserEVq'  ),(1 ,  2 , 3 , 'ABLEABLEABLE'  , 'XNbyFXVesN2bAb0E' ),(1 ,  2 , 4 , 'ABLEABLEANTI'  , 'CEFLkwv1' ),(1 ,  3 , 5 , 'ABLEABLEANTI'  , 'DMqSKJr60q2U7G'),(1 ,  4 , 6 , 'ABLEABLEANTI'  , 'F1b10lQjvgm'  ),(1 ,  4 , 7 , 'ABLEABLEANTI'  , 'iIdxXGz3k0im9qOs' ),(2 ,  1 , 8 , 'ABLEABLEANTI'  , 'kNlUtWJmn'),(2 ,  2 , 9 , 'ABLEABLEANTI'  , 'rdu3ZYUbXuUajm'  ) ,(2 ,  3 , 10 , 'ABLEABLEANTI'  , 'TMom61q42N1Tjcd' ) ,(2 ,  3 , 11 , 'ABLEABLEANTI'  , 'ubiyKOWRNg'),(2 ,  4 , 12 , 'ABLEABLEATION' , 'eN6Zhtqzg'),(2 ,  4 , 13 , 'ABLEABLEATION' , 'FfQTlgu4xZ'),(3 ,  1 , 14 , 'ABLEABLEATION' , 'FLVn7YlM6CiF' ),(3 ,  1 , 15 , 'ABLEABLEATION' , 'fm4T5rlM'),(3 ,  1 , 16 , 'ABLEABLEATION' , 'gnr8NUEL5nV'  ),(3 ,  2 , 17 , 'ABLEABLEATION' , 'GRX7KQYAqJ1a5'),(3 ,  2 , 18 , 'ABLEABLEATION' , 'LUBivf8TrPZaVz'),(3 ,  2 , 19 , 'ABLEABLEATION' , 'LuFyubI74OlgnCMO' ),(3 ,  3 , 20 , 'ABLEABLEATION' , 'qiFhU4HxR7'),(3 ,  3 , 21 , 'ABLEABLEATION' , 'RL5KXfjqmB'),(3 ,  4 , 22 , 'ABLEABLEATION' , 'SckoulMs2'),(3 ,  4 , 23 , 'ABLEABLEATION' , 'yODAH3BWNQ0'  ),(4 ,  1 , 24 , 'ABLEABLEATION' , 'zIgqEQLes4qR' ),(4 ,  1 , 25 , 'ABLEABLEBAR', 'JD3uN3Frj7'),(4 ,  2 , 26 , 'ABLEABLEBAR', 'kaDdrLZ1mj'),(4 ,  2 , 27 , 'BLEABLEBAR', 'lEnwrcYf2M4wlT'),(4 ,  3 , 28 , 'ABLEABLEBAR', 'P6ZCLHB8CSm5R'),(4 ,  3 , 29 , 'ABLEABLEBAR', 'qkKRTMDHG'),(4 ,  4 , 30 , 'ABLEABLEBAR', 'VeNl0mMny3PvGr59' )| success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_oorder values(4 ,1 ,8 ,24 ,7 , 13,'2023-08-01 15:10:49'), (4 ,2 ,9 ,26 ,3 ,9,'2023-07-09 10:10:49'), (4 ,2 ,10,27 ,9 ,5,'2023-06-21 20:14:50'), (4 ,3 ,11 ,28 ,7 ,6,'2023-06-15 12:45:17'), (4 ,3 ,12 ,29 ,9 ,8,'2023-05-16 11:20:33'), (4 ,3 ,13 ,28 ,9 ,20,'2023-08-06 09:56:44'), (4 ,4 ,14 ,30 ,1 , 10,'2023-07-23 15:26:49'), (4 ,4 ,15 ,30 ,3 , 15,'2023-05-04 09:26:52'), (4 ,4 ,16 ,30 ,1 , 10,'2023-05-09 22:01:57'), (3 ,1 ,3 ,14 ,2 ,7,'2023-04-23 14:41:03'), (3 ,2 ,4 ,18 ,6 ,8,'2023-07-18 23:13:35'), (3 ,3 ,5 ,20 ,4 , 12,'2023-04-27 12:46:17'), (3 ,4 ,6 ,22 ,5 , 10,'2023-05-18 07:36:16'), (3 ,4 ,7 ,23 ,4 ,7,'2023-07-10 17:47:20'), (1 ,1 ,17,2 ,4 ,7,'2023-04-13 11:56:20'), (1 ,2 ,18 ,3 ,2 ,5,'2023-08-03 19:02:07'), (1 ,3 ,19 ,5 ,9 , 10,'2023-07-16 18:09:38'), (1 ,4 ,20 ,7 ,9 , 14,'2023-04-11 10:21:39'), (2 ,1 ,21,8 ,4 , 14,'2023-08-11 14:46:34'), (2 ,2 ,22 ,9 ,8 ,6,'2023-05-29 16:07:30'), (2 ,3 ,1 ,10 ,8 ,6,'2023-08-07 21:31:25'), (2 ,4 ,2 ,12 ,10 ,6,'2023-07-30 22:27:25')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_order_line values(1 ,1 ,17 ,1 , 100 ,3.00 ), (1 ,1 ,17 ,2 , 2 ,10.00 ), (1 ,2 ,18 ,1 ,3 ,1.00 ), (1 ,2 ,18 ,2 ,4 ,99.00 ), (1 ,3 ,19 ,1 ,6 ,23.00 ), (1 ,3 ,19 ,2 ,8 ,2.00 ), (1 ,4 ,20 ,1 ,99 ,44.00 ), (1 ,4 ,20 ,2 , 80 ,6.00 ), (2 ,1 ,21 ,1 , 49 ,42.00 ), (2 ,1 ,21 ,2 , 57 ,11.00 ), (2 ,1 ,21 ,3 ,90 ,56.00 ), (2 ,2 ,22 , 1 ,55 ,78.00 ), (2 ,2 ,22 , 2 ,67 ,10.00 ), (2 ,2 ,22 , 3 ,89 ,5.00 ), (2 ,3 ,1 , 1 ,59 ,9.00 ), (2 ,4 ,2 ,1 ,1 ,7.00 ), (2 ,4 ,2 ,2 ,9 ,16.00 ), (2 ,4 ,2 ,3 ,23 ,23.00 ), (2 ,4 ,2 ,4 ,17 ,32.00 ), (2 ,4 ,2 ,5 ,28 ,55.00 ), (2 ,4 ,2 ,6 ,47 ,11.00 ), (2 ,4 ,2 ,7 ,36 ,10.00 ), (3 ,1 ,3 ,1 ,43 ,16.00 ), (3 ,1 ,3 ,2 ,12 ,19.00 ), (3 ,1 ,3 ,3 ,16 ,200.00 ), (3 ,1 ,3 ,4 ,17 ,13.00 ), (3 ,1 ,3 ,5 ,96 ,17.00 ), (3 ,2 ,4 ,1 ,93 ,60.00 ), (3 ,2 ,4 ,2 ,92 ,54.00 ), (3 ,2 ,4 ,3 ,25 ,27.00 ), (3 ,2 ,4 ,4 ,29 ,38.00 ), (3 ,2 ,4 ,5 ,20 ,31.00 ), (3 ,2 ,4 ,6 ,30 ,60.00 ), (3 ,2 ,4 ,7 , 40 ,99.00 ), (3 ,2 ,4 ,8 ,93 ,78.00 ), (3 ,2 ,4 ,9 ,50 ,61.00 ), (3 ,2 ,4 , 10 ,83 ,58.00 ), (3 ,3 ,5 ,1 ,21 ,12.00 ), (3 ,3 ,5 ,2 ,53 ,27.00 ), (3 ,3 ,5 ,3 ,88 ,23.00 ), (3 ,3 ,5 ,4 ,70 ,33.00 ), (3 ,3 ,5 ,5 ,22 ,8.00 ), (3 ,3 ,5 ,6 ,80 ,30.00 ), (3 ,3 ,5 ,7 ,90 ,7.00 ), (3 ,3 ,5 ,8 ,44 ,4.00 ), (3 ,3 ,5 ,9 ,95 ,53.00 ), (3 ,3 ,5 , 10 ,52 ,20.00 ), (3 ,3 ,5 , 11 ,70 ,33.00 ), (3 ,3 ,5 , 12 ,38 ,14.00 ), (3 ,3 ,5 , 13 ,12 ,80.00 ), (3 ,3 ,5 , 14 ,73 ,34.00 ), (3 ,4 ,6 ,1 ,46 ,57.00 ), (3 ,4 ,6 ,2 ,23 ,111.00 ), (3 ,4 ,6 ,3 , 78 ,130.00 ), (3 ,4 ,6 ,4 ,54 ,201.00 ), (3 ,4 ,6 ,5 , 15 ,138.00 ), (3 ,4 ,6 ,6 ,24 ,1.00 ), (3 ,4 ,6 ,7 ,36 ,9.00 ), (3 ,4 ,6 ,8 ,63 ,52.00 ), (3 ,4 ,6 ,9 ,51 ,15.00 ), (3 ,4 ,6 , 10 ,93 ,79.00 ), (3 ,4 ,7 ,1 ,6 ,52.00 ), (3 ,4 ,7 ,2 ,55 ,29.00 ), (3 ,4 ,7 ,3 ,25 ,47.00 ), (3 ,4 ,7 ,4 ,18 ,86.00 ), (3 ,4 ,7 ,5 ,50 ,35.00 ), (3 ,4 ,7 ,6 ,39 ,66.00 ), (3 ,4 ,7 ,7 ,86 ,16.00 ), (3 ,4 ,7 ,8 ,56 ,250.00 ), (3 ,4 ,7 ,9 ,91 ,51.00 ), (3 ,4 ,7 , 10 ,100 ,300.00 ), (3 ,4 ,7 , 11 ,53 ,28.00 ), (3 ,4 ,7 , 12 ,12 ,500.00 ), (3 ,4 ,7 , 13 , 77 ,1000.00 ), (3 ,4 ,7 , 14 ,49 ,78.00 ), (4 ,1 ,8 ,1 ,33 ,50.00 ), (4 ,1 ,8 ,2 ,11 ,70.00 ), (4 ,1 ,8 ,3 ,57 ,36.00 ), (4 ,1 ,8 ,4 ,43 ,17.00 ), (4 ,1 ,8 ,5 ,20 ,1278.00 ), (4 ,1 ,8 ,6 ,76 ,77.00 ), (4 ,2 ,9 ,1 ,30 ,3900 ), (4 ,2 ,9 ,2 ,99 ,27.00 ), (4 ,2 ,9 ,3 ,48 ,44.00 ), (4 ,2 ,9 ,4 ,84 ,63.00 ), (4 ,2 ,9 ,5 ,26 ,32.00 ), (4 ,2 ,9 ,6 ,58 ,49.00 ), (4 ,2 ,9 ,7 ,75 ,76.00 ), (4 ,2 ,10 ,1 , 1 ,37.00 ), (4 ,2 ,10 ,2 ,92 ,12.00 ), (4 ,2 ,10 ,3 ,9 ,4.00 ), (4 ,2 ,10 ,4 ,47 ,67.00 ), (4 ,2 ,10 ,5 ,74 ,18.00 ), (4 ,2 ,10 ,6 ,59 ,8.00 ), (4 ,3 ,11 ,1 ,33 ,62.00 ), (4 ,3 ,11 ,2 ,6 ,75.00 ), (4 ,3 ,11 ,3 ,27 ,26.00 ), (4 ,3 ,11 ,4 ,7 ,201.00 ), (4 ,3 ,11 ,5 ,60 ,321.00 ), (4 ,3 ,11 ,6 ,46 ,48.00 ), (4 ,3 ,11 ,7 ,73 ,105.00 ), (4 ,3 ,11 ,8 ,48 ,38.00 ), (4 ,3 ,11 ,9 ,10 ,307.00 ), (4 ,3 ,11 , 10 ,23 ,74.00 ), (4 ,3 ,12 ,1 ,61 ,506.00 ), (4 ,3 ,12 ,2 ,4 ,19.00 ), (4 ,3 ,12 ,3 ,45 ,200.00 ), (4 ,3 ,12 ,4 ,22 ,47.00 ), (4 ,3 ,12 ,5 ,72 ,64.00 ), (4 ,3 ,12 ,6 ,28 ,73.00 ), (4 ,3 ,13 ,1 ,33 ,25.00 ), (4 ,3 ,13 ,2 ,88 ,3.00 ), (4 ,3 ,13 ,3 ,95 ,46.00 ), (4 ,3 ,13 ,4 ,62 ,200.00 ), (4 ,3 ,13 ,5 ,13 ,100.00 ), (4 ,3 ,13 ,6 ,29 ,20.00 ), (4 ,3 ,13 ,7 ,71 ,65.00 ), (4 ,3 ,13 ,8 ,37 ,45.00 ), (4 ,3 ,13 ,9 ,27 ,20.00 ), (4 ,3 ,13 , 10 ,44 ,24.00 ), (4 ,3 ,13 , 11 ,50 ,72.00 ), (4 ,4 ,14 ,1 ,4 ,67.00 ), (4 ,4 ,14 ,2 ,30 ,40.00 ), (4 ,4 ,14 ,3 ,54 ,203.00 ), (4 ,4 ,14 ,4 ,63 ,44.00 ), (4 ,4 ,14 ,5 ,43 ,55.00 ), (4 ,4 ,14 ,6 ,1 ,708.00 ), (4 ,4 ,14 ,7 ,22 ,71.00 ), (4 ,4 ,15 ,1 ,31 ,456.00 ), (4 ,4 ,15 ,2 ,18 ,66.00 ), (4 ,4 ,15 ,3 ,3 ,21.00 ), (4 ,4 ,15 ,4 ,34 ,678.00 ), (4 ,4 ,15 ,5 ,17 ,43.00 ), (4 ,4 ,15 ,6 ,62 ,564.00 ), (4 ,4 ,15 ,7 ,64 ,39.00 ), (4 ,4 ,15 ,8 ,55 ,69.00 ), (4 ,4 ,15 ,9 ,72 ,57.00 ), (4 ,4 ,15 , 10 ,42 ,23.00 ), (4 ,4 ,15 , 11 ,85 ,770.00 ), (4 ,4 ,15 , 12 ,65 ,42.00 ), (4 ,4 ,15 , 13 ,95 ,860.00 ), (4 ,4 ,15 , 14 ,97 ,67.00 ), (4 ,4 ,16 ,1 ,32 ,40.00 ), (4 ,4 ,16 ,2 ,66 ,64.00 ), (4 ,4 ,16 ,3 ,86 ,78.00 ), (4 ,4 ,16 ,4 ,40 ,22.00 ), (4 ,4 ,16 ,5 ,28 ,22.00 ), (4 ,4 ,16 ,6 ,77 ,70.00 ), (4 ,4 ,16 ,7 ,25 ,68.00 ), (4 ,4 ,16 ,8 ,41 ,41.00 ) | success | ckdb1 |
      | test | 111111    | conn_1 | False   | insert into bmsql_item values(1,'wCjDwfcObNgPQX' ,83.17), ( 2,'rzg3qLnqGjdxRFA0bO',62.74), ( 3,'JWVr8wflQNHq48bj',42.83), ( 4,'yxmaWxyxRLhGocQWhfjU' ,20.84), ( 5,'Bkby9a2L9kiKKYJbrUPhh',41.86), ( 6,'YxIRtAsLnxGUmB' ,3.51), ( 7,'eTRMKegMKpoJ8deGjnxeh',83.21), ( 8,'VaEudA419y7P7K' ,43.88), ( 9,'jnhSYFroHbtm5fL',93.26), (10,'uuxMbEFa4DFBxpLwZaJzp9',24.62), (11,'IYoIHkWqLmXvJDC5mM4KvJzy',31.42), (12,'NfOKBrHB2sQk2hV4WYA2O',1.73), (13,'PFnbYczCzGBqFMREdBZjM',56.89), (14,'SoRSjyVZfau2Pfofq84eJWo2',94.79), (15,'mvmysJ2z33oVLormaHt2TX0' ,28.44), (16,'PLeFFqygR4bZ1pNN8H67NT',84.35), (17,'LGfsYufelVQL6uddvcp',90.48), (18,'zqWDl6ZaOlK1XuLPo80',43.18), (19,'ieyzYPTlZ1w37vsJb' ,53.27), (20,'fL1zYx9Sbsk8dRoLGOk3EV',53.12), (21,'QfpnRCxZYJ2AIHspua',4.29), (22,'MPlIWbeZ9aG2j6ZP9' ,17.01), (23,'ZyCh0Io37Tuosy5',84.32), (24,'Yp7RYkXm6ZLRXNzEQ2c',40.17), (25,'QRDVIuCFhHKu71DC',89.28), (26,'DAvmXzr3dLmk7146X4',92.77), (27,'gqRAIrAeFtnlFGOTUxZK' ,39.57), (28,'pDXL2tcEO2uoeaFCGG',75.99), (29,'it9E5eJD1XKCKmLa',19.04), (30,'NXS6eZcWVUMyERE751vvIyJ' ,14.85), (31,'k4E6t0wevemhmeSkn' ,67.70), (32,'elzgHSxlohhdXFqC0ynoW',88.07), (33,'R54gndRDr8EVga8yhyd',46.59), (34,'iuHBZdr3ZuAOucXurBcWmLm' ,67.41), (35,'WSzsKFM5o8xyfiY6B0',70.76), (36,'FGIDAe8XdQnQv75aiE',53.59), (37,'eAjTQ8QbKpkwrvzK5Ufr' ,36.75), (38,'k8SRonp52jN25UqS15yaupM' ,67.89), (39,'VzMEbe7ssIQMHeZGWcOaW1',48.34), (40,'dezXUY3iMAWvOH' ,91.64), (41,'BJ16wChn4U4PRx8kremsSQ',35.49), (42,'Ev6Ezu4qm41c3O4t',85.83), (43,'eAHUbtxi3MRrxRylsYfCD9Q' ,98.05), (44,'J7oTklDPVj8x1Ldm8' ,31.69), (45,'Oh1CgWiPm1FAnKEE6W3o7j7' ,53.79), (46,'VpBTQSDDewVvNMIwN8Qb' ,32.92), (47,'WRmX4hXMdQDwfnnCchP5' ,29.26), (48,'fJBKW1UWA9U7LmT6F' ,41.82), (49,'pxPlfBXdpuMGFW9Ay' ,77.29), (50,'bF54qcAW9toVU8pWyj1o' ,81.48), (51,'Y82JqhC5qeXWaDFxUTp',9.95), (52,'yLb5KI92cx8Wbz' ,10.12), (53,'l1qOGhgYqiRkM5FiJB',89.03), (54,'PiZhCiyRxvDfNWxSA6d',34.59), (55,'wyrWpVt9be54E7yjj9R',65.77), (56,'cpTWlw6PUcDq8g34j86aC',47.95), (57,'n0MK9yiAIhdDHULDyS',19.65), (58,'GKSxTLUXvz1yQvXrD' ,91.86), (59,'Im9esuZ7qyWJkx' ,43.43), (60,'GCC48SuObJ7Qn3Z',63.22), (61,'j6EOGi0afLUtmbqzqq2LkG',13.39), (62,'mMGHC3phYZmEwQhA9ob',54.12), (63,'D6fK8HhfyrC1G1' ,3.80), (64,'rEM7n37dVNvhlqyFcFtQL',9.01), (65,'CbGpca5BH38hwAkS0d21z',49.11), (66,'ImMqhRCsQ9zQ2M1CEX',22.77), (67,'S7SbCWVcwkhVls' ,42.82), (68,'QsT8t9vwrmtduBmbB' ,83.34), (69,'tKZqQJwny6s8414pwKx7d71' ,56.81), (70,'POqnRHcvb4rUkwXmMTguR',96.50), (71,'kVxYSlR5u1OE0i2E2C0a' ,84.03), (72,'AhIB8hRVP8qChww8WCd6' ,89.71), (73,'JPrRFu6adIrHYKvyJL9',6.81), (74,'rCynAs8d4lR1HfXMzko',43.13), (75,'Kel9CI35bo3aFJfhIw',46.50), (76,'sGGwLVqDNPkZvZn',23.26), (77,'UzV45rjD3WgZN7KYcLeoSyyW',91.13), (78,'UPAslVSoM53PrFPJx' ,31.33), (79,'unWoCa35IGyWzfjvo1kri',65.06), (80,'gVCP30qZ0cguao0f7k4tUWg' ,4.42), (81,'wJUtkfRw9xbAHx4g1w2',29.90), (82,'sFrG7FciqEwg3XtymgVZ' ,22.56), (83,'QGP5hOttOgToHCdlkrzzTaO' ,59.38), (84,'Im5GrI33ShyVqu47',23.18), (85,'VEHTD60RbTBev1jTvfUOQ',24.60), (86,'wK9NIPcy9KhsnwWqP1H',51.99), (87,'Hu9WtxpmsxKSOg7ieO',72.45), (88,'glCOvurfWglJPNgQpQbmOTV' ,43.25), (89,'YpxwYALvzrTyDDm99Z9mUOY' ,11.72), (90,'gsULDcnE9uvbEDMA46bkO',81.24), (91,'p0KtWl6qtkMBgB9G7' ,96.04), (92,'MwdmZzrtKNYRs94Eq1sQcA',36.53), (93,'VzGWVN387Lfeop2',68.87), (94,'JFef13O98Rr25752g8dBp',39.79), (95,'nnfzQCeMrpiJA6' ,76.85), (96,'ai0OCglBmaEsgtAAE' ,44.24), (97,'fJm8wGllYnoVdrZXQLYAwb',55.57), (98,'YKlrzOCzYJo6EAlOZAWAgu',70.94), (99,'LGzS09GEjLGfT8t',61.35), (100,'VqTO4b1uCpm9AP9g7Ut',81.56) | success | ckdb1 |
      | test | 111111    | conn_1 | True    | insert into bmsql_stock values(1 ,1 ,80 ,0 ,0 ,0 ), (1 ,2 ,60 ,0 ,0 ,0 ), (1 ,3 ,89 ,0 ,0 ,0 ), (1 ,4 ,52 ,0 ,0 ,0 ), (1 ,5 ,100 ,0 ,0 ,0 ), (1 ,6 ,19 ,0 ,0 ,0 ), (1 ,7 ,29 ,0 ,0 ,0 ), (1 ,8 ,94 ,0 ,0 ,0 ), (1 ,9 ,81 ,0 ,0 ,0 ), (1 ,10 ,38 ,0 ,0 ,0 ), (1 ,11 ,71 ,0 ,0 ,0 ), (1 ,12 ,80 ,0 ,0 ,0 ), (1 ,13 ,78 ,0 ,0 ,0 ), (1 ,14 ,92 ,0 ,0 ,0 ), (1 ,15 ,97 ,0 ,0 ,0 ), (1 ,16 ,79 ,0 ,0 ,0 ), (1 ,17 ,79 ,0 ,0 ,0 ), (1 ,18 ,82 ,0 ,0 ,0 ), (1 ,19 ,34 ,0 ,0 ,0 ), (1 ,20 ,23 ,0 ,0 ,0 ), (1 ,21 ,15 ,0 ,0 ,0 ), (1 ,22 ,89 ,0 ,0 ,0 ), (1 ,23 ,85 ,0 ,0 ,0 ), (1 ,24 ,81 ,0 ,0 ,0 ), (1 ,25 ,98 ,0 ,0 ,0 ), (2 ,26 ,89 ,0 ,0 ,0 ), (2 ,27 ,58 ,0 ,0 ,0 ), (2 ,28 ,94 ,0 ,0 ,0 ), (2 ,29 ,14 ,0 ,0 ,0 ), (2 ,30 ,34 ,0 ,0 ,0 ), (2 ,31 ,18 ,0 ,0 ,0 ), (2 ,32 ,41 ,0 ,0 ,0 ), (2 ,33 ,82 ,0 ,0 ,0 ), (2 ,34 ,74 ,0 ,0 ,0 ), (2 ,35 ,19 ,0 ,0 ,0 ), (2 ,36 ,31 ,0 ,0 ,0 ), (2 ,37 ,41 ,0 ,0 ,0 ), (2 ,38 ,34 ,0 ,0 ,0 ), (2 ,39 ,88 ,0 ,0 ,0 ), (2 ,40 ,25 ,0 ,0 ,0 ), (2 ,41 ,52 ,0 ,0 ,0 ), (2 ,42 ,59 ,0 ,0 ,0 ), (2 ,43 ,63 ,0 ,0 ,0 ), (2 ,44 ,53 ,0 ,0 ,0 ), (2 ,45 ,44 ,0 ,0 ,0 ), (2 ,46 ,67 ,0 ,0 ,0 ), (2 ,47 ,48 ,0 ,0 ,0 ), (2 ,48 ,89 ,0 ,0 ,0 ), (2 ,49 ,32 ,0 ,0 ,0 ), (2 ,50 ,67 ,0 ,0 ,0 ), (3 ,51 ,60 ,0 ,0 ,0 ), (3 ,52 ,10 ,0 ,0 ,0 ), (3 ,53 ,95 ,0 ,0 ,0 ), (3 ,54 ,64 ,0 ,0 ,0 ), (3 ,55 ,64 ,0 ,0 ,0 ), (3 ,56 ,82 ,0 ,0 ,0 ), (3 ,57 ,20 ,0 ,0 ,0 ), (3 ,58 ,82 ,0 ,0 ,0 ), (3 ,59 ,70 ,0 ,0 ,0 ), (3 ,60 ,69 ,0 ,0 ,0 ), (3 ,61 ,28 ,0 ,0 ,0 ), (3 ,62 ,76 ,0 ,0 ,0 ), (3 ,63 ,40 ,0 ,0 ,0 ), (3 ,64 ,89 ,0 ,0 ,0 ), (3 ,65 ,56 ,0 ,0 ,0 ), (3 ,66 ,49 ,0 ,0 ,0 ), (3 ,67 ,39 ,0 ,0 ,0 ), (3 ,68 ,42 ,0 ,0 ,0 ), (3 ,69 ,88 ,0 ,0 ,0 ), (3 ,70 ,25 ,0 ,0 ,0 ), (4 ,71 ,91 ,0 ,0 ,0 ), (4 ,72 ,76 ,0 ,0 ,0 ), (4 ,73 ,71 ,0 ,0 ,0 ), (4 ,74 ,49 ,0 ,0 ,0 ), (4 ,75 ,74 ,0 ,0 ,0 ), (4 ,76 ,20 ,0 ,0 ,0 ), (4 ,77 ,52 ,0 ,0 ,0 ), (4 ,78 ,49 ,0 ,0 ,0 ), (4 ,79 ,45 ,0 ,0 ,0 ), (4 ,80 ,72 ,0 ,0 ,0 ), (4 ,81 ,60 ,0 ,0 ,0 ), (4 ,82 ,32 ,0 ,0 ,0 ), (4 ,83 ,94 ,0 ,0 ,0 ), (4 ,84 ,33 ,0 ,0 ,0 ), (4 ,85 ,98 ,0 ,0 ,0 ), (4 ,86 ,84 ,0 ,0 ,0 ), (4 ,87 ,90 ,0 ,0 ,0 ), (4 ,88 ,14 ,0 ,0 ,0 ), (4 ,89 ,84 ,0 ,0 ,0 ), (4 ,90 ,74 ,0 ,0 ,0 ), (4 ,91 ,67 ,0 ,0 ,0 ), (4 ,92 ,85 ,0 ,0 ,0 ), (4 ,93 ,60 ,0 ,0 ,0 ), (4 ,94 ,65 ,0 ,0 ,0 ), (4 ,95 ,52 ,0 ,0 ,0 ), (4 ,96 ,51 ,0 ,0 ,0 ), (4 ,97 ,71 ,0 ,0 ,0 ), (4 ,98 ,86 ,0 ,0 ,0 ), (4 ,99 ,34 ,0 ,0 ,0 ), (4 ,100 ,72 ,0 ,0 ,0)                                                    | success | ckdb1 |


    # 1.路由到TP，并准备数据(explain及结果集检测)
    Then execute sql in "dble-1" in "user" mode
      | user  | passwd    | conn   | toClose | sql                                                                                 | expect  | db      |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_warehouse                                                | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_district                                                 | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_customer                                                 | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_oorder                                                   | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_order_line                                               | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_item                                                     | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | drop table if exists bmsql_stock                                                    | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_warehouse (w_id integer not null, w_ytd decimal(12,2), w_name varchar(10))                          | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_district (d_w_id integer not null, d_id integer not null, d_ytd decimal(12,2), d_name varchar(10))                  | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_customer (c_w_id integer not null, c_d_id integer not null, c_id integer not null, c_last varchar(16), c_first varchar(16))                                                   | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_oorder (o_w_id integer not null, o_d_id integer not null, o_id integer not null, o_c_id integer, o_carrier_id integer, o_ol_cnt integer,o_entry_d timestamp)                  | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_order_line (ol_w_id integer   not null, ol_d_id integer not null, ol_o_id integer not null, ol_number integer not null,ol_i_id integer not null, ol_amount decimal(6,2))                                              | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_item (i_id integer not null, i_name varchar(24), i_price decimal(5,2))                      | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | create table bmsql_stock (s_w_id integer not null, s_i_id integer not null, s_quantity integer, s_ytd integer, s_order_cnt integer, s_remote_cnt integer)                 | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | insert into bmsql_warehouse values(1,1200.09,'SH_MH'),(2,400.09,'SH_FX'),(3,10000.09,'SH_XH'),(4,20000,'SH_HP')                                                   | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | insert into bmsql_district values(1, 1,300.01,'hm'),(1, 2,400.3,'hq'),(1, 3,603,'kl'),(1, 4,719.55,'jh'),(2, 1,345.23,'hm'),(2, 2,503.13,'ss'),(2, 3,834.1,'sj'),(2, 4,1000.5,'wd'),(3, 1,709.01,'gg'),(3, 2,200.3,'hq'),(4, 1,567.8,'kl'),(4, 2,789.05,'jh')                          | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | insert into bmsql_customer values(1 ,  1 , 1 , 'ABLEABLEABLE'  , 'bBq684NZS6yV') ,(1 ,  1 , 2 , 'ABLEABLEABLE'  , 'R3eWOserEVq'  ),(1 ,  2 , 3 , 'ABLEABLEABLE'  , 'XNbyFXVesN2bAb0E' ),(1 ,  2 , 4 , 'ABLEABLEANTI'  , 'CEFLkwv1' ),(1 ,  3 , 5 , 'ABLEABLEANTI'  , 'DMqSKJr60q2U7G'),(1 ,  4 , 6 , 'ABLEABLEANTI'  , 'F1b10lQjvgm'  ),(1 ,  4 , 7 , 'ABLEABLEANTI'  , 'iIdxXGz3k0im9qOs' ),(2 ,  1 , 8 , 'ABLEABLEANTI'  , 'kNlUtWJmn'),(2 ,  2 , 9 , 'ABLEABLEANTI'  , 'rdu3ZYUbXuUajm'  ) ,(2 ,  3 , 10 , 'ABLEABLEANTI'  , 'TMom61q42N1Tjcd' ) ,(2 ,  3 , 11 , 'ABLEABLEANTI'  , 'ubiyKOWRNg'),(2 ,  4 , 12 , 'ABLEABLEATION' , 'eN6Zhtqzg'),(2 ,  4 , 13 , 'ABLEABLEATION' , 'FfQTlgu4xZ'),(3 ,  1 , 14 , 'ABLEABLEATION' , 'FLVn7YlM6CiF' ),(3 ,  1 , 15 , 'ABLEABLEATION' , 'fm4T5rlM'),(3 ,  1 , 16 , 'ABLEABLEATION' , 'gnr8NUEL5nV'  ),(3 ,  2 , 17 , 'ABLEABLEATION' , 'GRX7KQYAqJ1a5'),(3 ,  2 , 18 , 'ABLEABLEATION' , 'LUBivf8TrPZaVz'),(3 ,  2 , 19 , 'ABLEABLEATION' , 'LuFyubI74OlgnCMO' ),(3 ,  3 , 20 , 'ABLEABLEATION' , 'qiFhU4HxR7'),(3 ,  3 , 21 , 'ABLEABLEATION' , 'RL5KXfjqmB'),(3 ,  4 , 22 , 'ABLEABLEATION' , 'SckoulMs2'),(3 ,  4 , 23 , 'ABLEABLEATION' , 'yODAH3BWNQ0'  ),(4 ,  1 , 24 , 'ABLEABLEATION' , 'zIgqEQLes4qR' ),(4 ,  1 , 25 , 'ABLEABLEBAR', 'JD3uN3Frj7'),(4 ,  2 , 26 , 'ABLEABLEBAR', 'kaDdrLZ1mj'),(4 ,  2 , 27 , 'BLEABLEBAR', 'lEnwrcYf2M4wlT'),(4 ,  3 , 28 , 'ABLEABLEBAR', 'P6ZCLHB8CSm5R'),(4 ,  3 , 29 , 'ABLEABLEBAR', 'qkKRTMDHG'),(4 ,  4 , 30 , 'ABLEABLEBAR', 'VeNl0mMny3PvGr59' )| success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   |  insert into bmsql_oorder values(4 ,1 ,8 ,24 ,7 , 13,'2023-08-01 15:10:49'), (4 ,2 ,9 ,26 ,3 ,9,'2023-07-09 10:10:49'), (4 ,2 ,10,27 ,9 ,5,'2023-06-21 20:14:50'), (4 ,3 ,11 ,28 ,7 ,6,'2023-06-15 12:45:17'), (4 ,3 ,12 ,29 ,9 ,8,'2023-05-16 11:20:33'), (4 ,3 ,13 ,28 ,9 ,20,'2023-08-06 09:56:44'), (4 ,4 ,14 ,30 ,1 , 10,'2023-07-23 15:26:49'), (4 ,4 ,15 ,30 ,3 , 15,'2023-05-04 09:26:52'), (4 ,4 ,16 ,30 ,1 , 10,'2023-05-09 22:01:57'), (3 ,1 ,3 ,14 ,2 ,7,'2023-04-23 14:41:03'), (3 ,2 ,4 ,18 ,6 ,8,'2023-07-18 23:13:35'), (3 ,3 ,5 ,20 ,4 , 12,'2023-04-27 12:46:17'), (3 ,4 ,6 ,22 ,5 , 10,'2023-05-18 07:36:16'), (3 ,4 ,7 ,23 ,4 ,7,'2023-07-10 17:47:20'), (1 ,1 ,17,2 ,4 ,7,'2023-04-13 11:56:20'), (1 ,2 ,18 ,3 ,2 ,5,'2023-08-03 19:02:07'), (1 ,3 ,19 ,5 ,9 , 10,'2023-07-16 18:09:38'), (1 ,4 ,20 ,7 ,9 , 14,'2023-04-11 10:21:39'), (2 ,1 ,21,8 ,4 , 14,'2023-08-11 14:46:34'), (2 ,2 ,22 ,9 ,8 ,6,'2023-05-29 16:07:30'), (2 ,3 ,1 ,10 ,8 ,6,'2023-08-07 21:31:25'), (2 ,4 ,2 ,12 ,10 ,6,'2023-07-30 22:27:25') | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | insert into bmsql_order_line values(1 ,1 ,17 ,1 , 100 ,3.00 ), (1 ,1 ,17 ,2 , 2 ,10.00 ), (1 ,2 ,18 ,1 ,3 ,1.00 ), (1 ,2 ,18 ,2 ,4 ,99.00 ), (1 ,3 ,19 ,1 ,6 ,23.00 ), (1 ,3 ,19 ,2 ,8 ,2.00 ), (1 ,4 ,20 ,1 ,99 ,44.00 ), (1 ,4 ,20 ,2 , 80 ,6.00 ), (2 ,1 ,21 ,1 , 49 ,42.00 ), (2 ,1 ,21 ,2 , 57 ,11.00 ), (2 ,1 ,21 ,3 ,90 ,56.00 ), (2 ,2 ,22 , 1 ,55 ,78.00 ), (2 ,2 ,22 , 2 ,67 ,10.00 ), (2 ,2 ,22 , 3 ,89 ,5.00 ), (2 ,3 ,1 , 1 ,59 ,9.00 ), (2 ,4 ,2 ,1 ,1 ,7.00 ), (2 ,4 ,2 ,2 ,9 ,16.00 ), (2 ,4 ,2 ,3 ,23 ,23.00 ), (2 ,4 ,2 ,4 ,17 ,32.00 ), (2 ,4 ,2 ,5 ,28 ,55.00 ), (2 ,4 ,2 ,6 ,47 ,11.00 ), (2 ,4 ,2 ,7 ,36 ,10.00 ), (3 ,1 ,3 ,1 ,43 ,16.00 ), (3 ,1 ,3 ,2 ,12 ,19.00 ), (3 ,1 ,3 ,3 ,16 ,200.00 ), (3 ,1 ,3 ,4 ,17 ,13.00 ), (3 ,1 ,3 ,5 ,96 ,17.00 ), (3 ,2 ,4 ,1 ,93 ,60.00 ), (3 ,2 ,4 ,2 ,92 ,54.00 ), (3 ,2 ,4 ,3 ,25 ,27.00 ), (3 ,2 ,4 ,4 ,29 ,38.00 ), (3 ,2 ,4 ,5 ,20 ,31.00 ), (3 ,2 ,4 ,6 ,30 ,60.00 ), (3 ,2 ,4 ,7 , 40 ,99.00 ), (3 ,2 ,4 ,8 ,93 ,78.00 ), (3 ,2 ,4 ,9 ,50 ,61.00 ), (3 ,2 ,4 , 10 ,83 ,58.00 ), (3 ,3 ,5 ,1 ,21 ,12.00 ), (3 ,3 ,5 ,2 ,53 ,27.00 ), (3 ,3 ,5 ,3 ,88 ,23.00 ), (3 ,3 ,5 ,4 ,70 ,33.00 ), (3 ,3 ,5 ,5 ,22 ,8.00 ), (3 ,3 ,5 ,6 ,80 ,30.00 ), (3 ,3 ,5 ,7 ,90 ,7.00 ), (3 ,3 ,5 ,8 ,44 ,4.00 ), (3 ,3 ,5 ,9 ,95 ,53.00 ), (3 ,3 ,5 , 10 ,52 ,20.00 ), (3 ,3 ,5 , 11 ,70 ,33.00 ), (3 ,3 ,5 , 12 ,38 ,14.00 ), (3 ,3 ,5 , 13 ,12 ,80.00 ), (3 ,3 ,5 , 14 ,73 ,34.00 ), (3 ,4 ,6 ,1 ,46 ,57.00 ), (3 ,4 ,6 ,2 ,23 ,111.00 ), (3 ,4 ,6 ,3 , 78 ,130.00 ), (3 ,4 ,6 ,4 ,54 ,201.00 ), (3 ,4 ,6 ,5 , 15 ,138.00 ), (3 ,4 ,6 ,6 ,24 ,1.00 ), (3 ,4 ,6 ,7 ,36 ,9.00 ), (3 ,4 ,6 ,8 ,63 ,52.00 ), (3 ,4 ,6 ,9 ,51 ,15.00 ), (3 ,4 ,6 , 10 ,93 ,79.00 ), (3 ,4 ,7 ,1 ,6 ,52.00 ), (3 ,4 ,7 ,2 ,55 ,29.00 ), (3 ,4 ,7 ,3 ,25 ,47.00 ), (3 ,4 ,7 ,4 ,18 ,86.00 ), (3 ,4 ,7 ,5 ,50 ,35.00 ), (3 ,4 ,7 ,6 ,39 ,66.00 ), (3 ,4 ,7 ,7 ,86 ,16.00 ), (3 ,4 ,7 ,8 ,56 ,250.00 ), (3 ,4 ,7 ,9 ,91 ,51.00 ), (3 ,4 ,7 , 10 ,100 ,300.00 ), (3 ,4 ,7 , 11 ,53 ,28.00 ), (3 ,4 ,7 , 12 ,12 ,500.00 ), (3 ,4 ,7 , 13 , 77 ,1000.00 ), (3 ,4 ,7 , 14 ,49 ,78.00 ), (4 ,1 ,8 ,1 ,33 ,50.00 ), (4 ,1 ,8 ,2 ,11 ,70.00 ), (4 ,1 ,8 ,3 ,57 ,36.00 ), (4 ,1 ,8 ,4 ,43 ,17.00 ), (4 ,1 ,8 ,5 ,20 ,1278.00 ), (4 ,1 ,8 ,6 ,76 ,77.00 ), (4 ,2 ,9 ,1 ,30 ,3900 ), (4 ,2 ,9 ,2 ,99 ,27.00 ), (4 ,2 ,9 ,3 ,48 ,44.00 ), (4 ,2 ,9 ,4 ,84 ,63.00 ), (4 ,2 ,9 ,5 ,26 ,32.00 ), (4 ,2 ,9 ,6 ,58 ,49.00 ), (4 ,2 ,9 ,7 ,75 ,76.00 ), (4 ,2 ,10 ,1 , 1 ,37.00 ), (4 ,2 ,10 ,2 ,92 ,12.00 ), (4 ,2 ,10 ,3 ,9 ,4.00 ), (4 ,2 ,10 ,4 ,47 ,67.00 ), (4 ,2 ,10 ,5 ,74 ,18.00 ), (4 ,2 ,10 ,6 ,59 ,8.00 ), (4 ,3 ,11 ,1 ,33 ,62.00 ), (4 ,3 ,11 ,2 ,6 ,75.00 ), (4 ,3 ,11 ,3 ,27 ,26.00 ), (4 ,3 ,11 ,4 ,7 ,201.00 ), (4 ,3 ,11 ,5 ,60 ,321.00 ), (4 ,3 ,11 ,6 ,46 ,48.00 ), (4 ,3 ,11 ,7 ,73 ,105.00 ), (4 ,3 ,11 ,8 ,48 ,38.00 ), (4 ,3 ,11 ,9 ,10 ,307.00 ), (4 ,3 ,11 , 10 ,23 ,74.00 ), (4 ,3 ,12 ,1 ,61 ,506.00 ), (4 ,3 ,12 ,2 ,4 ,19.00 ), (4 ,3 ,12 ,3 ,45 ,200.00 ), (4 ,3 ,12 ,4 ,22 ,47.00 ), (4 ,3 ,12 ,5 ,72 ,64.00 ), (4 ,3 ,12 ,6 ,28 ,73.00 ), (4 ,3 ,13 ,1 ,33 ,25.00 ), (4 ,3 ,13 ,2 ,88 ,3.00 ), (4 ,3 ,13 ,3 ,95 ,46.00 ), (4 ,3 ,13 ,4 ,62 ,200.00 ), (4 ,3 ,13 ,5 ,13 ,100.00 ), (4 ,3 ,13 ,6 ,29 ,20.00 ), (4 ,3 ,13 ,7 ,71 ,65.00 ), (4 ,3 ,13 ,8 ,37 ,45.00 ), (4 ,3 ,13 ,9 ,27 ,20.00 ), (4 ,3 ,13 , 10 ,44 ,24.00 ), (4 ,3 ,13 , 11 ,50 ,72.00 ), (4 ,4 ,14 ,1 ,4 ,67.00 ), (4 ,4 ,14 ,2 ,30 ,40.00 ), (4 ,4 ,14 ,3 ,54 ,203.00 ), (4 ,4 ,14 ,4 ,63 ,44.00 ), (4 ,4 ,14 ,5 ,43 ,55.00 ), (4 ,4 ,14 ,6 ,1 ,708.00 ), (4 ,4 ,14 ,7 ,22 ,71.00 ), (4 ,4 ,15 ,1 ,31 ,456.00 ), (4 ,4 ,15 ,2 ,18 ,66.00 ), (4 ,4 ,15 ,3 ,3 ,21.00 ), (4 ,4 ,15 ,4 ,34 ,678.00 ), (4 ,4 ,15 ,5 ,17 ,43.00 ), (4 ,4 ,15 ,6 ,62 ,564.00 ), (4 ,4 ,15 ,7 ,64 ,39.00 ), (4 ,4 ,15 ,8 ,55 ,69.00 ), (4 ,4 ,15 ,9 ,72 ,57.00 ), (4 ,4 ,15 , 10 ,42 ,23.00 ), (4 ,4 ,15 , 11 ,85 ,770.00 ), (4 ,4 ,15 , 12 ,65 ,42.00 ), (4 ,4 ,15 , 13 ,95 ,860.00 ), (4 ,4 ,15 , 14 ,97 ,67.00 ), (4 ,4 ,16 ,1 ,32 ,40.00 ), (4 ,4 ,16 ,2 ,66 ,64.00 ), (4 ,4 ,16 ,3 ,86 ,78.00 ), (4 ,4 ,16 ,4 ,40 ,22.00 ), (4 ,4 ,16 ,5 ,28 ,22.00 ), (4 ,4 ,16 ,6 ,77 ,70.00 ), (4 ,4 ,16 ,7 ,25 ,68.00 ), (4 ,4 ,16 ,8 ,41 ,41.00 ) | success | htapDb1 |
      | htap1 | 111111    | conn_1 | False   | insert into bmsql_item values(1,'wCjDwfcObNgPQX' ,83.17), ( 2,'rzg3qLnqGjdxRFA0bO',62.74), ( 3,'JWVr8wflQNHq48bj',42.83), ( 4,'yxmaWxyxRLhGocQWhfjU' ,20.84), ( 5,'Bkby9a2L9kiKKYJbrUPhh',41.86), ( 6,'YxIRtAsLnxGUmB' ,3.51), ( 7,'eTRMKegMKpoJ8deGjnxeh',83.21), ( 8,'VaEudA419y7P7K' ,43.88), ( 9,'jnhSYFroHbtm5fL',93.26), (10,'uuxMbEFa4DFBxpLwZaJzp9',24.62), (11,'IYoIHkWqLmXvJDC5mM4KvJzy',31.42), (12,'NfOKBrHB2sQk2hV4WYA2O',1.73), (13,'PFnbYczCzGBqFMREdBZjM',56.89), (14,'SoRSjyVZfau2Pfofq84eJWo2',94.79), (15,'mvmysJ2z33oVLormaHt2TX0' ,28.44), (16,'PLeFFqygR4bZ1pNN8H67NT',84.35), (17,'LGfsYufelVQL6uddvcp',90.48), (18,'zqWDl6ZaOlK1XuLPo80',43.18), (19,'ieyzYPTlZ1w37vsJb' ,53.27), (20,'fL1zYx9Sbsk8dRoLGOk3EV',53.12), (21,'QfpnRCxZYJ2AIHspua',4.29), (22,'MPlIWbeZ9aG2j6ZP9' ,17.01), (23,'ZyCh0Io37Tuosy5',84.32), (24,'Yp7RYkXm6ZLRXNzEQ2c',40.17), (25,'QRDVIuCFhHKu71DC',89.28), (26,'DAvmXzr3dLmk7146X4',92.77), (27,'gqRAIrAeFtnlFGOTUxZK' ,39.57), (28,'pDXL2tcEO2uoeaFCGG',75.99), (29,'it9E5eJD1XKCKmLa',19.04), (30,'NXS6eZcWVUMyERE751vvIyJ' ,14.85), (31,'k4E6t0wevemhmeSkn' ,67.70), (32,'elzgHSxlohhdXFqC0ynoW',88.07), (33,'R54gndRDr8EVga8yhyd',46.59), (34,'iuHBZdr3ZuAOucXurBcWmLm' ,67.41), (35,'WSzsKFM5o8xyfiY6B0',70.76), (36,'FGIDAe8XdQnQv75aiE',53.59), (37,'eAjTQ8QbKpkwrvzK5Ufr' ,36.75), (38,'k8SRonp52jN25UqS15yaupM' ,67.89), (39,'VzMEbe7ssIQMHeZGWcOaW1',48.34), (40,'dezXUY3iMAWvOH' ,91.64), (41,'BJ16wChn4U4PRx8kremsSQ',35.49), (42,'Ev6Ezu4qm41c3O4t',85.83), (43,'eAHUbtxi3MRrxRylsYfCD9Q' ,98.05), (44,'J7oTklDPVj8x1Ldm8' ,31.69), (45,'Oh1CgWiPm1FAnKEE6W3o7j7' ,53.79), (46,'VpBTQSDDewVvNMIwN8Qb' ,32.92), (47,'WRmX4hXMdQDwfnnCchP5' ,29.26), (48,'fJBKW1UWA9U7LmT6F' ,41.82), (49,'pxPlfBXdpuMGFW9Ay' ,77.29), (50,'bF54qcAW9toVU8pWyj1o' ,81.48), (51,'Y82JqhC5qeXWaDFxUTp',9.95), (52,'yLb5KI92cx8Wbz' ,10.12), (53,'l1qOGhgYqiRkM5FiJB',89.03), (54,'PiZhCiyRxvDfNWxSA6d',34.59), (55,'wyrWpVt9be54E7yjj9R',65.77), (56,'cpTWlw6PUcDq8g34j86aC',47.95), (57,'n0MK9yiAIhdDHULDyS',19.65), (58,'GKSxTLUXvz1yQvXrD' ,91.86), (59,'Im9esuZ7qyWJkx' ,43.43), (60,'GCC48SuObJ7Qn3Z',63.22), (61,'j6EOGi0afLUtmbqzqq2LkG',13.39), (62,'mMGHC3phYZmEwQhA9ob',54.12), (63,'D6fK8HhfyrC1G1' ,3.80), (64,'rEM7n37dVNvhlqyFcFtQL',9.01), (65,'CbGpca5BH38hwAkS0d21z',49.11), (66,'ImMqhRCsQ9zQ2M1CEX',22.77), (67,'S7SbCWVcwkhVls' ,42.82), (68,'QsT8t9vwrmtduBmbB' ,83.34), (69,'tKZqQJwny6s8414pwKx7d71' ,56.81), (70,'POqnRHcvb4rUkwXmMTguR',96.50), (71,'kVxYSlR5u1OE0i2E2C0a' ,84.03), (72,'AhIB8hRVP8qChww8WCd6' ,89.71), (73,'JPrRFu6adIrHYKvyJL9',6.81), (74,'rCynAs8d4lR1HfXMzko',43.13), (75,'Kel9CI35bo3aFJfhIw',46.50), (76,'sGGwLVqDNPkZvZn',23.26), (77,'UzV45rjD3WgZN7KYcLeoSyyW',91.13), (78,'UPAslVSoM53PrFPJx' ,31.33), (79,'unWoCa35IGyWzfjvo1kri',65.06), (80,'gVCP30qZ0cguao0f7k4tUWg' ,4.42), (81,'wJUtkfRw9xbAHx4g1w2',29.90), (82,'sFrG7FciqEwg3XtymgVZ' ,22.56), (83,'QGP5hOttOgToHCdlkrzzTaO' ,59.38), (84,'Im5GrI33ShyVqu47',23.18), (85,'VEHTD60RbTBev1jTvfUOQ',24.60), (86,'wK9NIPcy9KhsnwWqP1H',51.99), (87,'Hu9WtxpmsxKSOg7ieO',72.45), (88,'glCOvurfWglJPNgQpQbmOTV' ,43.25), (89,'YpxwYALvzrTyDDm99Z9mUOY' ,11.72), (90,'gsULDcnE9uvbEDMA46bkO',81.24), (91,'p0KtWl6qtkMBgB9G7' ,96.04), (92,'MwdmZzrtKNYRs94Eq1sQcA',36.53), (93,'VzGWVN387Lfeop2',68.87), (94,'JFef13O98Rr25752g8dBp',39.79), (95,'nnfzQCeMrpiJA6' ,76.85), (96,'ai0OCglBmaEsgtAAE' ,44.24), (97,'fJm8wGllYnoVdrZXQLYAwb',55.57), (98,'YKlrzOCzYJo6EAlOZAWAgu',70.94), (99,'LGzS09GEjLGfT8t',61.35), (100,'VqTO4b1uCpm9AP9g7Ut',81.56) | success | htapDb1 |
      | htap1 | 111111    | conn_1 | True    | insert into bmsql_stock values(1 ,1 ,80 ,0 ,0 ,0 ), (1 ,2 ,60 ,0 ,0 ,0 ), (1 ,3 ,89 ,0 ,0 ,0 ), (1 ,4 ,52 ,0 ,0 ,0 ), (1 ,5 ,100 ,0 ,0 ,0 ), (1 ,6 ,19 ,0 ,0 ,0 ), (1 ,7 ,29 ,0 ,0 ,0 ), (1 ,8 ,94 ,0 ,0 ,0 ), (1 ,9 ,81 ,0 ,0 ,0 ), (1 ,10 ,38 ,0 ,0 ,0 ), (1 ,11 ,71 ,0 ,0 ,0 ), (1 ,12 ,80 ,0 ,0 ,0 ), (1 ,13 ,78 ,0 ,0 ,0 ), (1 ,14 ,92 ,0 ,0 ,0 ), (1 ,15 ,97 ,0 ,0 ,0 ), (1 ,16 ,79 ,0 ,0 ,0 ), (1 ,17 ,79 ,0 ,0 ,0 ), (1 ,18 ,82 ,0 ,0 ,0 ), (1 ,19 ,34 ,0 ,0 ,0 ), (1 ,20 ,23 ,0 ,0 ,0 ), (1 ,21 ,15 ,0 ,0 ,0 ), (1 ,22 ,89 ,0 ,0 ,0 ), (1 ,23 ,85 ,0 ,0 ,0 ), (1 ,24 ,81 ,0 ,0 ,0 ), (1 ,25 ,98 ,0 ,0 ,0 ), (2 ,26 ,89 ,0 ,0 ,0 ), (2 ,27 ,58 ,0 ,0 ,0 ), (2 ,28 ,94 ,0 ,0 ,0 ), (2 ,29 ,14 ,0 ,0 ,0 ), (2 ,30 ,34 ,0 ,0 ,0 ), (2 ,31 ,18 ,0 ,0 ,0 ), (2 ,32 ,41 ,0 ,0 ,0 ), (2 ,33 ,82 ,0 ,0 ,0 ), (2 ,34 ,74 ,0 ,0 ,0 ), (2 ,35 ,19 ,0 ,0 ,0 ), (2 ,36 ,31 ,0 ,0 ,0 ), (2 ,37 ,41 ,0 ,0 ,0 ), (2 ,38 ,34 ,0 ,0 ,0 ), (2 ,39 ,88 ,0 ,0 ,0 ), (2 ,40 ,25 ,0 ,0 ,0 ), (2 ,41 ,52 ,0 ,0 ,0 ), (2 ,42 ,59 ,0 ,0 ,0 ), (2 ,43 ,63 ,0 ,0 ,0 ), (2 ,44 ,53 ,0 ,0 ,0 ), (2 ,45 ,44 ,0 ,0 ,0 ), (2 ,46 ,67 ,0 ,0 ,0 ), (2 ,47 ,48 ,0 ,0 ,0 ), (2 ,48 ,89 ,0 ,0 ,0 ), (2 ,49 ,32 ,0 ,0 ,0 ), (2 ,50 ,67 ,0 ,0 ,0 ), (3 ,51 ,60 ,0 ,0 ,0 ), (3 ,52 ,10 ,0 ,0 ,0 ), (3 ,53 ,95 ,0 ,0 ,0 ), (3 ,54 ,64 ,0 ,0 ,0 ), (3 ,55 ,64 ,0 ,0 ,0 ), (3 ,56 ,82 ,0 ,0 ,0 ), (3 ,57 ,20 ,0 ,0 ,0 ), (3 ,58 ,82 ,0 ,0 ,0 ), (3 ,59 ,70 ,0 ,0 ,0 ), (3 ,60 ,69 ,0 ,0 ,0 ), (3 ,61 ,28 ,0 ,0 ,0 ), (3 ,62 ,76 ,0 ,0 ,0 ), (3 ,63 ,40 ,0 ,0 ,0 ), (3 ,64 ,89 ,0 ,0 ,0 ), (3 ,65 ,56 ,0 ,0 ,0 ), (3 ,66 ,49 ,0 ,0 ,0 ), (3 ,67 ,39 ,0 ,0 ,0 ), (3 ,68 ,42 ,0 ,0 ,0 ), (3 ,69 ,88 ,0 ,0 ,0 ), (3 ,70 ,25 ,0 ,0 ,0 ), (4 ,71 ,91 ,0 ,0 ,0 ), (4 ,72 ,76 ,0 ,0 ,0 ), (4 ,73 ,71 ,0 ,0 ,0 ), (4 ,74 ,49 ,0 ,0 ,0 ), (4 ,75 ,74 ,0 ,0 ,0 ), (4 ,76 ,20 ,0 ,0 ,0 ), (4 ,77 ,52 ,0 ,0 ,0 ), (4 ,78 ,49 ,0 ,0 ,0 ), (4 ,79 ,45 ,0 ,0 ,0 ), (4 ,80 ,72 ,0 ,0 ,0 ), (4 ,81 ,60 ,0 ,0 ,0 ), (4 ,82 ,32 ,0 ,0 ,0 ), (4 ,83 ,94 ,0 ,0 ,0 ), (4 ,84 ,33 ,0 ,0 ,0 ), (4 ,85 ,98 ,0 ,0 ,0 ), (4 ,86 ,84 ,0 ,0 ,0 ), (4 ,87 ,90 ,0 ,0 ,0 ), (4 ,88 ,14 ,0 ,0 ,0 ), (4 ,89 ,84 ,0 ,0 ,0 ), (4 ,90 ,74 ,0 ,0 ,0 ), (4 ,91 ,67 ,0 ,0 ,0 ), (4 ,92 ,85 ,0 ,0 ,0 ), (4 ,93 ,60 ,0 ,0 ,0 ), (4 ,94 ,65 ,0 ,0 ,0 ), (4 ,95 ,52 ,0 ,0 ,0 ), (4 ,96 ,51 ,0 ,0 ,0 ), (4 ,97 ,71 ,0 ,0 ,0 ), (4 ,98 ,86 ,0 ,0 ,0 ), (4 ,99 ,34 ,0 ,0 ,0 ), (4 ,100 ,72 ,0 ,0 ,0)                                                    | success | htapDb1 |

    ## 2.2 复杂sql包含聚合函数
    ### sub-query
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_1"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT o_id,o_w_id FROM bmsql_oorder where o_id =(SELECT max(o_id) FROM bmsql_oorder) | success | htapDb1 |
    Then check resultset "rs_1" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1_0          | BASE SQL              | select max(o_id) as `_$MAX$_rpda_0` from  `bmsql_oorder` LIMIT 2                                                                                |
      | merge_1            | MERGE                 | apNode1_0                                                                                                                                       |
      | aggregate_1        | AGGREGATE             | merge_1                                                                                                                                         |
      | limit_1            | LIMIT                 | aggregate_1                                                                                                                                     |
      | shuffle_field_1    | SHUFFLE_FIELD         | limit_1                                                                                                                                         |
      | scalar_sub_query_1 | SCALAR_SUB_QUERY      | shuffle_field_1                                                                                                                                 |
      | dn1_0              | BASE SQL(May No Need) | scalar_sub_query_1; select `bmsql_oorder`.`o_id`,`bmsql_oorder`.`o_w_id` from  `bmsql_oorder` where `bmsql_oorder`.`o_id` = '{NEED_TO_REPLACE}' |
      | dn2_0              | BASE SQL(May No Need) | scalar_sub_query_1; select `bmsql_oorder`.`o_id`,`bmsql_oorder`.`o_w_id` from  `bmsql_oorder` where `bmsql_oorder`.`o_id` = '{NEED_TO_REPLACE}' |
      | dn3_0              | BASE SQL(May No Need) | scalar_sub_query_1; select `bmsql_oorder`.`o_id`,`bmsql_oorder`.`o_w_id` from  `bmsql_oorder` where `bmsql_oorder`.`o_id` = '{NEED_TO_REPLACE}' |
      | dn4_0              | BASE SQL(May No Need) | scalar_sub_query_1; select `bmsql_oorder`.`o_id`,`bmsql_oorder`.`o_w_id` from  `bmsql_oorder` where `bmsql_oorder`.`o_id` = '{NEED_TO_REPLACE}' |
      | merge_2            | MERGE                 | dn1_0; dn2_0; dn3_0; dn4_0                                                                                                                      |
      | shuffle_field_2    | SHUFFLE_FIELD         | merge_2                                                                                                                                         |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT o_id,o_w_id FROM bmsql_oorder where o_id =(SELECT max(o_id) FROM bmsql_oorder)      | hasStr{((22, 2),)}    | htapDb1 |

    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_2"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT i_id AS item_id, i_name AS item_name, s_w_id AS warehouse_id, s_quantity AS stock_quantity FROM bmsql_item, bmsql_stock WHERE i_id = s_i_id AND s_quantity > (   SELECT AVG(s_quantity)   FROM bmsql_stock ) | success | htapDb1 |
    Then check resultset "rs_2" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1            | BASE SQL | SELECT i_id AS item_id, i_name AS item_name, s_w_id AS warehouse_id, s_quantity AS stock_quantity FROM bmsql_item, bmsql_stock WHERE i_id = s_i_id AND s_quantity > (   SELECT AVG(s_quantity)   FROM bmsql_stock ) |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT i_id AS item_id, i_name AS item_name, s_w_id AS warehouse_id, s_quantity AS stock_quantity FROM bmsql_item, bmsql_stock WHERE i_id = s_i_id AND s_quantity > (   SELECT AVG(s_quantity)   FROM bmsql_stock )      | length{(53)}    | htapDb1 |

    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_3"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT o_id AS order_id, o_w_id AS warehouse_id, o_d_id AS district_id, o_ol_cnt AS order_line_count FROM bmsql_oorder WHERE o_w_id = 1 AND o_d_id = 2 AND o_id IN (   SELECT ol_o_id   FROM bmsql_order_line   WHERE ol_w_id = 1 AND ol_d_id = 2   GROUP BY ol_o_id   HAVING SUM(ol_amount) > (SELECT AVG(ol_amount) FROM bmsql_order_line WHERE ol_w_id = 1 AND ol_d_id = 2) ) | success | htapDb1 |
    Then check resultset "rs_3" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT o_id AS order_id, o_w_id AS warehouse_id, o_d_id AS district_id, o_ol_cnt AS order_line_count FROM bmsql_oorder WHERE o_w_id = 1 AND o_d_id = 2 AND o_id IN (   SELECT ol_o_id   FROM bmsql_order_line   WHERE ol_w_id = 1 AND ol_d_id = 2   GROUP BY ol_o_id   HAVING SUM(ol_amount) > (SELECT AVG(ol_amount) FROM bmsql_order_line WHERE ol_w_id = 1 AND ol_d_id = 2) ) |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT o_id AS order_id, o_w_id AS warehouse_id, o_d_id AS district_id, o_ol_cnt AS order_line_count FROM bmsql_oorder WHERE o_w_id = 1 AND o_d_id = 2 AND o_id IN (   SELECT ol_o_id   FROM bmsql_order_line   WHERE ol_w_id = 1 AND ol_d_id = 2   GROUP BY ol_o_id   HAVING SUM(ol_amount) > (SELECT AVG(ol_amount) FROM bmsql_order_line WHERE ol_w_id = 1 AND ol_d_id = 2) )     | hasStr{((18, 1, 2, 5),)}    | htapDb1 |

    ### left join
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_4"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 20 | success | htapDb1 |
    Then check resultset "rs_4" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 20 |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 20  | length{(3)}    | htapDb1 |

    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_5"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 1,20 | success | htapDb1 |
    Then check resultset "rs_5" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 1,20 |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 1,20  | length{(2)}    | htapDb1 |

    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_6"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id  GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 10 offset 1 | success | htapDb1 |
    Then check resultset "rs_6" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id  GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 10 offset 1 |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT c.c_w_id, c.c_d_id, c.c_id, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c LEFT JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id  GROUP BY c.c_w_id, c.c_d_id, c.c_id HAVING SUM(ol.ol_amount) >= 4000 ORDER BY c.c_id DESC LIMIT 10 offset 1  | length{(2)}    | htapDb1 |

    ### inner join
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_7"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT d.d_w_id, d.d_id, AVG(ol.ol_amount) AS average_amount FROM bmsql_district d INNER JOIN bmsql_oorder o ON d.d_w_id = o.o_w_id AND d.d_id = o.o_d_id INNER JOIN bmsql_order_line ol ON o.o_w_id = ol.ol_w_id AND o.o_d_id = ol.ol_d_id AND o.o_id = ol.ol_o_id GROUP BY d.d_w_id, d.d_id | success | htapDb1 |
    Then check resultset "rs_7" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT d.d_w_id, d.d_id, AVG(ol.ol_amount) AS average_amount FROM bmsql_district d INNER JOIN bmsql_oorder o ON d.d_w_id = o.o_w_id AND d.d_id = o.o_d_id INNER JOIN bmsql_order_line ol ON o.o_w_id = ol.ol_w_id AND o.o_d_id = ol.ol_d_id AND o.o_id = ol.ol_o_id GROUP BY d.d_w_id, d.d_id |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT d.d_w_id, d.d_id, AVG(ol.ol_amount) AS average_amount FROM bmsql_district d INNER JOIN bmsql_oorder o ON d.d_w_id = o.o_w_id AND d.d_id = o.o_d_id INNER JOIN bmsql_order_line ol ON o.o_w_id = ol.ol_w_id AND o.o_d_id = ol.ol_d_id AND o.o_id = ol.ol_o_id GROUP BY d.d_w_id, d.d_id  | length{(12)}    | htapDb1 |

    ## ck中sum函数返回值为字符串类型
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_8"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT c.c_w_id, c.c_d_id, c.c_id, concat(c.c_first,' ', c.c_last) as name, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c INNER JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id group by c.c_w_id, c.c_d_id, c.c_id,name HAVING SUM(ol.ol_amount) >= 500 order by total_amount desc LIMIT 1 | success | htapDb1 |
    Then check resultset "rs_8" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT c.c_w_id, c.c_d_id, c.c_id, concat(c.c_first,' ', c.c_last) as name, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c INNER JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id group by c.c_w_id, c.c_d_id, c.c_id,name HAVING SUM(ol.ol_amount) >= 500 order by total_amount desc LIMIT 1 |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT c.c_w_id, c.c_d_id, c.c_id, concat(c.c_first,' ', c.c_last) as name, SUM(ol.ol_amount) AS total_amount FROM bmsql_customer c INNER JOIN bmsql_order_line ol ON c.c_w_id = ol.ol_w_id AND c.c_d_id = ol.ol_d_id group by c.c_w_id, c.c_d_id, c.c_id,name HAVING SUM(ol.ol_amount) >= 500 order by total_amount desc LIMIT 1 | hasStr{((4, 4, 30, 'VeNl0mMny3PvGr59 ABLEABLEBAR', '5348'),)}    | htapDb1 |

    ### cross join
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_9"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id order by total_quantity desc limit 3 | success | htapDb1 |
    Then check resultset "rs_9" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id order by total_quantity desc limit 3 |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id order by total_quantity desc limit 3  | hasStr{((5, 1, 100), (85, 4, 98), (25, 1, 98))}    | htapDb1 |

    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_10"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id HAVING total_quantity >= 100 ORDER BY total_quantity DESC | success | htapDb1 |
    Then check resultset "rs_10" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id HAVING total_quantity >= 100 ORDER BY total_quantity DESC |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | SELECT i.i_id, w.w_id, SUM(s.s_quantity) AS total_quantity FROM bmsql_item i CROSS JOIN bmsql_warehouse w INNER JOIN bmsql_stock s ON i.i_id = s.s_i_id AND w.w_id = s.s_w_id GROUP BY i.i_id, w.w_id HAVING total_quantity >= 100 ORDER BY total_quantity DESC  | hasStr{((5, 1, 100),)}     | htapDb1 |

    ### 笛卡尔积
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_11"
      | user  | passwd    | conn   | toClose | sql                                                      | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain select count(*) from bmsql_item,bmsql_warehouse | success | htapDb1 |
    Then check resultset "rs_11" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | select count(*) from bmsql_item,bmsql_warehouse |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                               | expect                | db      |
      | htap1 | conn_0 | True    | select count(*) from bmsql_item,bmsql_warehouse   | hasStr{((400,),)}       | htapDb1 |

    ### union
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_12"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain SELECT 'Customer' AS type, COUNT(*) AS count FROM bmsql_customer UNION DISTINCT SELECT 'Order' AS type, COUNT(*) AS count FROM bmsql_oorder order by type| success | htapDb1 |
    Then check resultset "rs_12" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | apNode1       | BASE SQL | SELECT 'Customer' AS type, COUNT(*) AS count FROM bmsql_customer UNION DISTINCT SELECT 'Order' AS type, COUNT(*) AS count FROM bmsql_oorder order by type |
    #### clickhouse中的union + order by行为 与 mysql中不一致，mysql会对结果集进行排序，clickhouse不会排序
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                               | expect                | db      |
#      | htap1 | conn_0 | True    | SELECT 'Customer' AS type, COUNT(*) AS count FROM bmsql_customer UNION DISTINCT SELECT 'Order' AS type, COUNT(*) AS count FROM bmsql_oorder order by type  | hasStr{(('Customer', 30), ('Order', 22))}    | htapDb1 |
      | htap1 | conn_0 | True    | SELECT 'Customer' AS type, COUNT(*) AS count FROM bmsql_customer UNION DISTINCT SELECT 'Order' AS type, COUNT(*) AS count FROM bmsql_oorder order by type  | length{(2)}    | htapDb1 |

    ### right join --> TP
    Given execute single sql in "dble-1" in "user" mode and save resultset in "rs_13"
      | user  | passwd    | conn   | toClose | sql                                          | expect  | db      |
      | htap1 | 111111    | conn_1 | true    |  explain select bc.c_last,bc.c_first,count(bo.o_id) as ordered_count from bmsql_oorder bo right join bmsql_customer bc on bo.o_c_id=bc.c_id where bc.c_d_id =1 and bc.c_w_id=4 and DATE_SUB(CURDATE(), INTERVAL 30 DAY) <= date(bo.o_entry_d) group by bc.c_id | success | htapDb1 |
    Then check resultset "rs_13" has lines with following column values
      | SHARDING_NODE-0    | TYPE-1                | SQL/REF-2                              |
      | dn1_0             | BASE SQL        | select `bc`.`c_last`,`bc`.`c_first`,`bc`.`c_id` from  `bmsql_customer` `bc` where  ( `bc`.`c_w_id` = 4 AND `bc`.`c_d_id` = 1) ORDER BY `bc`.`c_id` ASC                  |
      | merge_1           | MERGE           | dn1_0                                                                                                                                                                   |
      | shuffle_field_1   | SHUFFLE_FIELD   | merge_1                                                                                                                                                                 |
      | dn1_1             | BASE SQL        | select `bo`.`o_id`,`bo`.`o_c_id`,`bo`.`o_entry_d` from  `bmsql_oorder` `bo` where date_sub(CURDATE(), INTERVAL 30 DAY) <= DATE(bo.o_entry_d) ORDER BY `bo`.`o_c_id` ASC |
      | dn2_0             | BASE SQL        | select `bo`.`o_id`,`bo`.`o_c_id`,`bo`.`o_entry_d` from  `bmsql_oorder` `bo` where date_sub(CURDATE(), INTERVAL 30 DAY) <= DATE(bo.o_entry_d) ORDER BY `bo`.`o_c_id` ASC |
      | dn3_0             | BASE SQL        | select `bo`.`o_id`,`bo`.`o_c_id`,`bo`.`o_entry_d` from  `bmsql_oorder` `bo` where date_sub(CURDATE(), INTERVAL 30 DAY) <= DATE(bo.o_entry_d) ORDER BY `bo`.`o_c_id` ASC |
      | dn4_0             | BASE SQL        | select `bo`.`o_id`,`bo`.`o_c_id`,`bo`.`o_entry_d` from  `bmsql_oorder` `bo` where date_sub(CURDATE(), INTERVAL 30 DAY) <= DATE(bo.o_entry_d) ORDER BY `bo`.`o_c_id` ASC |
      | merge_and_order_1 | MERGE_AND_ORDER | dn1_1; dn2_0; dn3_0; dn4_0                                                                                                                                              |
      | shuffle_field_3   | SHUFFLE_FIELD   | merge_and_order_1                                                                                                                                                       |
      | join_1            | JOIN            | shuffle_field_1; shuffle_field_3                                                                                                                                        |
      | where_filter_1    | WHERE_FILTER    | join_1                                                                                                                                                                  |
      | aggregate_1       | AGGREGATE       | where_filter_1                                                                                                                                                          |
      | shuffle_field_2   | SHUFFLE_FIELD   | aggregate_1                                                                                                                                                             |
    Then execute sql in "dble-1" in "user" mode
      | user  | conn   | toClose | sql                                                                                        | expect                | db      |
      | htap1 | conn_0 | True    | select bc.c_last,bc.c_first,count(bo.o_id) as ordered_count from bmsql_oorder bo right join bmsql_customer bc on bo.o_c_id=bc.c_id where bc.c_d_id =1 and bc.c_w_id=4 and DATE_SUB('2023-08-31', INTERVAL 30 DAY) <= date(bo.o_entry_d) group by bc.c_id | hasStr{(('ABLEABLEATION', 'zIgqEQLes4qR', 1),)}    | htapDb1 |
