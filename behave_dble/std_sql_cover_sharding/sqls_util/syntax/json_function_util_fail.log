===file:sqls_util/syntax/json_function_util.sql, id:12, sql:[SELECT id, JSON_EXTRACT(data, "$.Tel","$.name","$.address") FROM test1 order by data;]===
dble:[((3, '["13012345678", "Tim", ""]'), (1, '["13222323244", "2022-09-20 13:00:00", "Beijing"]'), (4, '[13312389765, "Lucy", "Shenzhen"]'), (2, '[true, "Mike", "Guangzhou"]'))]
mysql:[((3, '["13012345678", "Tim", ""]'), (1, '["13222323244", "2022-09-20 13:00:00", "Beijing"]'), (2, '[true, "Mike", "Guangzhou"]'), (4, '[13312389765, "Lucy", "Shenzhen"]'))]
===file:sqls_util/syntax/json_function_util.sql, id:24, sql:[SELECT id, data->"$.Tel",data->"$.name",data->"$.address" FROM test1 order by data;]===
dble:[((3, '"13012345678"', '"Tim"', '""'), (1, '"13222323244"', '"2022-09-20 13:00:00"', '"Beijing"'), (4, '13312389765', '"Lucy"', '"Shenzhen"'), (2, 'true', '"Mike"', '"Guangzhou"'))]
mysql:[((3, '"13012345678"', '"Tim"', '""'), (1, '"13222323244"', '"2022-09-20 13:00:00"', '"Beijing"'), (2, 'true', '"Mike"', '"Guangzhou"'), (4, '13312389765', '"Lucy"', '"Shenzhen"'))]
===file:sqls_util/syntax/json_function_util.sql, id:32, sql:[SELECT MIN(data)->"$[0]" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->"$[0]" FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:33, sql:[SELECT MIN(cast(data as char))->"$[0]" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->"$[0]" FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:43, sql:[SELECT JSON_UNQUOTE(MIN(data)->"$[0]") FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->"$[0]") FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:45, sql:[SELECT JSON_UNQUOTE(MIN(cast(data as char))->"$[0]") FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->"$[0]") FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:55, sql:[SELECT MIN(data)->>"$[0]" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->>"$[0]" FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:56, sql:[SELECT MIN(cast(data as char))->>"$[0]" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->>"$[0]" FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:68, sql:[SELECT JSON_EXTRACT(JSON_EXTRACT(data,'$.data'),'$.name'),JSON_EXTRACT(JSON_EXTRACT(data,'$.data'),'$.age') FROM test1 WHERE JSON_EXTRACT(JSON_EXTRACT(data,'$.data'),'$.age')>18 ORDER BY JSON_EXTRACT(JSON_EXTRACT(data,'$.data'),'$.age') DESC;]===
dble:[(('"Lily"', '30'), ('"Tim"', '20'), ('"Lucy"', '"27"'), ('"Kate"', '"16"'))]
mysql:[(('"Lucy"', '"27"'), ('"Kate"', '"16"'), ('"Lily"', '30'), ('"Tim"', '20'))]
===file:sqls_util/syntax/json_function_util.sql, id:78, sql:[SELECT JSON_EXTRACT(data,'$.data.name'),data->'$.data.age' FROM test1 WHERE data->'$.data.age'>18 ORDER BY data->'$.data.age' DESC;]===
dble:[(('"Lily"', '30'), ('"Tim"', '20'), ('"Lucy"', '"27"'), ('"Kate"', '"16"'))]
mysql:[(('"Lucy"', '"27"'), ('"Kate"', '"16"'), ('"Lily"', '30'), ('"Tim"', '20'))]
===file:sqls_util/syntax/json_function_util.sql, id:111, sql:[SELECT JSON_EXTRACT(data, '$**.b') FROM test1 WHERE JSON_EXTRACT(data, '$**.b') is not null ORDER BY JSON_EXTRACT(data, '$**.b');]===
dble:[(('[1, 2]',), ('[2]',), ('[2]',), ('[3, 1, 2, 5]',))]
mysql:[(('[2]',), ('[2]',), ('[1, 2]',), ('[3, 1, 2, 5]',))]
===file:sqls_util/syntax/json_function_util.sql, id:119, sql:[SELECT data->'$**.b' FROM test1 WHERE data->'$**.b' is not null ORDER BY data->'$**.b';]===
dble:[(('[1, 2]',), ('[2]',), ('[2]',), ('[3, 1, 2, 5]',))]
mysql:[(('[2]',), ('[2]',), ('[1, 2]',), ('[3, 1, 2, 5]',))]
===file:sqls_util/syntax/json_function_util.sql, id:158, sql:[SELECT json_extract(COUNT(*),"$.t") FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(3146, 'Invalid data type for JSON data in argument 1 to function json_extract; a JSON string or JSON type is required.')
===file:sqls_util/syntax/json_function_util.sql, id:159, sql:[SELECT COUNT(*)->>"$.t" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->>"$.t" FROM test1\' at line 1')
===file:sqls_util/syntax/json_function_util.sql, id:161, sql:[SELECT MIN(f1)->>"$[1]" FROM test1;]===
dble:[((None,),)]
mysql:[None]
mysql err:(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'->>"$[1]" FROM test1\' at line 1')