#!default_db:schema1
##deadline DATE and TIME
##case1:Type Conversion in Expression Evaluation
SELECT 1+'1'
SELECT CONCAT(2,' test')
SELECT 38.8, CAST(38.8 AS CHAR)
SELECT 38.8, CONCAT(38.8)
SELECT 1 > '6x'
SELECT 7 > '6x'
SELECT '18015376320243458' = 18015376320243458
SELECT '18015376320243459' = 18015376320243459
SELECT '18015376320243459'+0.0
SELECT CAST('18015376320243459' AS UNSIGNED) = 18015376320243459
##case2:perators
##Operator Precedence
select BINARY 'a' = 'A'
select ! (1+1)
select -1
select ~1
SELECT 1 ^ 1
select 3*4
SELECT 3/5
SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2
SELECT 7%2, 7 MOD 2
SELECT 3-5
SELECT 3+5
SELECT 1 << 2
SELECT 4 >> 2
SELECT 5 & ~1
SELECT 2 | 1
SELECT 'a' = 'a ', 'a' LIKE 'a '
SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL
select 1<2
SELECT 1 <= 1
SELECT 2 > 2
SELECT 2 >= 2
SELECT '.01' <> '0.01'
SELECT .01 <> '0.01'
SELECT .01 != '0.01'
SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN
SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN
SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL
SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL
SELECT 'David_' LIKE 'David|_' ESCAPE '|'
SELECT 10 NOT LIKE '1%'
SELECT 'Monty!' REGEXP '.*'
SELECT 'a' REGEXP 'A', 'a' REGEXP BINARY 'A'
SELECT 'a' REGEXP '^[a-d]'
SELECT 'A' NOT REGEXP '[B-Z]'
SELECT CASE 1 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' END
SELECT CASE WHEN 1>0 THEN 'true' ELSE 'false' END
SELECT NOT 10
SELECT 2 BETWEEN 1 AND 3, 2 BETWEEN 3 and 1
SELECT 2 NOT BETWEEN 1 AND 3
SELECT 1 AND 0
SELECT 1 && 0
select 1 xor 2
SELECT 1 OR 1
SELECT 1 || 0
#
SELECT @var1 := 1, @var2
SELECT @var1, @var2 := @var1/*allow_diff*/
#
#Comparision Functions and Operators
SELECT 2 BETWEEN 1 AND 3, 4 BETWEEN 1 AND 3
SELECT GREATEST(2,0)
SELECT COALESCE(NULL,1)
SELECT 1 = 0
SELECT '0' = 0
SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL
SELECT 2 > 2
SELECT 2 >= 2
SELECT GREATEST(2,0)
SELECT GREATEST('B','A','C')
SELECT 2 IN (0,3,5,7)
#SELECT (3,4) IN ((1,2), (3,4))
SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200)
SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN
SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN
SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL
SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL
SELECT ISNULL(1+1)
SELECT ISNULL(1/0)
SELECT LEAST(2,0)
SELECT LEAST(34.0,3.0,5.0,767.0)
SELECT LEAST('B','A','C')
SELECT 2 < 2
SELECT 0.1 <= 2
SELECT 'Ã¤' LIKE 'ae' COLLATE latin1_german2_ci
SELECT 'a' = 'a ', 'a' LIKE 'a '
SELECT 'David!' LIKE 'David_'
SELECT 2 NOT BETWEEN 1 AND 3, 4 not BETWEEN 1 AND 3
SELECT '.01' <> '0.01'
SELECT .01 <> '0.01'
SELECT 'zapp' <> 'zappp'
SELECT 'zapp' != 'zappp'
SELECT 2 NOT IN (0,3,5,7)
SELECT 'David!' NOT LIKE 'David_'
SELECT STRCMP('text', 'text2')
SELECT STRCMP('text', 'text')
#Logical Operators
SELECT 1 AND 1
SELECT 1 AND 0
SELECT 1 AND NULL
SELECT 0 AND NULL
SELECT NULL AND 0
SELECT NULL && 0
SELECT NOT 10
SELECT NOT 0
SELECT NOT NULL
SELECT ! (1+1)
SELECT ! 1+1
SELECT 1 OR 1
SELECT 1 OR 0
SELECT 1 || 0
SELECT 0 OR NULL
SELECT 1 XOR 1 XOR 1
SELECT 1 XOR NULL
#Assignment Operators
SELECT @var1 := 1, @var2/*allow_diff*/
SELECT @var1, @var2 := @var1/*allow_diff*/
SELECT @var1, @var2/*allow_diff*/
#
drop table if exists sharding_4_t1
CREATE TABLE sharding_4_t1(id VARBINARY(32), vbin2 VARBINARY(32))
INSERT INTO sharding_4_t1 VALUES (3,1), (3,2), (3,3)
SELECT HEX(id & vbin2) AS op1,HEX(id | vbin2) AS op2 FROM sharding_4_t1
#
SELECT 'pi' RLIKE 'pi|apa'
#SELECT 'Hello' SOUNDS LIKE 'Hello'
SELECT 3*5
SELECT 1 XOR NULL
##case3::Control Flow Functions
SELECT CASE BINARY 'B' WHEN 'a' THEN 1 WHEN 'b' THEN 2 END
SELECT IF(1>2,2,3)
SELECT IF(STRCMP('test','test1'),'no','yes')
SELECT IFNULL(1,0)
SELECT IFNULL(1/0,10)
SELECT IFNULL(1/0,'yes')
SELECT NULLIF(1,1)
##case4::String Functions
SELECT ASCII('2')
SELECT ASCII('dx')
SELECT BIN(12)
SELECT BIT_LENGTH('text')
SELECT CHAR(77,121,83,81,'76')
SELECT HEX(CHAR(1,0)), HEX(CHAR(256))
SELECT HEX(CHAR(1,0,0)), HEX(CHAR(256*256))
SELECT CHARSET(CHAR(X'65')), CHARSET(CHAR(X'65' USING utf8))
select CHAR_LENGTH("abc")
select CHARACTER_LENGTH("abc")
SELECT 'My' 'S' 'QL'
SELECT CONCAT('My', 'S', 'QL')
SELECT CONCAT_WS(',','First name','Second name','Last Name')
SELECT ELT(1, 'ej', 'Heja', 'hej', 'foo')
SELECT EXPORT_SET(6,'1','0',',',10)
SELECT FIELD('ej', 'Hej', 'ej', 'Heja', 'hej', 'foo')
SELECT FIND_IN_SET('b','a,b,c,d')
SELECT FORMAT(12332.123456, 4)
SELECT TO_BASE64('abc'), FROM_BASE64(TO_BASE64('abc'))
SELECT HEX(255), CONV(HEX(255),16,10)
SELECT INSERT('Quadratic', 3, 4, 'What')
SELECT INSTR('foobarbar', 'bar')
SELECT LCASE('QUADRATICALLY')
SELECT LEFT('foobarbar', 5)
SELECT LENGTH('text')
#update t set blob_col=LOAD_FILE('/tmp/picture') where id=1
##case: extremely big param
#SELECT REPEAT("A", 16777214)
#SELECT REPEAT("A", 16777215)
#SELECT REPEAT("A", 16777216)
#SELECT REPEAT("A", 16778000)
#SELECT @aa = repeat("a", 5592404)
#SELECT @bb = concat(@aa, @aa, @aa)
#SELECT @cc = concat(@bb, "aa")
#SELECT @dd = concat(@bb, "aaa")
#SELECT @ee = concat(@bb, "aaaa")
#SELECT @dd = concat(@bb, repeat("a", 1000))
SELECT LOCATE('bar', 'foobarbar')
SELECT LOCATE('bar', 'foobarbar', 5)
SELECT LOWER('QUADRATICALLY')
SELECT LPAD('hi',4,'??')
SELECT LTRIM('  barbar')
SELECT MAKE_SET(1 | 4,'hello','nice','world')
SELECT MID('Quadratically',5,6)
SELECT OCT(12)
SELECT OCTET_LENGTH('text')
SELECT ORD('2')
SELECT POSITION('bar' IN 'foobarbar')
SELECT QUOTE('Don\'t!')
SELECT REPEAT('MySQL', 3)
SELECT REPLACE('www.mysql.com', 'w', 'Ww')
SELECT REVERSE('abc')
SELECT RIGHT('foobarbar', 4)
SELECT RPAD('hi',5,'?')
SELECT RTRIM('barbar   ')
SELECT SOUNDEX('Hello')
#SELECT 'HELLO' SOUNDS like 'hello'
SELECT SPACE(6)
SELECT STRCMP('text', 'text2')
SELECT SUBSTR('Quadratically',5)
SELECT SUBSTR('Quadratically',5,6)
SELECT SUBSTRING('Quadratically',5)
SELECT SUBSTRING('foobarbar' FROM 4)
SELECT SUBSTRING('Quadratically',5,6)
SELECT SUBSTRING('Sakila' FROM -4 FOR 2)
SELECT SUBSTRING_INDEX('www.mysql.com', '.', 2)
SELECT TO_BASE64('abc')
SELECT TRIM('  bar   ')
SELECT TRIM(LEADING 'x' FROM 'xxxbarxxx')
SELECT TRIM(BOTH 'x' FROM 'xxxbarxxx')
SELECT TRIM(TRAILING 'xyz' FROM 'barxxyz')
SELECT UCASE('Hej')
SELECT UNHEX('4D7953514C')
SELECT UPPER('Hej')
#SET @s = CAST('AB' AS BINARY)
SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s))
#
#SELECT HEX(WEIGHT_STRING(cast('ab' AS CHAR(4)))
#SELECT HEX(WEIGHT_STRING(cast('ab' AS CHAR(4)))
#SELECT HEX(WEIGHT_STRING(0x007fff LEVEL 1))
#SELECT HEX(WEIGHT_STRING(0x007fff LEVEL 1 DESC))
#SELECT HEX(WEIGHT_STRING(0x007fff LEVEL 1 REVERSE))
#SELECT HEX(WEIGHT_STRING(0x007fff LEVEL 1 DESC REVERSE))
SELECT CHARSET(BINARY 'a'), COLLATION(BINARY 'a')
SELECT USER(), CHARSET(USER()), COLLATION(USER())
SELECT CHARSET(COMPRESS('abc')), COLLATION(COMPRESS('abc'))
##case5:Numeric Functions and Operators
#Arithmetic Operators
SELECT 3+5
SELECT 3-5
SELECT - 2
SELECT 3*5
SELECT 18014398509481984*18014398509481984.0
SELECT 3/5
SELECT 102/(1-1)
SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2
#Mathematical Functions
select ABS(-32)
SELECT ACOS(1)
SELECT ACOS(1.0001)
SELECT ASIN(0.2)
SELECT ATAN(-2)
SELECT ATAN(-2,2)
SELECT ATAN2(PI(),0)
SELECT CEIL(-1.23)
SELECT CEILING(1.23)
SELECT CONV('a',16,2)
SELECT CONV('6E',18,8)
SELECT CONV(-17,10,-18)
SELECT CONV(10+'10'+'10'+X'0a',10,10)
SELECT COS(PI())
SELECT COT(12)
SELECT CRC32('MySQL')
SELECT DEGREES(PI())
SELECT DEGREES(PI() / 2)
SELECT EXP(2)
SELECT FLOOR(1.23), FLOOR(-1.23)
SELECT FORMAT(12332.123456, 4)
SELECT FORMAT(12332.2,2,'de_DE')
SELECT HEX(255), CONV(HEX(255),16,10)
SELECT X'616263', HEX('abc')
SELECT LN(2)
SELECT LN(-2)
SELECT LOG(2)
SELECT LOG(2,65536)
SELECT LOG2(65536)
SELECT LOG10(100)
SELECT MOD(234, 10)
SELECT 253 % 7
SELECT PI()
SELECT POW(2,-2)
SELECT POWER(2,2)
SELECT RADIANS(90)
#
SELECT ROUND(-1.23)
SELECT ROUND(1.298, 0)
SELECT ROUND(150.000,2), ROUND(150,2)
SELECT ROUND(2.5), ROUND(25E-1)
SELECT SIGN(-32)
SELECT ROUND(SIN(PI()))
SELECT SQRT(20)
SELECT TAN(PI())
SELECT TRUNCATE(122,-2)
SELECT TRUNCATE(1.999,1)
##case6::Date and Time Functions
SELECT DATE_ADD('2008-01-02', INTERVAL 31 DAY)
SELECT ADDDATE('2008-01-02', INTERVAL 31 DAY)
SELECT ADDDATE('2008-01-02', 31)
SELECT ADDTIME('2007-12-31 23:59:59.999999', '1 1:1:1.000002')
SELECT ADDTIME('01:00:00.999999', '02:00:00.999998')
SELECT CONVERT_TZ('2004-01-01 12:00:00','GMT','MET')
SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','+10:00')
SELECT CURDATE()
SELECT CURDATE() + 0
SELECT CURRENT_DATE
SELECT CURRENT_DATE()
SELECT CURRENT_TIME /*allow_diff*/
SELECT CURRENT_TIME() /*allow_diff*/
SELECT CURTIME() /*allow_diff*/
SELECT CURRENT_TIMESTAMP /*allow_diff*/
SELECT CURRENT_TIMESTAMP() /*allow_diff*/
SELECT NOW() /*allow_diff*/
SELECT LOCALTIME /*allow_diff*/
SELECT LOCALTIME() /*allow_diff*/
SELECT LOCALTIMESTAMP /*allow_diff*/
SELECT LOCALTIMESTAMP() /*allow_diff*/
SELECT DATE('2003-12-31 01:02:03')
SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30')
SELECT DATEDIFF('2010-11-30 23:59:59','2010-12-31')
SELECT '2008-12-31 23:59:59' + INTERVAL 1 SECOND
SELECT INTERVAL 1 DAY + '2008-12-31'
SELECT '2005-01-01' - INTERVAL 1 SECOND
SELECT DATE_ADD('2000-12-31 23:59:59',INTERVAL 1 SECOND)
SELECT DATE_ADD('2010-12-31 23:59:59',INTERVAL 1 DAY)
SELECT DATE_ADD('2100-12-31 23:59:59',INTERVAL '1:1' MINUTE_SECOND)
SELECT DATE_SUB('2005-01-01 00:00:00', INTERVAL '1 1:1:1' DAY_SECOND)
SELECT DATE_ADD('1900-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR)
SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY)
SELECT DATE_ADD('1992-12-31 23:59:59.000002',INTERVAL '1.999999' SECOND_MICROSECOND)
SELECT DATE_ADD('2009-01-01', INTERVAL 6/4 HOUR_MINUTE)
SELECT DATE_ADD('1970-01-01 12:00:00',INTERVAL CAST(6/4 AS DECIMAL(3,1)) HOUR_MINUTE)
SELECT DATE_ADD('2013-01-01', INTERVAL 1 DAY)
SELECT DATE_ADD('2013-01-01', INTERVAL 1 HOUR)
SELECT DATE_ADD('2009-01-30', INTERVAL 1 MONTH)
SELECT DATE_ADD('2006-07-00', INTERVAL 1 DAY)
SELECT '2005-03-32' + INTERVAL 1 MONTH
SELECT DATE_FORMAT('2009-10-04 22:23:00', '%W %M %Y')
SELECT DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s')
SELECT DATE_FORMAT('1900-10-04 22:23:00','%D %y %a %d %m %b %j')
SELECT DATE_FORMAT('1997-10-04 22:23:00','%H %k %I %r %T %S %w')
SELECT DATE_FORMAT('1999-01-01', '%X %V')
SELECT DATE_FORMAT('2006-06-00', '%d')
SELECT DAY('2007-02-03')
SELECT DAYOFMONTH('2007-02-03')
SELECT DAYNAME('2007-02-03')
SELECT DAYOFWEEK('2007-02-03')
SELECT DAYOFYEAR('2007-02-03')
SELECT EXTRACT(YEAR FROM '2009-07-02')
SELECT EXTRACT(YEAR_MONTH FROM '2009-07-02 01:02:03')
SELECT EXTRACT(DAY_MINUTE FROM '2009-07-02 01:02:03')
SELECT EXTRACT(MICROSECOND FROM '2003-01-02 10:30:00.000123')
SELECT FROM_DAYS(730669)
SELECT FROM_UNIXTIME(1447430881)
SELECT FROM_UNIXTIME(1447430881) + 0
SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(),'%Y %D %M %h:%i:%s %x')/*allow_10%_diff*/
SELECT DATE_FORMAT('2003-10-03',GET_FORMAT(DATE,'EUR'))
SELECT STR_TO_DATE('10.31.2003',GET_FORMAT(DATE,'USA'))
SELECT HOUR('10:05:03')
SELECT HOUR('272:59:59')
SELECT LAST_DAY('2003-02-05')
SELECT MAKEDATE(2011,31), MAKEDATE(2011,32)
SELECT MAKETIME(12,15,30)
SELECT MICROSECOND('12:00:00.123456')
SELECT MINUTE('2008-02-03 10:05:03')
SELECT MONTH('2008-02-03')
SELECT MONTHNAME('2008-02-03')
SELECT NOW(), SLEEP(2), NOW() /*allow_diff*/
SELECT SYSDATE(), SLEEP(2), SYSDATE() /*allow_diff*/
SELECT PERIOD_ADD(200801,2)
SELECT PERIOD_DIFF(200802,200703)
SELECT QUARTER('2008-04-01')
SELECT SECOND('10:05:03')
SELECT SEC_TO_TIME(2378)
SELECT STR_TO_DATE('01,5,2013','%d,%m,%Y')
SELECT STR_TO_DATE('May 1, 2013','%M %d,%Y')
SELECT STR_TO_DATE('a09:30:17','a%h:%i:%s')
SELECT SUBDATE('2008-01-02', INTERVAL 31 DAY)
SELECT SUBDATE('2008-01-02 12:00:00', 31)
SELECT SUBTIME('2007-12-31 23:59:59.999999','1 1:1:1.000002')
SELECT TIME('2003-12-31 01:02:03')
SELECT TIMEDIFF('2000:01:01 00:00:00','2000:01:01 00:00:00.000001')
SELECT TIMESTAMP('2003-12-31')
SELECT TIMESTAMP('2003-12-31 12:00:00','12:00:00')
SELECT TIMESTAMPADD(MINUTE,1,'2003-01-02')
SELECT TIMESTAMPDIFF(MONTH,'2003-02-01','2003-05-01')
SELECT TIME_FORMAT('100:00:00', '%H %k %h %I %l')
SELECT TIME_TO_SEC('22:23:00')
SELECT TO_DAYS(950501)
SELECT TO_SECONDS(950501)
SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19')
SELECT UNIX_TIMESTAMP()/*allow_10%_diff*/
SELECT UTC_DATE(), UTC_DATE() + 0
SELECT UTC_TIME(), UTC_TIME() + 0 /*allow_diff*/
SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0 /*allow_diff*/
SELECT WEEK('2008-02-20')
SELECT WEEK('2008-12-31',1)
SELECT WEEKDAY('2008-02-03 22:23:00')
SELECT WEEKOFYEAR('2008-02-20')
SELECT YEAR('1987-01-01')
SELECT YEARWEEK('1987-01-01')
#
#clear tables
#
drop table if exists sharding_4_t1