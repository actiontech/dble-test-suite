===file:sqls_util/syntax/reserved_words.sql, id:2, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:3, sql:[create table test1 (id int,`INTO` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:4, sql:[insert into test1 (id,`INTO`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:5, sql:[select id,`INTO` from test1 order by `INTO` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:6, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:7, sql:[create table test1 (id int,`IS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:8, sql:[insert into test1 (id,`IS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:9, sql:[select id,`IS` from test1 order by `IS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:10, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:11, sql:[create table test1 (id int,`KEY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:12, sql:[insert into test1 (id,`KEY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:13, sql:[select id,`KEY` from test1 order by `KEY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:14, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:15, sql:[create table test1 (id int,`LEADING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:16, sql:[insert into test1 (id,`LEADING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:17, sql:[select id,`LEADING` from test1 order by `LEADING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:18, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:19, sql:[create table test1 (id int,`LIKE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:20, sql:[insert into test1 (id,`LIKE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:21, sql:[select id,`LIKE` from test1 order by `LIKE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:22, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:23, sql:[create table test1 (id int,`LINES` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:24, sql:[insert into test1 (id,`LINES`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:25, sql:[select id,`LINES` from test1 order by `LINES` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:26, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:27, sql:[create table test1 (id int,`LOCALTIMESTAMP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:28, sql:[insert into test1 (id,`LOCALTIMESTAMP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:29, sql:[select id,`LOCALTIMESTAMP` from test1 order by `LOCALTIMESTAMP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:30, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:31, sql:[create table test1 (id int,`LONGBLOB` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:32, sql:[insert into test1 (id,`LONGBLOB`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:33, sql:[select id,`LONGBLOB` from test1 order by `LONGBLOB` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:34, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:35, sql:[create table test1 (id int,`LOW_PRIORITY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:36, sql:[insert into test1 (id,`LOW_PRIORITY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:37, sql:[select id,`LOW_PRIORITY` from test1 order by `LOW_PRIORITY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:38, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:39, sql:[create table test1 (id int,`MATCH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:40, sql:[insert into test1 (id,`MATCH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:41, sql:[select id,`MATCH` from test1 order by `MATCH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:42, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:43, sql:[create table test1 (id int,`MEDIUMINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:44, sql:[insert into test1 (id,`MEDIUMINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:45, sql:[select id,`MEDIUMINT` from test1 order by `MEDIUMINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:46, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:47, sql:[create table test1 (id int,`MINUTE_MICROSECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:48, sql:[insert into test1 (id,`MINUTE_MICROSECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:49, sql:[select id,`MINUTE_MICROSECOND` from test1 order by `MINUTE_MICROSECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:50, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:51, sql:[create table test1 (id int,`MODIFIES` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:52, sql:[insert into test1 (id,`MODIFIES`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:53, sql:[select id,`MODIFIES` from test1 order by `MODIFIES` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:54, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:55, sql:[create table test1 (id int,`NO_WRITE_TO_BINLOG` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:56, sql:[insert into test1 (id,`NO_WRITE_TO_BINLOG`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:57, sql:[select id,`NO_WRITE_TO_BINLOG` from test1 order by `NO_WRITE_TO_BINLOG` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:58, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:59, sql:[create table test1 (id int,`ON` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:60, sql:[insert into test1 (id,`ON`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:61, sql:[select id,`ON` from test1 order by `ON` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:62, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:63, sql:[create table test1 (id int,`OPTION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:64, sql:[insert into test1 (id,`OPTION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:65, sql:[select id,`OPTION` from test1 order by `OPTION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:66, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:67, sql:[create table test1 (id int,`ORDER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:68, sql:[insert into test1 (id,`ORDER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:69, sql:[select id,`ORDER` from test1 order by `ORDER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:70, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:71, sql:[create table test1 (id int,`OUTFILE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:72, sql:[insert into test1 (id,`OUTFILE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:74, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:75, sql:[create table test1 (id int,`PRIMARY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:76, sql:[insert into test1 (id,`PRIMARY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:77, sql:[select id,`PRIMARY` from test1 order by `PRIMARY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:78, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:79, sql:[create table test1 (id int,`RANGE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:80, sql:[insert into test1 (id,`RANGE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:81, sql:[select id,`RANGE` from test1 order by `RANGE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:82, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:83, sql:[create table test1 (id int,`READ_WRITE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:84, sql:[insert into test1 (id,`READ_WRITE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:85, sql:[select id,`READ_WRITE` from test1 order by `READ_WRITE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:86, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:87, sql:[create table test1 (id int,`REGEXP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:88, sql:[insert into test1 (id,`REGEXP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:89, sql:[select id,`REGEXP` from test1 order by `REGEXP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:90, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:91, sql:[create table test1 (id int,`REPEAT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:92, sql:[insert into test1 (id,`REPEAT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:93, sql:[select id,`REPEAT` from test1 order by `REPEAT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:94, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:95, sql:[create table test1 (id int,`RESIGNAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:96, sql:[insert into test1 (id,`RESIGNAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:97, sql:[select id,`RESIGNAL` from test1 order by `RESIGNAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:98, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:99, sql:[create table test1 (id int,`REVOKE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:100, sql:[insert into test1 (id,`REVOKE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:101, sql:[select id,`REVOKE` from test1 order by `REVOKE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:102, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:103, sql:[create table test1 (id int,`SCHEMA` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:104, sql:[insert into test1 (id,`SCHEMA`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:105, sql:[select id,`SCHEMA` from test1 order by `SCHEMA` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:106, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:107, sql:[create table test1 (id int,`SELECT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:108, sql:[insert into test1 (id,`SELECT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:109, sql:[select id,`SELECT` from test1 order by `SELECT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:110, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:111, sql:[create table test1 (id int,`SET` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:112, sql:[insert into test1 (id,`SET`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:113, sql:[select id,`SET` from test1 order by `SET` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:114, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:115, sql:[create table test1 (id int,`SMALLINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:116, sql:[insert into test1 (id,`SMALLINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:117, sql:[select id,`SMALLINT` from test1 order by `SMALLINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:118, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:119, sql:[create table test1 (id int,`SQL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:120, sql:[insert into test1 (id,`SQL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:121, sql:[select id,`SQL` from test1 order by `SQL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:122, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:123, sql:[create table test1 (id int,`SQLWARNING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:124, sql:[insert into test1 (id,`SQLWARNING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:125, sql:[select id,`SQLWARNING` from test1 order by `SQLWARNING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:126, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:127, sql:[create table test1 (id int,`SQL_SMALL_RESULT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:128, sql:[insert into test1 (id,`SQL_SMALL_RESULT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:129, sql:[select id,`SQL_SMALL_RESULT` from test1 order by `SQL_SMALL_RESULT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:130, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:131, sql:[create table test1 (id int,`STRAIGHT_JOIN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:132, sql:[insert into test1 (id,`STRAIGHT_JOIN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:133, sql:[select id,`STRAIGHT_JOIN` from test1 order by `STRAIGHT_JOIN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:134, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:135, sql:[create table test1 (id int,`THEN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:136, sql:[insert into test1 (id,`THEN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:137, sql:[select id,`THEN` from test1 order by `THEN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:138, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:139, sql:[create table test1 (id int,`TINYTEXT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:140, sql:[insert into test1 (id,`TINYTEXT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:141, sql:[select id,`TINYTEXT` from test1 order by `TINYTEXT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:142, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:143, sql:[create table test1 (id int,`TRIGGER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:144, sql:[insert into test1 (id,`TRIGGER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:145, sql:[select id,`TRIGGER` from test1 order by `TRIGGER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:146, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:147, sql:[create table test1 (id int,`UNION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:148, sql:[insert into test1 (id,`UNION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:149, sql:[select id,`UNION` from test1 order by `UNION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:150, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:151, sql:[create table test1 (id int,`UNSIGNED` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:152, sql:[insert into test1 (id,`UNSIGNED`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:153, sql:[select id,`UNSIGNED` from test1 order by `UNSIGNED` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:154, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:155, sql:[create table test1 (id int,`USE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:156, sql:[insert into test1 (id,`USE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:157, sql:[select id,`USE` from test1 order by `USE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:158, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:159, sql:[create table test1 (id int,`UTC_TIME` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:160, sql:[insert into test1 (id,`UTC_TIME`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:161, sql:[select id,`UTC_TIME` from test1 order by `UTC_TIME` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:162, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:163, sql:[create table test1 (id int,`VARBINARY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:164, sql:[insert into test1 (id,`VARBINARY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:165, sql:[select id,`VARBINARY` from test1 order by `VARBINARY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:166, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:167, sql:[create table test1 (id int,`VARYING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:168, sql:[insert into test1 (id,`VARYING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:169, sql:[select id,`VARYING` from test1 order by `VARYING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:170, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:171, sql:[create table test1 (id int,`WHILE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:172, sql:[insert into test1 (id,`WHILE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:173, sql:[select id,`WHILE` from test1 order by `WHILE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:174, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:175, sql:[create table test1 (id int,`XOR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:176, sql:[insert into test1 (id,`XOR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:177, sql:[select id,`XOR` from test1 order by `XOR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:178, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:179, sql:[create table test1 (id int,`NONBLOCKING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:180, sql:[insert into test1 (id,`NONBLOCKING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:181, sql:[select id,`NONBLOCKING` from test1 order by `NONBLOCKING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:182, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:183, sql:[create table test1 (id int,`ALL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:184, sql:[insert into test1 (id,`ALL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:185, sql:[select id,`ALL` from test1 order by `ALL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:186, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:187, sql:[create table test1 (id int,`AND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:188, sql:[insert into test1 (id,`AND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:189, sql:[select id,`AND` from test1 order by `AND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:190, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:191, sql:[create table test1 (id int,`ASENSITIVE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:192, sql:[insert into test1 (id,`ASENSITIVE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:193, sql:[select id,`ASENSITIVE` from test1 order by `ASENSITIVE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:194, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:195, sql:[create table test1 (id int,`BIGINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:196, sql:[insert into test1 (id,`BIGINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:197, sql:[select id,`BIGINT` from test1 order by `BIGINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:198, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:199, sql:[create table test1 (id int,`BOTH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:200, sql:[insert into test1 (id,`BOTH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:201, sql:[select id,`BOTH` from test1 order by `BOTH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:202, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:203, sql:[create table test1 (id int,`CASCADE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:204, sql:[insert into test1 (id,`CASCADE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:205, sql:[select id,`CASCADE` from test1 order by `CASCADE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:206, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:207, sql:[create table test1 (id int,`CHAR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:208, sql:[insert into test1 (id,`CHAR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:209, sql:[select id,`CHAR` from test1 order by `CHAR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:210, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:211, sql:[create table test1 (id int,`COLLATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:212, sql:[insert into test1 (id,`COLLATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:213, sql:[select id,`COLLATE` from test1 order by `COLLATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:214, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:215, sql:[create table test1 (id int,`CONSTRAINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:216, sql:[insert into test1 (id,`CONSTRAINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:217, sql:[select id,`CONSTRAINT` from test1 order by `CONSTRAINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:218, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:219, sql:[create table test1 (id int,`CREATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:220, sql:[insert into test1 (id,`CREATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:221, sql:[select id,`CREATE` from test1 order by `CREATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:222, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:223, sql:[create table test1 (id int,`CURRENT_TIME` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:224, sql:[insert into test1 (id,`CURRENT_TIME`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:225, sql:[select id,`CURRENT_TIME` from test1 order by `CURRENT_TIME` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:226, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:227, sql:[create table test1 (id int,`CURSOR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:228, sql:[insert into test1 (id,`CURSOR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:229, sql:[select id,`CURSOR` from test1 order by `CURSOR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:230, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:231, sql:[create table test1 (id int,`DAY_HOUR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:232, sql:[insert into test1 (id,`DAY_HOUR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:233, sql:[select id,`DAY_HOUR` from test1 order by `DAY_HOUR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:234, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:235, sql:[create table test1 (id int,`DAY_SECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:236, sql:[insert into test1 (id,`DAY_SECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:237, sql:[select id,`DAY_SECOND` from test1 order by `DAY_SECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:238, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:239, sql:[create table test1 (id int,`DECLARE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:240, sql:[insert into test1 (id,`DECLARE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:241, sql:[select id,`DECLARE` from test1 order by `DECLARE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:242, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:243, sql:[create table test1 (id int,`DELETE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:244, sql:[insert into test1 (id,`DELETE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:245, sql:[select id,`DELETE` from test1 order by `DELETE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:246, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:247, sql:[create table test1 (id int,`DETERMINISTIC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:248, sql:[insert into test1 (id,`DETERMINISTIC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:249, sql:[select id,`DETERMINISTIC` from test1 order by `DETERMINISTIC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:250, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:251, sql:[create table test1 (id int,`DIV` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:252, sql:[insert into test1 (id,`DIV`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:253, sql:[select id,`DIV` from test1 order by `DIV` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:254, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:255, sql:[create table test1 (id int,`DUAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:256, sql:[insert into test1 (id,`DUAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:257, sql:[select id,`DUAL` from test1 order by `DUAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:258, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:259, sql:[create table test1 (id int,`ELSEIF` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:260, sql:[insert into test1 (id,`ELSEIF`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:261, sql:[select id,`ELSEIF` from test1 order by `ELSEIF` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:262, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:263, sql:[create table test1 (id int,`EXISTS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:264, sql:[insert into test1 (id,`EXISTS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:265, sql:[select id,`EXISTS` from test1 order by `EXISTS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:266, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:267, sql:[create table test1 (id int,`FALSE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:268, sql:[insert into test1 (id,`FALSE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:269, sql:[select id,`FALSE` from test1 order by `FALSE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:270, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:271, sql:[create table test1 (id int,`FLOAT4` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:272, sql:[insert into test1 (id,`FLOAT4`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:273, sql:[select id,`FLOAT4` from test1 order by `FLOAT4` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:274, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:275, sql:[create table test1 (id int,`FORCE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:276, sql:[insert into test1 (id,`FORCE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:277, sql:[select id,`FORCE` from test1 order by `FORCE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:278, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:279, sql:[create table test1 (id int,`FULLTEXT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:280, sql:[insert into test1 (id,`FULLTEXT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:281, sql:[select id,`FULLTEXT` from test1 order by `FULLTEXT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:282, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:283, sql:[create table test1 (id int,`GROUP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:284, sql:[insert into test1 (id,`GROUP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:285, sql:[select id,`GROUP` from test1 order by `GROUP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:286, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:287, sql:[create table test1 (id int,`HOUR_MICROSECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:288, sql:[insert into test1 (id,`HOUR_MICROSECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:289, sql:[select id,`HOUR_MICROSECOND` from test1 order by `HOUR_MICROSECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:290, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:291, sql:[create table test1 (id int,`IF` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:292, sql:[insert into test1 (id,`IF`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:293, sql:[select id,`IF` from test1 order by `IF` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:294, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:295, sql:[create table test1 (id int,`INDEX` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:296, sql:[insert into test1 (id,`INDEX`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:297, sql:[select id,`INDEX` from test1 order by `INDEX` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:298, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:299, sql:[create table test1 (id int,`INOUT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:300, sql:[insert into test1 (id,`INOUT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:301, sql:[select id,`INOUT` from test1 order by `INOUT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:302, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:303, sql:[create table test1 (id int,`INT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:304, sql:[insert into test1 (id,`INT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:305, sql:[select id,`INT` from test1 order by `INT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:306, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:307, sql:[create table test1 (id int,`INT3` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:308, sql:[insert into test1 (id,`INT3`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:309, sql:[select id,`INT3` from test1 order by `INT3` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:310, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:311, sql:[create table test1 (id int,`INTEGER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:312, sql:[insert into test1 (id,`INTEGER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:313, sql:[select id,`INTEGER` from test1 order by `INTEGER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:314, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:315, sql:[create table test1 (id int,`IO_AFTER_GTIDS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:316, sql:[insert into test1 (id,`IO_AFTER_GTIDS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:317, sql:[select id,`IO_AFTER_GTIDS` from test1 order by `IO_AFTER_GTIDS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:318, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:319, sql:[create table test1 (id int,`ITERATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:320, sql:[insert into test1 (id,`ITERATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:321, sql:[select id,`ITERATE` from test1 order by `ITERATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:322, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:323, sql:[create table test1 (id int,`KEYS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:324, sql:[insert into test1 (id,`KEYS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:325, sql:[select id,`KEYS` from test1 order by `KEYS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:326, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:327, sql:[create table test1 (id int,`LEAVE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:328, sql:[insert into test1 (id,`LEAVE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:329, sql:[select id,`LEAVE` from test1 order by `LEAVE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:330, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:331, sql:[create table test1 (id int,`LIMIT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:332, sql:[insert into test1 (id,`LIMIT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:333, sql:[select id,`LIMIT` from test1 order by `LIMIT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:334, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:335, sql:[create table test1 (id int,`LOAD` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:336, sql:[insert into test1 (id,`LOAD`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:337, sql:[select id,`LOAD` from test1 order by `LOAD` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:338, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:339, sql:[create table test1 (id int,`LOCK` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:340, sql:[insert into test1 (id,`LOCK`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:341, sql:[select id,`LOCK` from test1 order by `LOCK` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:342, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:343, sql:[create table test1 (id int,`LONGTEXT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:344, sql:[insert into test1 (id,`LONGTEXT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:345, sql:[select id,`LONGTEXT` from test1 order by `LONGTEXT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:346, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:347, sql:[create table test1 (id int,`MASTER_BIND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:348, sql:[insert into test1 (id,`MASTER_BIND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:349, sql:[select id,`MASTER_BIND` from test1 order by `MASTER_BIND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:350, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:351, sql:[create table test1 (id int,`MAXVALUE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:352, sql:[insert into test1 (id,`MAXVALUE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:353, sql:[select id,`MAXVALUE` from test1 order by `MAXVALUE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:354, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:355, sql:[create table test1 (id int,`MEDIUMTEXT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:356, sql:[insert into test1 (id,`MEDIUMTEXT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:357, sql:[select id,`MEDIUMTEXT` from test1 order by `MEDIUMTEXT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:358, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:359, sql:[create table test1 (id int,`MINUTE_SECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:360, sql:[insert into test1 (id,`MINUTE_SECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:361, sql:[select id,`MINUTE_SECOND` from test1 order by `MINUTE_SECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:362, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:363, sql:[create table test1 (id int,`NATURAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:364, sql:[insert into test1 (id,`NATURAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:365, sql:[select id,`NATURAL` from test1 order by `NATURAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:366, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:367, sql:[create table test1 (id int,`NULL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:368, sql:[insert into test1 (id,`NULL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:369, sql:[select id,`NULL` from test1 order by `NULL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:370, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:371, sql:[create table test1 (id int,`OPTIMIZE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:372, sql:[insert into test1 (id,`OPTIMIZE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:373, sql:[select id,`OPTIMIZE` from test1 order by `OPTIMIZE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:374, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:375, sql:[create table test1 (id int,`OPTIONALLY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:376, sql:[insert into test1 (id,`OPTIONALLY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:377, sql:[select id,`OPTIONALLY` from test1 order by `OPTIONALLY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:378, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:379, sql:[create table test1 (id int,`OUT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:380, sql:[insert into test1 (id,`OUT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:381, sql:[select id,`OUT` from test1 order by `OUT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:382, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:383, sql:[create table test1 (id int,`PARTITION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:384, sql:[insert into test1 (id,`PARTITION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:385, sql:[select id,`PARTITION` from test1 order by `PARTITION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:386, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:387, sql:[create table test1 (id int,`PROCEDURE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:388, sql:[insert into test1 (id,`PROCEDURE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:389, sql:[select id,`PROCEDURE` from test1 order by `PROCEDURE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:390, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:391, sql:[create table test1 (id int,`READ` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:392, sql:[insert into test1 (id,`READ`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:393, sql:[select id,`READ` from test1 order by `READ` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:394, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:395, sql:[create table test1 (id int,`REAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:396, sql:[insert into test1 (id,`REAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:397, sql:[select id,`REAL` from test1 order by `REAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:398, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:399, sql:[create table test1 (id int,`RELEASE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:400, sql:[insert into test1 (id,`RELEASE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:401, sql:[select id,`RELEASE` from test1 order by `RELEASE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:402, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:403, sql:[create table test1 (id int,`REPLACE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:404, sql:[insert into test1 (id,`REPLACE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:405, sql:[select id,`REPLACE` from test1 order by `REPLACE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:406, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:407, sql:[create table test1 (id int,`RESTRICT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:408, sql:[insert into test1 (id,`RESTRICT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:409, sql:[select id,`RESTRICT` from test1 order by `RESTRICT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:410, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:411, sql:[create table test1 (id int,`RIGHT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:412, sql:[insert into test1 (id,`RIGHT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:413, sql:[select id,`RIGHT` from test1 order by `RIGHT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:414, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:415, sql:[create table test1 (id int,`SCHEMAS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:416, sql:[insert into test1 (id,`SCHEMAS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:417, sql:[select id,`SCHEMAS` from test1 order by `SCHEMAS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:418, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:419, sql:[create table test1 (id int,`SENSITIVE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:420, sql:[insert into test1 (id,`SENSITIVE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:421, sql:[select id,`SENSITIVE` from test1 order by `SENSITIVE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:422, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:423, sql:[create table test1 (id int,`SHOW` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:424, sql:[insert into test1 (id,`SHOW`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:425, sql:[select id,`SHOW` from test1 order by `SHOW` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:426, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:427, sql:[create table test1 (id int,`SPATIAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:428, sql:[insert into test1 (id,`SPATIAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:429, sql:[select id,`SPATIAL` from test1 order by `SPATIAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:430, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:431, sql:[create table test1 (id int,`SQLEXCEPTION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:432, sql:[insert into test1 (id,`SQLEXCEPTION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:433, sql:[select id,`SQLEXCEPTION` from test1 order by `SQLEXCEPTION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:434, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:435, sql:[create table test1 (id int,`SQL_BIG_RESULT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:436, sql:[insert into test1 (id,`SQL_BIG_RESULT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:437, sql:[select id,`SQL_BIG_RESULT` from test1 order by `SQL_BIG_RESULT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:438, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:439, sql:[create table test1 (id int,`SSL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:440, sql:[insert into test1 (id,`SSL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:441, sql:[select id,`SSL` from test1 order by `SSL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:442, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:443, sql:[create table test1 (id int,`TABLE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:444, sql:[insert into test1 (id,`TABLE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:445, sql:[select id,`TABLE` from test1 order by `TABLE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:446, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:447, sql:[create table test1 (id int,`TINYBLOB` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:448, sql:[insert into test1 (id,`TINYBLOB`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:449, sql:[select id,`TINYBLOB` from test1 order by `TINYBLOB` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:450, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:451, sql:[create table test1 (id int,`TO` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:452, sql:[insert into test1 (id,`TO`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:453, sql:[select id,`TO` from test1 order by `TO` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:454, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:455, sql:[create table test1 (id int,`TRUE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:456, sql:[insert into test1 (id,`TRUE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:457, sql:[select id,`TRUE` from test1 order by `TRUE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:458, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:459, sql:[create table test1 (id int,`UNIQUE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:460, sql:[insert into test1 (id,`UNIQUE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:461, sql:[select id,`UNIQUE` from test1 order by `UNIQUE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:462, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:463, sql:[create table test1 (id int,`UPDATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:464, sql:[insert into test1 (id,`UPDATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:465, sql:[select id,`UPDATE` from test1 order by `UPDATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:466, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:467, sql:[create table test1 (id int,`USING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:468, sql:[insert into test1 (id,`USING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:469, sql:[select id,`USING` from test1 order by `USING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:470, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:471, sql:[create table test1 (id int,`UTC_TIMESTAMP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:472, sql:[insert into test1 (id,`UTC_TIMESTAMP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:473, sql:[select id,`UTC_TIMESTAMP` from test1 order by `UTC_TIMESTAMP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:474, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:475, sql:[create table test1 (id int,`VARCHAR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:476, sql:[insert into test1 (id,`VARCHAR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:477, sql:[select id,`VARCHAR` from test1 order by `VARCHAR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:478, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:479, sql:[create table test1 (id int,`WHEN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:480, sql:[insert into test1 (id,`WHEN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:481, sql:[select id,`WHEN` from test1 order by `WHEN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:482, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:483, sql:[create table test1 (id int,`WITH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:484, sql:[insert into test1 (id,`WITH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:485, sql:[select id,`WITH` from test1 order by `WITH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:486, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:487, sql:[create table test1 (id int,`YEAR_MONTH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:488, sql:[insert into test1 (id,`YEAR_MONTH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:489, sql:[select id,`YEAR_MONTH` from test1 order by `YEAR_MONTH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:490, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:491, sql:[create table test1 (id int,`GENERAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:492, sql:[insert into test1 (id,`GENERAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:493, sql:[select id,`GENERAL` from test1 order by `GENERAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:494, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:495, sql:[create table test1 (id int,`IGNORE_SERVER_IDS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:496, sql:[insert into test1 (id,`IGNORE_SERVER_IDS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:497, sql:[select id,`IGNORE_SERVER_IDS` from test1 order by `IGNORE_SERVER_IDS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:498, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:499, sql:[create table test1 (id int,`MASTER_HEARTBEAT_PERIOD` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:500, sql:[insert into test1 (id,`MASTER_HEARTBEAT_PERIOD`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:501, sql:[select id,`MASTER_HEARTBEAT_PERIOD` from test1 order by `MASTER_HEARTBEAT_PERIOD` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:502, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:503, sql:[create table test1 (id int,`SLOW` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:504, sql:[insert into test1 (id,`SLOW`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:505, sql:[select id,`SLOW` from test1 order by `SLOW` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:506, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:507, sql:[create table test1 (id int,`ONE_SHOT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:508, sql:[insert into test1 (id,`ONE_SHOT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:509, sql:[select id,`ONE_SHOT` from test1 order by `ONE_SHOT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:510, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:511, sql:[create table test1 (id int,`SQL_AFTER_GTIDS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:512, sql:[insert into test1 (id,`SQL_AFTER_GTIDS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:513, sql:[select id,`SQL_AFTER_GTIDS` from test1 order by `SQL_AFTER_GTIDS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:514, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:515, sql:[create table test1 (id int,`SQL_BEFORE_GTIDS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:516, sql:[insert into test1 (id,`SQL_BEFORE_GTIDS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:517, sql:[select id,`SQL_BEFORE_GTIDS` from test1 order by `SQL_BEFORE_GTIDS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:518, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:519, sql:[create table test1 (id int,`ACCESSIBLE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:520, sql:[insert into test1 (id,`ACCESSIBLE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:521, sql:[select id,`ACCESSIBLE` from test1 order by `ACCESSIBLE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:522, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:523, sql:[create table test1 (id int,`ALTER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:524, sql:[insert into test1 (id,`ALTER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:525, sql:[select id,`ALTER` from test1 order by `ALTER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:526, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:527, sql:[create table test1 (id int,`AS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:528, sql:[insert into test1 (id,`AS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:529, sql:[select id,`AS` from test1 order by `AS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:530, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:531, sql:[create table test1 (id int,`BEFORE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:532, sql:[insert into test1 (id,`BEFORE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:533, sql:[select id,`BEFORE` from test1 order by `BEFORE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:534, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:535, sql:[create table test1 (id int,`BINARY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:536, sql:[insert into test1 (id,`BINARY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:537, sql:[select id,`BINARY` from test1 order by `BINARY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:538, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:539, sql:[create table test1 (id int,`BY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:540, sql:[insert into test1 (id,`BY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:541, sql:[select id,`BY` from test1 order by `BY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:542, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:543, sql:[create table test1 (id int,`CASE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:544, sql:[insert into test1 (id,`CASE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:545, sql:[select id,`CASE` from test1 order by `CASE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:546, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:547, sql:[create table test1 (id int,`CHARACTER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:548, sql:[insert into test1 (id,`CHARACTER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:549, sql:[select id,`CHARACTER` from test1 order by `CHARACTER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:550, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:551, sql:[create table test1 (id int,`COLUMN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:552, sql:[insert into test1 (id,`COLUMN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:553, sql:[select id,`COLUMN` from test1 order by `COLUMN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:554, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:555, sql:[create table test1 (id int,`CONTINUE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:556, sql:[insert into test1 (id,`CONTINUE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:557, sql:[select id,`CONTINUE` from test1 order by `CONTINUE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:558, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:559, sql:[create table test1 (id int,`CROSS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:560, sql:[insert into test1 (id,`CROSS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:561, sql:[select id,`CROSS` from test1 order by `CROSS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:562, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:563, sql:[create table test1 (id int,`CURRENT_TIMESTAMP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:564, sql:[insert into test1 (id,`CURRENT_TIMESTAMP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:565, sql:[select id,`CURRENT_TIMESTAMP` from test1 order by `CURRENT_TIMESTAMP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:566, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:567, sql:[create table test1 (id int,`DATABASE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:568, sql:[insert into test1 (id,`DATABASE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:569, sql:[select id,`DATABASE` from test1 order by `DATABASE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:570, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:571, sql:[create table test1 (id int,`DAY_MICROSECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:572, sql:[insert into test1 (id,`DAY_MICROSECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:573, sql:[select id,`DAY_MICROSECOND` from test1 order by `DAY_MICROSECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:574, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:575, sql:[create table test1 (id int,`DEC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:576, sql:[insert into test1 (id,`DEC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:577, sql:[select id,`DEC` from test1 order by `DEC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:578, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:579, sql:[create table test1 (id int,`DEFAULT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:580, sql:[insert into test1 (id,`DEFAULT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:581, sql:[select id,`DEFAULT` from test1 order by `DEFAULT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:582, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:583, sql:[create table test1 (id int,`DESC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:584, sql:[insert into test1 (id,`DESC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:585, sql:[select id,`DESC` from test1 order by `DESC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:586, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:587, sql:[create table test1 (id int,`DISTINCT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:588, sql:[insert into test1 (id,`DISTINCT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:589, sql:[select id,`DISTINCT` from test1 order by `DISTINCT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:590, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:591, sql:[create table test1 (id int,`DOUBLE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:592, sql:[insert into test1 (id,`DOUBLE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:593, sql:[select id,`DOUBLE` from test1 order by `DOUBLE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:594, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:595, sql:[create table test1 (id int,`EACH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:596, sql:[insert into test1 (id,`EACH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:597, sql:[select id,`EACH` from test1 order by `EACH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:598, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:599, sql:[create table test1 (id int,`ENCLOSED` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:600, sql:[insert into test1 (id,`ENCLOSED`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:601, sql:[select id,`ENCLOSED` from test1 order by `ENCLOSED` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:602, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:603, sql:[create table test1 (id int,`EXIT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:604, sql:[insert into test1 (id,`EXIT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:605, sql:[select id,`EXIT` from test1 order by `EXIT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:606, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:607, sql:[create table test1 (id int,`FETCH` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:608, sql:[insert into test1 (id,`FETCH`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:609, sql:[select id,`FETCH` from test1 order by `FETCH` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:610, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:611, sql:[create table test1 (id int,`FLOAT8` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:612, sql:[insert into test1 (id,`FLOAT8`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:613, sql:[select id,`FLOAT8` from test1 order by `FLOAT8` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:614, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:615, sql:[create table test1 (id int,`FOREIGN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:616, sql:[insert into test1 (id,`FOREIGN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:617, sql:[select id,`FOREIGN` from test1 order by `FOREIGN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:618, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:619, sql:[create table test1 (id int,`GET` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:620, sql:[insert into test1 (id,`GET`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:621, sql:[select id,`GET` from test1 order by `GET` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:622, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:623, sql:[create table test1 (id int,`HAVING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:624, sql:[insert into test1 (id,`HAVING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:625, sql:[select id,`HAVING` from test1 order by `HAVING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:626, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:627, sql:[create table test1 (id int,`HOUR_MINUTE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:628, sql:[insert into test1 (id,`HOUR_MINUTE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:629, sql:[select id,`HOUR_MINUTE` from test1 order by `HOUR_MINUTE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:630, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:631, sql:[create table test1 (id int,`IGNORE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:632, sql:[insert into test1 (id,`IGNORE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:633, sql:[select id,`IGNORE` from test1 order by `IGNORE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:634, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:635, sql:[create table test1 (id int,`INFILE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:636, sql:[insert into test1 (id,`INFILE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:637, sql:[select id,`INFILE` from test1 order by `INFILE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:638, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:639, sql:[create table test1 (id int,`INSENSITIVE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:640, sql:[insert into test1 (id,`INSENSITIVE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:641, sql:[select id,`INSENSITIVE` from test1 order by `INSENSITIVE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:642, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:643, sql:[create table test1 (id int,`INT1` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:644, sql:[insert into test1 (id,`INT1`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:645, sql:[select id,`INT1` from test1 order by `INT1` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:646, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:647, sql:[create table test1 (id int,`INT4` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:648, sql:[insert into test1 (id,`INT4`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:649, sql:[select id,`INT4` from test1 order by `INT4` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:650, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:651, sql:[create table test1 (id int,`INTERVAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:652, sql:[insert into test1 (id,`INTERVAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:653, sql:[select id,`INTERVAL` from test1 order by `INTERVAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:654, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:655, sql:[create table test1 (id int,`IO_BEFORE_GTIDS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:656, sql:[insert into test1 (id,`IO_BEFORE_GTIDS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:657, sql:[select id,`IO_BEFORE_GTIDS` from test1 order by `IO_BEFORE_GTIDS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:658, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:659, sql:[create table test1 (id int,`JOIN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:660, sql:[insert into test1 (id,`JOIN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:661, sql:[select id,`JOIN` from test1 order by `JOIN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:662, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:663, sql:[create table test1 (id int,`KILL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:664, sql:[insert into test1 (id,`KILL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:665, sql:[select id,`KILL` from test1 order by `KILL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:666, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:667, sql:[create table test1 (id int,`LEFT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:668, sql:[insert into test1 (id,`LEFT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:669, sql:[select id,`LEFT` from test1 order by `LEFT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:670, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:671, sql:[create table test1 (id int,`LINEAR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:672, sql:[insert into test1 (id,`LINEAR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:673, sql:[select id,`LINEAR` from test1 order by `LINEAR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:674, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:675, sql:[create table test1 (id int,`LOCALTIME` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:676, sql:[insert into test1 (id,`LOCALTIME`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:677, sql:[select id,`LOCALTIME` from test1 order by `LOCALTIME` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:678, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:679, sql:[create table test1 (id int,`LONG` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:680, sql:[insert into test1 (id,`LONG`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:681, sql:[select id,`LONG` from test1 order by `LONG` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:682, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:683, sql:[create table test1 (id int,`LOOP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:684, sql:[insert into test1 (id,`LOOP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:685, sql:[select id,`LOOP` from test1 order by `LOOP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:686, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:687, sql:[create table test1 (id int,`MASTER_SSL_VERIFY_SERVER_CERT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:688, sql:[insert into test1 (id,`MASTER_SSL_VERIFY_SERVER_CERT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:689, sql:[select id,`MASTER_SSL_VERIFY_SERVER_CERT` from test1 order by `MASTER_SSL_VERIFY_SERVER_CERT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:690, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:691, sql:[create table test1 (id int,`MEDIUMBLOB` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:692, sql:[insert into test1 (id,`MEDIUMBLOB`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:693, sql:[select id,`MEDIUMBLOB` from test1 order by `MEDIUMBLOB` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:694, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:695, sql:[create table test1 (id int,`MIDDLEINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:696, sql:[insert into test1 (id,`MIDDLEINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:697, sql:[select id,`MIDDLEINT` from test1 order by `MIDDLEINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:698, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:699, sql:[create table test1 (id int,`MOD` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:700, sql:[insert into test1 (id,`MOD`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:701, sql:[select id,`MOD` from test1 order by `MOD` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:702, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:703, sql:[create table test1 (id int,`NOT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:704, sql:[insert into test1 (id,`NOT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:705, sql:[select id,`NOT` from test1 order by `NOT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:706, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:707, sql:[create table test1 (id int,`NUMERIC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:708, sql:[insert into test1 (id,`NUMERIC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:709, sql:[select id,`NUMERIC` from test1 order by `NUMERIC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:710, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:711, sql:[create table test1 (id int,`OPTIMIZER_COSTS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:712, sql:[insert into test1 (id,`OPTIMIZER_COSTS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:713, sql:[select id,`OPTIMIZER_COSTS` from test1 order by `OPTIMIZER_COSTS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:714, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:715, sql:[create table test1 (id int,`OR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:716, sql:[insert into test1 (id,`OR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:717, sql:[select id,`OR` from test1 order by `OR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:718, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:719, sql:[create table test1 (id int,`OUTER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:720, sql:[insert into test1 (id,`OUTER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:721, sql:[select id,`OUTER` from test1 order by `OUTER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:722, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:723, sql:[create table test1 (id int,`PRECISION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:724, sql:[insert into test1 (id,`PRECISION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:725, sql:[select id,`PRECISION` from test1 order by `PRECISION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:726, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:727, sql:[create table test1 (id int,`PURGE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:728, sql:[insert into test1 (id,`PURGE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:729, sql:[select id,`PURGE` from test1 order by `PURGE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:730, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:731, sql:[create table test1 (id int,`READS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:732, sql:[insert into test1 (id,`READS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:733, sql:[select id,`READS` from test1 order by `READS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:734, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:735, sql:[create table test1 (id int,`REFERENCES` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:736, sql:[insert into test1 (id,`REFERENCES`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:737, sql:[select id,`REFERENCES` from test1 order by `REFERENCES` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:738, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:739, sql:[create table test1 (id int,`RENAME` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:740, sql:[insert into test1 (id,`RENAME`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:741, sql:[select id,`RENAME` from test1 order by `RENAME` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:742, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:743, sql:[create table test1 (id int,`REQUIRE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:744, sql:[insert into test1 (id,`REQUIRE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:745, sql:[select id,`REQUIRE` from test1 order by `REQUIRE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:746, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:747, sql:[create table test1 (id int,`RETURN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:748, sql:[insert into test1 (id,`RETURN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:749, sql:[select id,`RETURN` from test1 order by `RETURN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:750, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:751, sql:[create table test1 (id int,`RLIKE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:752, sql:[insert into test1 (id,`RLIKE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:753, sql:[select id,`RLIKE` from test1 order by `RLIKE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:754, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:755, sql:[create table test1 (id int,`SECOND_MICROSECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:756, sql:[insert into test1 (id,`SECOND_MICROSECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:757, sql:[select id,`SECOND_MICROSECOND` from test1 order by `SECOND_MICROSECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:758, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:759, sql:[create table test1 (id int,`SEPARATOR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:760, sql:[insert into test1 (id,`SEPARATOR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:761, sql:[select id,`SEPARATOR` from test1 order by `SEPARATOR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:762, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:763, sql:[create table test1 (id int,`SIGNAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:764, sql:[insert into test1 (id,`SIGNAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:765, sql:[select id,`SIGNAL` from test1 order by `SIGNAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:766, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:767, sql:[create table test1 (id int,`SPECIFIC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:768, sql:[insert into test1 (id,`SPECIFIC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:769, sql:[select id,`SPECIFIC` from test1 order by `SPECIFIC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:770, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:771, sql:[create table test1 (id int,`SQLSTATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:772, sql:[insert into test1 (id,`SQLSTATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:773, sql:[select id,`SQLSTATE` from test1 order by `SQLSTATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:774, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:775, sql:[create table test1 (id int,`SQL_CALC_FOUND_ROWS` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:776, sql:[insert into test1 (id,`SQL_CALC_FOUND_ROWS`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:777, sql:[select id,`SQL_CALC_FOUND_ROWS` from test1 order by `SQL_CALC_FOUND_ROWS` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:778, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:779, sql:[create table test1 (id int,`STARTING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:780, sql:[insert into test1 (id,`STARTING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:781, sql:[select id,`STARTING` from test1 order by `STARTING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:782, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:783, sql:[create table test1 (id int,`TERMINATED` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:784, sql:[insert into test1 (id,`TERMINATED`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:785, sql:[select id,`TERMINATED` from test1 order by `TERMINATED` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:786, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:787, sql:[create table test1 (id int,`TINYINT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:788, sql:[insert into test1 (id,`TINYINT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:789, sql:[select id,`TINYINT` from test1 order by `TINYINT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:790, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:791, sql:[create table test1 (id int,`TRAILING` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:792, sql:[insert into test1 (id,`TRAILING`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:793, sql:[select id,`TRAILING` from test1 order by `TRAILING` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:794, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:795, sql:[create table test1 (id int,`UNDO` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:796, sql:[insert into test1 (id,`UNDO`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:797, sql:[select id,`UNDO` from test1 order by `UNDO` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:798, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:799, sql:[create table test1 (id int,`UNLOCK` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:800, sql:[insert into test1 (id,`UNLOCK`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:801, sql:[select id,`UNLOCK` from test1 order by `UNLOCK` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:802, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:803, sql:[create table test1 (id int,`USAGE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:804, sql:[insert into test1 (id,`USAGE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:805, sql:[select id,`USAGE` from test1 order by `USAGE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:806, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:807, sql:[create table test1 (id int,`UTC_DATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:808, sql:[insert into test1 (id,`UTC_DATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:809, sql:[select id,`UTC_DATE` from test1 order by `UTC_DATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:810, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:811, sql:[create table test1 (id int,`VALUES` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:812, sql:[insert into test1 (id,`VALUES`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:813, sql:[select id,`VALUES` from test1 order by `VALUES` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:814, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:815, sql:[create table test1 (id int,`VARCHARACTER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:816, sql:[insert into test1 (id,`VARCHARACTER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:817, sql:[select id,`VARCHARACTER` from test1 order by `VARCHARACTER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:818, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:819, sql:[create table test1 (id int,`WHERE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:820, sql:[insert into test1 (id,`WHERE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:821, sql:[select id,`WHERE` from test1 order by `WHERE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:822, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:823, sql:[create table test1 (id int,`WRITE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:824, sql:[insert into test1 (id,`WRITE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:825, sql:[select id,`WRITE` from test1 order by `WRITE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:826, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:827, sql:[create table test1 (id int,`ZEROFILL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:828, sql:[insert into test1 (id,`ZEROFILL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:829, sql:[select id,`ZEROFILL` from test1 order by `ZEROFILL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:830, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:831, sql:[create table test1 (id int,`ADD` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:832, sql:[insert into test1 (id,`ADD`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:833, sql:[select id,`ADD` from test1 order by `ADD` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:834, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:835, sql:[create table test1 (id int,`ANALYZE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:836, sql:[insert into test1 (id,`ANALYZE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:837, sql:[select id,`ANALYZE` from test1 order by `ANALYZE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:838, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:839, sql:[create table test1 (id int,`ASC` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:840, sql:[insert into test1 (id,`ASC`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:841, sql:[select id,`ASC` from test1 order by `ASC` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:842, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:843, sql:[create table test1 (id int,`BETWEEN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:844, sql:[insert into test1 (id,`BETWEEN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:845, sql:[select id,`BETWEEN` from test1 order by `BETWEEN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:846, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:847, sql:[create table test1 (id int,`BLOB` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:848, sql:[insert into test1 (id,`BLOB`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:849, sql:[select id,`BLOB` from test1 order by `BLOB` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:850, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:851, sql:[create table test1 (id int,`CALL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:852, sql:[insert into test1 (id,`CALL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:853, sql:[select id,`CALL` from test1 order by `CALL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:854, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:855, sql:[create table test1 (id int,`CHANGE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:856, sql:[insert into test1 (id,`CHANGE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:857, sql:[select id,`CHANGE` from test1 order by `CHANGE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:858, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:859, sql:[create table test1 (id int,`CHECK` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:860, sql:[insert into test1 (id,`CHECK`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:861, sql:[select id,`CHECK` from test1 order by `CHECK` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:862, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:863, sql:[create table test1 (id int,`CONDITION` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:864, sql:[insert into test1 (id,`CONDITION`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:865, sql:[select id,`CONDITION` from test1 order by `CONDITION` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:866, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:867, sql:[create table test1 (id int,`CONVERT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:868, sql:[insert into test1 (id,`CONVERT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:869, sql:[select id,`CONVERT` from test1 order by `CONVERT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:870, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:871, sql:[create table test1 (id int,`CURRENT_DATE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:872, sql:[insert into test1 (id,`CURRENT_DATE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:873, sql:[select id,`CURRENT_DATE` from test1 order by `CURRENT_DATE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:874, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:875, sql:[create table test1 (id int,`CURRENT_USER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:876, sql:[insert into test1 (id,`CURRENT_USER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:877, sql:[select id,`CURRENT_USER` from test1 order by `CURRENT_USER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:878, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:879, sql:[create table test1 (id int,`DATABASES` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:880, sql:[insert into test1 (id,`DATABASES`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:881, sql:[select id,`DATABASES` from test1 order by `DATABASES` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:882, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:883, sql:[create table test1 (id int,`DAY_MINUTE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:884, sql:[insert into test1 (id,`DAY_MINUTE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:885, sql:[select id,`DAY_MINUTE` from test1 order by `DAY_MINUTE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:886, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:887, sql:[create table test1 (id int,`DECIMAL` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:888, sql:[insert into test1 (id,`DECIMAL`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:889, sql:[select id,`DECIMAL` from test1 order by `DECIMAL` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:890, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:891, sql:[create table test1 (id int,`DELAYED` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:892, sql:[insert into test1 (id,`DELAYED`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:893, sql:[select id,`DELAYED` from test1 order by `DELAYED` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:894, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:895, sql:[create table test1 (id int,`DESCRIBE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:896, sql:[insert into test1 (id,`DESCRIBE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:897, sql:[select id,`DESCRIBE` from test1 order by `DESCRIBE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:898, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:899, sql:[create table test1 (id int,`DISTINCTROW` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:900, sql:[insert into test1 (id,`DISTINCTROW`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:901, sql:[select id,`DISTINCTROW` from test1 order by `DISTINCTROW` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:902, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:903, sql:[create table test1 (id int,`DROP` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:904, sql:[insert into test1 (id,`DROP`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:905, sql:[select id,`DROP` from test1 order by `DROP` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:906, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:907, sql:[create table test1 (id int,`ELSE` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:908, sql:[insert into test1 (id,`ELSE`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:909, sql:[select id,`ELSE` from test1 order by `ELSE` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:910, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:911, sql:[create table test1 (id int,`ESCAPED` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:912, sql:[insert into test1 (id,`ESCAPED`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:913, sql:[select id,`ESCAPED` from test1 order by `ESCAPED` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:914, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:915, sql:[create table test1 (id int,`EXPLAIN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:916, sql:[insert into test1 (id,`EXPLAIN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:917, sql:[select id,`EXPLAIN` from test1 order by `EXPLAIN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:918, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:919, sql:[create table test1 (id int,`FLOAT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:920, sql:[insert into test1 (id,`FLOAT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:921, sql:[select id,`FLOAT` from test1 order by `FLOAT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:922, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:923, sql:[create table test1 (id int,`FOR` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:924, sql:[insert into test1 (id,`FOR`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:925, sql:[select id,`FOR` from test1 order by `FOR` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:926, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:927, sql:[create table test1 (id int,`FROM` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:928, sql:[insert into test1 (id,`FROM`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:929, sql:[select id,`FROM` from test1 order by `FROM` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:930, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:931, sql:[create table test1 (id int,`GRANT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:932, sql:[insert into test1 (id,`GRANT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:933, sql:[select id,`GRANT` from test1 order by `GRANT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:934, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:935, sql:[create table test1 (id int,`HIGH_PRIORITY` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:936, sql:[insert into test1 (id,`HIGH_PRIORITY`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:937, sql:[select id,`HIGH_PRIORITY` from test1 order by `HIGH_PRIORITY` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:938, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:939, sql:[create table test1 (id int,`HOUR_SECOND` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:940, sql:[insert into test1 (id,`HOUR_SECOND`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:941, sql:[select id,`HOUR_SECOND` from test1 order by `HOUR_SECOND` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:942, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:943, sql:[create table test1 (id int,`IN` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:944, sql:[insert into test1 (id,`IN`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:945, sql:[select id,`IN` from test1 order by `IN` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:946, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:947, sql:[create table test1 (id int,`INNER` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:948, sql:[insert into test1 (id,`INNER`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:949, sql:[select id,`INNER` from test1 order by `INNER` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:950, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:951, sql:[create table test1 (id int,`INSERT` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:952, sql:[insert into test1 (id,`INSERT`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:953, sql:[select id,`INSERT` from test1 order by `INSERT` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:954, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:955, sql:[create table test1 (id int,`INT2` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:956, sql:[insert into test1 (id,`INT2`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:957, sql:[select id,`INT2` from test1 order by `INT2` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:958, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:959, sql:[create table test1 (id int,`INT8` int)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:960, sql:[insert into test1 (id,`INT8`) values (1,1),(2,3),(3,4),(4,5)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:961, sql:[select id,`INT8` from test1 order by `INT8` limit 10]===
dble:[((1L, 1L), (2L, 3L), (3L, 4L), (4L, 5L))]
===file:sqls_util/syntax/reserved_words.sql, id:962, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:963, sql:[create table test1 (id int,`change` char(10),`primary` int(10) primary key)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:964, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:965, sql:[create table test1 (id int,`change` char(10),`primary` int(10) primary key)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:966, sql:[insert into test1(id,`change`,`primary`) values (1,'test001',11),(2,'test002',22),(3,'test003',33)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:967, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:968, sql:[create table test1(id int,`change` char(10),`primary` int(10) primary key)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:969, sql:[insert into test1(id,`change`,`primary`) values (1,'test001',11),(2,'test002',22),(3,'test003',33)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:970, sql:[create index `change` on test1(id)]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:971, sql:[show index from test1]===
dble:[[('test1', 0L, 'PRIMARY', 1L, 'primary', 'A', 3L, None, None, '', 'BTREE', '', ''), ('test1', 1L, 'change', 1L, 'id', 'A', 3L, None, None, 'YES', 'BTREE', '', '')]]
===file:sqls_util/syntax/reserved_words.sql, id:972, sql:[drop index `change` on test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:973, sql:[show index from test1]===
dble:[[('test1', 0L, 'PRIMARY', 1L, 'primary', 'A', 1L, None, None, '', 'BTREE', '', '')]]
===file:sqls_util/syntax/reserved_words.sql, id:975, sql:[drop table if exists `select`]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:978, sql:[show tables /*allow_diff*/]===
dble:[[('drop',), ('test1',)]]
mysql:[[('drop',), ('select',), ('test1',)]]
===file:sqls_util/syntax/reserved_words.sql, id:979, sql:[show table status /*allow_diff*/]===
dble:[[('test1', 'InnoDB', '10', 'Compact', '0', '0', '16384', '0', '0', '0', '', None, None, None, 'utf8_general_ci', '', '', '')]]
mysql:[[('drop', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'VIEW'), ('select', 'InnoDB', 10L, 'Dynamic', 0L, 0L, 16384L, 0L, 0L, 0L, None, datetime.datetime(2019, 2, 13, 14, 53, 23), None, None, 'latin1_swedish_ci', None, '', ''), ('test1', 'InnoDB', 10L, 'Dynamic', 3L, 5461L, 16384L, 0L, 0L, 0L, None, datetime.datetime(2019, 2, 13, 14, 53, 22), datetime.datetime(2019, 2, 13, 14, 53, 22), None, 'latin1_swedish_ci', None, '', '')]]
===file:sqls_util/syntax/reserved_words.sql, id:988, sql:[show create view `drop` /*allow_diff*/]===
dble:[[('drop', 'create view drop as  select id from `select`', 'latin1', 'latin1_swedish_ci')]]
mysql:[[('drop', 'CREATE ALGORITHM=UNDEFINED DEFINER=`test`@`%` SQL SECURITY DEFINER VIEW `drop` AS select `select`.`id` AS `id` from `select`', 'latin1', 'latin1_swedish_ci')]]
===file:sqls_util/syntax/reserved_words.sql, id:993, sql:[drop table if exists test1]===
dble:[[]]
===file:sqls_util/syntax/reserved_words.sql, id:994, sql:[drop table if exists `select`]===
dble:[[]]
